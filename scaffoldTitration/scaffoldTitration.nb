(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    487362,      10374]
NotebookOptionsPosition[    483562,      10247]
NotebookOutlinePosition[    483917,      10263]
CellTagsIndexPosition[    483874,      10260]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Scaffold protein titration motif", "Title",
 CellChangeTimes->{{3.6430002271357613`*^9, 3.6430002342704477`*^9}}],

Cell[CellGroupData[{

Cell["The model description", "Section",
 CellChangeTimes->{{3.643000294588601*^9, 3.643000299851523*^9}}],

Cell[TextData[{
 "This particular motif describe one phosphorylation-desphosphorylation cycle \
(can be generalized to any futile cycles) with both kinase ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "K"}], TraditionalForm]]],
 ") and phosphatase ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "P"}], TraditionalForm]]],
 ") can be titrated by a scaffold protein ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "T"}], TraditionalForm]]],
 ").\n\n",
 StyleBox["K + S \[Equilibrium] KS \[RightArrow] K + ", "DisplayFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["S", "p"], TraditionalForm]], "DisplayFormula"], 
  "DisplayFormula"],
 StyleBox["\nP + ", "DisplayFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "p"], " ", "\[Equilibrium]", " ", 
    SubscriptBox["PS", "p"]}], TraditionalForm]], "DisplayFormula"], 
  "DisplayFormula"],
 StyleBox[" \[RightArrow] P + S\nT + K \[Equilibrium] TK\nT + P \
\[Equilibrium] TP", "DisplayFormula"],
 "\n\nThe above reactions show a simple system that composed of one scaffold \
protein, one kinase, one phosphatase and one substrate. Here we try to \
descibe this simple system with differential equation following the mass \
action kinetics.\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "K", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "P", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
         SubscriptBox["S", "p"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "S", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", 
         SubscriptBox["S", "p"], "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
         SubscriptBox["S", "p"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "KS", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}], "-", 
       
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", 
         SubscriptBox["PS", "p"], "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
        SubscriptBox["S", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "T", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "TK", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}], "-", 
       
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "TP", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "-", 
       
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}], "."}]}]}]}], 
    "DisplayFormula"], TraditionalForm]]],
 "\n\nAnd the system need to follow these conservation equations:\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"[", "K", "]"}], "+", 
       RowBox[{"[", "KS", "]"}], "+", 
       RowBox[{"[", "TK", "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["K", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "P", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["PS", "p"], "]"}], "+", 
       RowBox[{"[", "TP", "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["P", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "S", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["S", "p"], "]"}], "+", 
       RowBox[{"[", "KS", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["PS", "p"], "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["S", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "T", "]"}], "+", 
       RowBox[{"[", "TK", "]"}], "+", 
       RowBox[{"[", "TP", "]"}]}], "=", 
      RowBox[{
       RowBox[{"[", 
        SubscriptBox["T", "tot"], "]"}], "."}]}]}], "DisplayFormula"], 
   TraditionalForm]]],
 "\n\nIn the following setion, we will solve the differential equations to \
understand the dynamics and behaviour of such system."
}], "Text",
 CellChangeTimes->{{3.64300032946461*^9, 3.643000411949408*^9}, 
   3.643000765009842*^9, {3.643000801521837*^9, 3.643000819809833*^9}, {
   3.6430008671825657`*^9, 3.643000900906423*^9}, {3.6430009876621447`*^9, 
   3.643001018130637*^9}, {3.643001148803453*^9, 3.643001408094447*^9}, {
   3.643001469379396*^9, 3.64300206984488*^9}, {3.643002302021605*^9, 
   3.64300248368265*^9}, {3.6430028896311207`*^9, 3.643002995076975*^9}, {
   3.643008434602817*^9, 3.6430084533503437`*^9}, {3.643008493769312*^9, 
   3.64300854988597*^9}, {3.643646793285623*^9, 3.64364685611843*^9}, {
   3.64364714847932*^9, 3.64364714849518*^9}, {3.643697127170084*^9, 
   3.643697217776668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understanding the dynamics of this simple system at steady states\
\>", "Section",
 CellChangeTimes->{{3.643008555381485*^9, 3.643008583516593*^9}, {
  3.6433655530615463`*^9, 3.643365557234893*^9}}],

Cell[TextData[StyleBox["The reactions are:", "DisplayFormula"]], "Text",
 CellChangeTimes->{{3.643361856288289*^9, 3.6433618645906973`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"K", "+", "S"}], "\[Equilibrium]", "KS"}], "\[RightArrow]", 
  RowBox[{"K", "+", 
   SubscriptBox["S", "p"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "+", 
    SubscriptBox["S", "p"]}], "\[Equilibrium]", 
   SubscriptBox["PS", "p"]}], "\[RightArrow]", 
  RowBox[{"P", "+", "S"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "+", "K"}], "\[Equilibrium]", "TK"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "+", "P"}], "\[Equilibrium]", "TP"}]}], "DisplayFormula",
 CellChangeTimes->{{3.6433618774715548`*^9, 3.6433619330526648`*^9}, {
  3.6433620036273327`*^9, 3.6433620088325567`*^9}, {3.643362129281958*^9, 
  3.6433622183967943`*^9}}],

Cell["The species are:", "Text",
 CellChangeTimes->{{3.643008589316565*^9, 3.643008598380373*^9}, {
  3.643008653866585*^9, 3.643008686730983*^9}, {3.643361831457127*^9, 
  3.6433618516152163`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"K", 
    RowBox[{"(", "1", ")"}]}], ",", 
   RowBox[{"P", 
    RowBox[{"(", "2", ")"}]}], ",", 
   RowBox[{"S", 
    RowBox[{"(", "3", ")"}]}], ",", 
   RowBox[{
    SubscriptBox["S", "p"], 
    RowBox[{"(", "4", ")"}]}], ",", 
   RowBox[{"KS", 
    RowBox[{"(", "5", ")"}]}], ",", 
   RowBox[{
    SubscriptBox["PS", "p"], 
    RowBox[{"(", "6", ")"}]}], ",", 
   RowBox[{"T", 
    RowBox[{"(", "7", ")"}]}], ",", 
   RowBox[{"TK", 
    RowBox[{"(", "8", ")"}]}], ",", 
   RowBox[{"TP", 
    RowBox[{"(", "9", ")"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{{3.643008711850252*^9, 3.64300877181549*^9}, {
  3.6433622575002604`*^9, 3.643362310785508*^9}}],

Cell["Here we have the differential equations:", "Text",
 CellChangeTimes->{{3.643008691634817*^9, 3.6430086930249767`*^9}, {
  3.643362288361381*^9, 3.643362297585257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "10", "}"}], ",", 
     RowBox[{"{", "9", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "9", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "10", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stoiM", "=", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], 
      RowBox[{"x", "[", "1", "]"}], 
      RowBox[{"x", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], 
      RowBox[{"x", "[", "5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], 
      RowBox[{"x", "[", "5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "4", "]"}], 
      RowBox[{"x", "[", "2", "]"}], 
      RowBox[{"x", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], 
      RowBox[{"x", "[", "6", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "6", "]"}], 
      RowBox[{"x", "[", "6", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "7", "]"}], 
      RowBox[{"x", "[", "1", "]"}], 
      RowBox[{"x", "[", "7", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "8", "]"}], 
      RowBox[{"x", "[", "8", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "9", "]"}], 
      RowBox[{"x", "[", "2", "]"}], 
      RowBox[{"x", "[", "7", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "10", "]"}], 
      RowBox[{"x", "[", "9", "]"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eqns", "=", 
  RowBox[{"stoiM", ".", "ks"}]}], "\[IndentingNewLine]", 
 RowBox[{"mC", "=", 
  RowBox[{"RowReduce", "[", 
   RowBox[{"NullSpace", "[", "A", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.643361674632876*^9, 3.64336167547089*^9}, {
   3.6433617147367992`*^9, 3.643361793985777*^9}, {3.643362243655946*^9, 
   3.643362247349186*^9}, {3.643362322283595*^9, 3.6433624330175447`*^9}, {
   3.643362579076962*^9, 3.643362783772904*^9}, {3.643364279187258*^9, 
   3.643364414971779*^9}, {3.643364485773497*^9, 3.643364582982481*^9}, 
   3.643365235208138*^9, {3.643366034988674*^9, 3.643366061592079*^9}, {
   3.643640722487113*^9, 3.643640763697342*^9}, {3.6436412284096212`*^9, 
   3.643641256215787*^9}, {3.6436467933139343`*^9, 3.643646856126409*^9}, 
   3.643647148506926*^9, {3.643697127204623*^9, 3.643697217569248*^9}, {
   3.643707638380756*^9, 3.643707647399872*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "4", "]"}]}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "4", "]"}]}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "4", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "7", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.643697228547863*^9, 3.643707655915979*^9, 
  3.643727070281424*^9, 3.643727103241551*^9, 3.6437299887519083`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643697228547863*^9, 3.643707655915979*^9, 
  3.643727070281424*^9, 3.643727103241551*^9, 3.6437299887598257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsEqns", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"eqns", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "6", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "8", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "9", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "+", 
     RowBox[{"x", "[", "5", "]"}], "+", 
     RowBox[{"x", "[", "8", "]"}], "-", 
     SubscriptBox["T", "1"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "+", 
     RowBox[{"x", "[", "6", "]"}], "+", 
     RowBox[{"x", "[", "9", "]"}], "-", 
     SubscriptBox["T", "2"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "+", 
     RowBox[{"x", "[", "4", "]"}], "+", 
     RowBox[{"x", "[", "5", "]"}], "+", 
     RowBox[{"x", "[", "6", "]"}], "-", 
     SubscriptBox["T", "3"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "7", "]"}], "+", 
     RowBox[{"x", "[", "8", "]"}], "+", 
     RowBox[{"x", "[", "9", "]"}], "-", 
     SubscriptBox["T", "4"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.643364605281082*^9, 3.643364619344001*^9}, {
  3.643366139136932*^9, 3.643366283768693*^9}, {3.643640722562899*^9, 
  3.64364076377914*^9}, {3.643641228479548*^9, 3.643641256245201*^9}, {
  3.643727058121121*^9, 3.643727063267198*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "4", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "1"]}], "+", 
    RowBox[{"x", "[", "1", "]"}], "+", 
    RowBox[{"x", "[", "5", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "2"]}], "+", 
    RowBox[{"x", "[", "2", "]"}], "+", 
    RowBox[{"x", "[", "6", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "3"]}], "+", 
    RowBox[{"x", "[", "3", "]"}], "+", 
    RowBox[{"x", "[", "4", "]"}], "+", 
    RowBox[{"x", "[", "5", "]"}], "+", 
    RowBox[{"x", "[", "6", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "4"]}], "+", 
    RowBox[{"x", "[", "7", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6436972514988937`*^9, 3.6437076615339603`*^9, {3.6437270734439707`*^9, 
   3.643727105456304*^9}, 3.6437299916761847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], ",", 
      RowBox[{"x", "[", "5", "]"}], ",", 
      RowBox[{"x", "[", "6", "]"}], ",", 
      RowBox[{"x", "[", "8", "]"}], ",", 
      RowBox[{"x", "[", "9", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643366336179184*^9, 3.64336643459307*^9}, {
   3.643640752051255*^9, 3.6436407634656973`*^9}, {3.6436412281683064`*^9, 
   3.643641256270884*^9}, 3.643727096166057*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], "+", 
         RowBox[{"k", "[", "3", "]"}]}], ")"}], " ", 
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"k", "[", "6", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], " ", 
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "+", 
         RowBox[{"k", "[", "6", "]"}]}], ")"}], " ", 
       RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"k", "[", "6", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "+", 
         RowBox[{"k", "[", "6", "]"}]}], ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "5", "]"}], "+", 
       RowBox[{"k", "[", "6", "]"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "7", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], 
      RowBox[{"k", "[", "8", "]"}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "9", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], 
      RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.643697261522545*^9, 3.643707663590868*^9, {3.643727086234314*^9, 
   3.643727108089735*^9}, 3.643727190909494*^9, 3.643729992996666*^9}]
}, Open  ]],

Cell["Here we substitue the composited parameters:", "Text",
 CellChangeTimes->{{3.64372600591439*^9, 3.643726021032902*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "+", 
      RowBox[{"k", "[", "3", "]"}]}], 
     RowBox[{"k", "[", "1", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], "+", 
      RowBox[{"k", "[", "6", "]"}]}], 
     RowBox[{"k", "[", "4", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "2", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "6", "]"}], 
     RowBox[{"k", "[", "3", "]"}]], "\[Rule]", "kcr"}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "7", "]"}], 
     RowBox[{"k", "[", "8", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "9", "]"}], 
     RowBox[{"k", "[", "10", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "2", "]"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{
  3.643726034310108*^9, {3.6437273118471737`*^9, 3.6437273139827642`*^9}}],

Cell["Then we have:", "Text",
 CellChangeTimes->{{3.6437260525276737`*^9, 3.64372605806367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Following", " ", "the", " ", "current", " ", "solution"}], ",", 
    " ", 
    RowBox[{"and", " ", "substitute", " ", "the", " ", 
     SubscriptBox["T", "1"]}], ",", 
    SubscriptBox["T", "2"], ",", 
    SubscriptBox["T", "3"], ",", 
    SubscriptBox["T", "4"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"solution", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"km", "[", "1", "]"}], "*", "kcr", "*", " ", 
        RowBox[{"x", "[", "2", "]"}], "*", " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "*", " ", 
        RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}]}], 
       RowBox[{"km", "[", "2", "]"}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.643640722600461*^9, 3.643640763472082*^9}, {
   3.643641228182201*^9, 3.6436412562804193`*^9}, {3.643642669644499*^9, 
   3.6436427334075613`*^9}, {3.643646793519215*^9, 3.6436468560105743`*^9}, 
   3.643647148417572*^9, {3.643697127428403*^9, 3.6436972177044983`*^9}, {
   3.643727243034295*^9, 3.643727375498589*^9}, {3.643729411519258*^9, 
   3.643729417570405*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{"km", "[", "2", "]"}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{"km", "[", "2", "]"}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437294182928953`*^9, 3.643729997635726*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t12", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", "1", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "+", 
       RowBox[{"x", "[", "5", "]"}], "+", 
       RowBox[{"x", "[", "8", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"T", "[", "2", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "6", "]"}], "+", 
       RowBox[{"x", "[", "9", "]"}]}]}]}], "}"}], "/.", 
   "solution"}]}]], "Input",
 CellChangeTimes->{{3.643729388128778*^9, 3.64372942282086*^9}, {
  3.643729472061891*^9, 3.643729475970663*^9}, {3.643729530389345*^9, 
  3.643729567098056*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"T", "[", "1", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "+", 
     FractionBox[
      RowBox[{"kcr", " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{"km", "[", "2", "]"}]], "+", 
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"T", "[", "2", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{"km", "[", "2", "]"}]], "+", 
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6437295586641283`*^9, 3.64372956755264*^9}, 
   3.643729999273538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "t12Sol", "}"}], "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"t12", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643729484882173*^9, 3.643729497997676*^9}, {
  3.643729564265799*^9, 3.643729603911234*^9}, {3.6437296790898323`*^9, 
  3.643729684602027*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"kd", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"km", "[", "2", "]"}], "+", 
          RowBox[{"x", "[", "4", "]"}], "+", 
          RowBox[{
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "2", "]"}]}], 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.643729577150885*^9, 3.643729605800269*^9}, 
   3.64372968582668*^9, 3.643729926266252*^9, 3.643730001000543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t12Sol"], "Input",
 CellChangeTimes->{{3.643729966127366*^9, 3.643729967591215*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"km", "[", "2", "]"}]}], " ", 
        RowBox[{"T", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "+", 
       RowBox[{"kcr", " ", 
        RowBox[{"T", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "-", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"kd", "[", "1", "]"}], " ", 
          RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"km", "[", "2", "]"}], "+", 
         RowBox[{"x", "[", "4", "]"}], "+", 
         RowBox[{
          RowBox[{"kd", "[", "2", "]"}], " ", 
          RowBox[{"km", "[", "2", "]"}], " ", 
          RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "2", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437299681327667`*^9, 3.643730002740101*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "[", "7", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}], ")"}], "/.", "solution"}]], "Input",
 CellChangeTimes->{{3.6437298042791243`*^9, 3.643729806421791*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "7", "]"}], "+", 
  RowBox[{
   RowBox[{"kd", "[", "1", "]"}], " ", 
   RowBox[{"x", "[", "1", "]"}], " ", 
   RowBox[{"x", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"kd", "[", "2", "]"}], " ", 
   RowBox[{"x", "[", "2", "]"}], " ", 
   RowBox[{"x", "[", "7", "]"}]}]}]], "Output",
 CellChangeTimes->{3.643729807142145*^9, 3.643729928925167*^9, 
  3.643730004508412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "3", "]"}], "+", 
   RowBox[{"x", "[", "4", "]"}], "+", 
   RowBox[{"x", "[", "5", "]"}], "+", 
   RowBox[{"x", "[", "6", "]"}]}], "/.", "solution"}]], "Input",
 CellChangeTimes->{{3.643730153902314*^9, 3.643730170584859*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "4", "]"}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{"km", "[", "2", "]"}]], "+", 
  FractionBox[
   RowBox[{"kcr", " ", 
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{"km", "[", "2", "]"}]], "+", 
  FractionBox[
   RowBox[{"kcr", " ", 
    RowBox[{"km", "[", "1", "]"}], " ", 
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{
    RowBox[{"km", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "1", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.6437301712256603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t3", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"T", "[", "3", "]"}], "==", 
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]], "+", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]], "+", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"km", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "1", "]"}]}]]}]}], "}"}], "/.", 
   "t12Sol"}]}]], "Input",
 CellChangeTimes->{{3.6437301249675903`*^9, 3.643730133058387*^9}, {
  3.6437301804933233`*^9, 3.643730189448743*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"T", "[", "3", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"x", "[", "4", "]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "+", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"km", "[", "2", "]"}]}], " ", 
       RowBox[{"T", "[", "1", "]"}]}], "-", 
      RowBox[{
       RowBox[{"T", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], "+", 
      RowBox[{"kcr", " ", 
       RowBox[{"T", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437301904351683`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"t32", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"km", "[", "2", "]"}]}], " ", 
        RowBox[{"T", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "+", 
       RowBox[{"kcr", " ", 
        RowBox[{"T", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "-", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"T", "[", "3", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"x", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", "kcr", " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", "kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.643743273203521*^9, 3.643743438651905*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t4", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"T", "[", "4", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}], "/.", "t12Sol"}]}]], "Input",\

 CellChangeTimes->{{3.643729614874198*^9, 3.6437296705307827`*^9}, {
   3.6437297008731537`*^9, 3.6437297209263906`*^9}, {3.643729785929903*^9, 
   3.643729888089787*^9}, 3.6437299440875187`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"T", "[", "4", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"x", "[", "7", "]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6437297106747847`*^9, 3.643729721622818*^9}, 
   3.643729790255838*^9, 3.643729822408499*^9, 3.6437298898876247`*^9, {
   3.643729955254242*^9, 3.643729976022353*^9}, 3.643730006148299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t4Sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Solve", "[", 
      RowBox[{"t4", ",", 
       RowBox[{"x", "[", "7", "]"}]}], "]"}], "}"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643731562720862*^9, 3.643731571843151*^9}, {
  3.643731630842449*^9, 3.64373165572816*^9}, {3.643732268453081*^9, 
  3.643732272770039*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "7", "]"}], "\[Rule]", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"kd", "[", "1", "]"}]}], " ", 
       RowBox[{"km", "[", "2", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "1", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "4", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}]}], 
     RowBox[{"3", " ", 
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"km", "[", "2", "]"}]}]], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"kd", "[", "1", "]"}]}], " ", 
              RowBox[{"km", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "1", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "4", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"kd", "[", "1", "]"}], " ", 
          RowBox[{"kd", "[", "2", "]"}], " ", 
          RowBox[{"km", "[", "2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"km", "[", "2", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "2", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "2", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}]}], "-", 
            RowBox[{"x", "[", "4", "]"}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "1", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}], "+", 
            RowBox[{"kcr", " ", 
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "2", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"3", " ", 
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "+", 
          RowBox[{"6", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "3"]}], "+", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "3"]}]}], ")"}], "2"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"kd", "[", "1", "]"}]}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
                 RowBox[{"3", " ", 
                  RowBox[{"kd", "[", "1", "]"}], " ", 
                  RowBox[{"kd", "[", "2", "]"}], " ", 
                  RowBox[{"km", "[", "2", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                    RowBox[{"x", "[", "4", "]"}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}], "+", 
                    RowBox[{"kcr", " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}], 
               "3"]}]}], ")"}]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"3", " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "3"]}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "3"]}]}], ")"}], "2"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"kd", "[", "1", "]"}]}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
               RowBox[{"3", " ", 
                RowBox[{"kd", "[", "1", "]"}], " ", 
                RowBox[{"kd", "[", "2", "]"}], " ", 
                RowBox[{"km", "[", "2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"km", "[", "2", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "1", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "2", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "2", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "2", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}]}], "-", 
                  RowBox[{"x", "[", "4", "]"}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "1", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}], "+", 
                  RowBox[{"kcr", " ", 
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "2", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}], 
             "3"]}]}], ")"}]}]}], ")"}], 
      RowBox[{"1", "/", "3"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.643731573627398*^9, {3.6437316379359503`*^9, 3.643731656951928*^9}, 
   3.6437322742290297`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t3", "/.", "t4Sol"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "3", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"x", "[", "4", "]"}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}], 
             RowBox[{
              RowBox[{"km", "[", "2", "]"}], "+", 
              RowBox[{"x", "[", "4", "]"}], "+", 
              RowBox[{
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  RowBox[{"3", " ", 
                   TemplateBox[{"2"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                   " ", 
                   RowBox[{"km", "[", "2", "]"}]}]], "+", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                 "-", 
                 FractionBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 
                    7]& )]]}], ")"}]}]}]], "+", 
            FractionBox[
             RowBox[{"kcr", " ", 
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}], 
             RowBox[{
              RowBox[{"km", "[", "2", "]"}], "+", 
              RowBox[{"x", "[", "4", "]"}], "+", 
              RowBox[{
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"(", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                ")"}]}]}]], "-", 
            FractionBox[
             RowBox[{"kcr", " ", 
              RowBox[{"km", "[", "1", "]"}], " ", 
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    RowBox[{"3", " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}]], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["2", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
                    
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}]}
                    ]}], 
                    RowBox[{"3", " ", 
                    TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 
                    7]& )]}]], "-", 
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], 
                    RowBox[{"1", "/", "3"}]], 
                    RowBox[{"3", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"1", "/", "3"}]], " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}]]}], ")"}]}]}], ")"}]}], 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]]}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[2612]]], "Output",
 CellChangeTimes->{3.643732339825753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"t3", "/.", "t4Sol"}], ",", 
   RowBox[{"x", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643732294411021*^9, 3.6437323288941393`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.643747356916955*^9}]
}, Open  ]],

Cell["\<\
Here we have the solution for the system we can plug in the values of total \
concentrations.\
\>", "Text",
 CellChangeTimes->{{3.6434575042104263`*^9, 3.6434575272338467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "following", " ", "commented", " ", "region", " ", "is", " ", 
    "merely", " ", "show", " ", "that", " ", "there", " ", "is", " ", "only", 
    " ", "one", " ", "steady", " ", "state", " ", "for", " ", "this", " ", 
    "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"jacobian", "=", 
     RowBox[{"D", "[", 
      RowBox[{"subsEqns", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], ",", 
          RowBox[{"x", "[", "2", "]"}], ",", 
          RowBox[{"x", "[", "3", "]"}], ",", 
          RowBox[{"x", "[", "4", "]"}], ",", 
          RowBox[{"x", "[", "5", "]"}], ",", 
          RowBox[{"x", "[", "6", "]"}], ",", 
          RowBox[{"x", "[", "7", "]"}], ",", 
          RowBox[{"x", "[", "8", "]"}], ",", 
          RowBox[{"x", "[", "9", "]"}]}], "}"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"detJ", "=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Distribute", "[", 
        RowBox[{"Det", "[", "jacobian", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], ",", 
         RowBox[{"x", "[", "2", "]"}], ",", 
         RowBox[{"x", "[", "3", "]"}], ",", 
         RowBox[{"x", "[", "4", "]"}], ",", 
         RowBox[{"x", "[", "5", "]"}], ",", 
         RowBox[{"x", "[", "6", "]"}], ",", 
         RowBox[{"x", "[", "7", "]"}], ",", 
         RowBox[{"x", "[", "8", "]"}], ",", 
         RowBox[{"x", "[", "9", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"detSubs", "=", 
     RowBox[{"Replace", "[", 
      RowBox[{"detJ", ",", 
       RowBox[{"solution", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"polSubs", "=", 
     RowBox[{"Numerator", "[", 
      RowBox[{"Together", "[", "detSubs", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"finalSubs", "=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Distribute", "[", "polSubs", "]"}], ",", 
       SubscriptBox["x", "_"], ",", "FactorTerms"}], "]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.643366698131743*^9, 3.643366717351111*^9}, 
   3.643366835940318*^9, {3.6433669363122253`*^9, 3.64336695196773*^9}, {
   3.643530134985106*^9, 3.643530194764078*^9}, {3.643640722644587*^9, 
   3.643640763483218*^9}, {3.6436412281952457`*^9, 3.643641256296817*^9}}],

Cell[TextData[{
 "Here we directly solve the system with ",
 StyleBox["Mathematica\[CloseCurlyQuote]s Solve function.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.643367092552786*^9, 3.6433671229989233`*^9}, {
  3.643725881086652*^9, 3.643725908203776*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"des", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "3", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "4", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "6", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "8", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "9", "]"}], "'"}], "[", "t", "]"}]}], "}"}], 
     "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "7", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}]}], "}"}]}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"T", "[", "1", "]"}], ",", 
      RowBox[{"T", "[", "2", "]"}], ",", 
      RowBox[{"T", "[", "3", "]"}], ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"T", "[", "4", "]"}], ",", "0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"solution", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"des", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
     "\[Equal]", 
     RowBox[{"des", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"des", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.643367193698986*^9, 3.643367242471057*^9}, {
  3.643367722240954*^9, 3.643367740787838*^9}, {3.643367772741246*^9, 
  3.643367798538733*^9}, {3.6433699547765703`*^9, 3.64336997182723*^9}, {
  3.643640722664279*^9, 3.643640763489441*^9}, {3.643641228213147*^9, 
  3.643641256309085*^9}, {3.643725943766135*^9, 3.643725967039042*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643725968789598*^9, 3.643726220006855*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "[", "2", "]"}], "+", 
          RowBox[{"k", "[", "3", "]"}]}], ")"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "[", "5", "]"}], "+", 
          RowBox[{"k", "[", "6", "]"}]}], ")"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{
        RowBox[{"k", "[", "4", "]"}], " ", 
        RowBox[{"k", "[", "6", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "6", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "7", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "8", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "9", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "9", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", "0"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "7", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "8", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", "0"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643725968795951*^9, 3.643726220014503*^9}]
}, Open  ]],

Cell["Here we substitue the composited parameters:", "Text",
 CellChangeTimes->{{3.64372600591439*^9, 3.643726021032902*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "+", 
      RowBox[{"k", "[", "3", "]"}]}], 
     RowBox[{"k", "[", "1", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], "+", 
      RowBox[{"k", "[", "6", "]"}]}], 
     RowBox[{"k", "[", "4", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "2", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "3", "]"}], 
     RowBox[{"k", "[", "6", "]"}]], "\[Rule]", "kcr"}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "7", "]"}], 
     RowBox[{"k", "[", "8", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "9", "]"}], 
     RowBox[{"k", "[", "10", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "2", "]"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{3.643726034310108*^9}],

Cell["Then we have:", "Text",
 CellChangeTimes->{{3.6437260525276737`*^9, 3.64372605806367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "->", 
     FractionBox[
      RowBox[{
       RowBox[{"km", "[", "1", "]"}], 
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "->", 
     FractionBox[
      RowBox[{"kcr", "*", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "->", 
     RowBox[{"kcr", " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "->", 
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "->", 
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}]}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.6437261845344343`*^9, 3.6437262009429207`*^9}, {
  3.643726231689011*^9, 3.643726234400688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"kcr", " ", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "1", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "2", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.643726172180456*^9, {3.6437262051726313`*^9, 3.643726234961993*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understanding the dynamics of the simple system with input pertubations \
(numerical study)\
\>", "Section",
 CellChangeTimes->{{3.643432279601602*^9, 3.6434323025121317`*^9}, {
  3.643447142474243*^9, 3.643447146830916*^9}}],

Cell["\<\
Since, it is a bit difficult to solve the differential equations \
analytically. Here we try to study them numerically. By defining two \
different way to characterising the dynamics with scoring their tempral \
dynamics when presented with input signal perturbation (the changing of [T]). \
The quantification can be derived from the actually fitness funcitons for \
ultrasensitive response and adaptive response. Then we save all the parameter \
sets as well as their score on ultrasensitivity and adaptation.\
\>", "Text",
 CellChangeTimes->{{3.643432324324327*^9, 3.643432525306143*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"des", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "7", "]"}]}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
    RowBox[{"init", "=", 
     RowBox[{"{", 
      RowBox[{
      "totK", ",", "totP", ",", "totS", ",", "0", ",", "0", ",", "0", ",", 
       "totT", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tot", "[", "1", "]"}], ",", 
         RowBox[{"tot", "[", "2", "]"}], ",", 
         RowBox[{"tot", "[", "3", "]"}], ",", "0.00001", ",", "0.00001", ",", 
         "0.00001", ",", "totT", ",", "0.00001", ",", "0.00001"}], "}"}]}], 
      ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"totK", "=", "1"}], ";", 
    RowBox[{"totP", "=", "1"}], ";", 
    RowBox[{"totS", "=", "10"}], ";", "\[IndentingNewLine]", 
    RowBox[{"stepNum", "=", "6"}], ";", "\[IndentingNewLine]", 
    RowBox[{"sampleSize", "=", "10000"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"pars", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vars", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"x", ",", "9"}], "]"}]}], ";", "\n", 
    RowBox[{"dvars", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Derivative", "[", "1", "]"}], "[", "vars", "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"SeedRandom", "[", 
     RowBox[{"IntegerPart", "[", 
      RowBox[{"SessionTime", "[", "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ts", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"num", "=", "1"}], ",", 
      RowBox[{"num", "\[LessEqual]", "sampleSize"}], ",", 
      RowBox[{"num", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", ",", "T", ",", "ssthreshold"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "[", "n_", "]"}], ":=", 
           RowBox[{
            RowBox[{"k", "[", "n", "]"}], "=", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"RandomReal", "[", "]"}], "*", "6"}], "-", "3"}], 
              ")"}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"tot", "[", "n_", "]"}], ":=", 
             RowBox[{
              RowBox[{"tot", "[", "n", "]"}], "=", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RandomReal", "[", "]"}], "*", "4"}], "-", "3"}], 
                ")"}]}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ksTest1", "=", 
             RowBox[{"Array", "[", 
              RowBox[{"k", ",", "10"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"totT", "=", "1.*^-3"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"totT", "=", "0.01"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tPer", ",", "step"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"tPer", "=", 
              RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
             RowBox[{
              RowBox[{"{", "sol", "}"}], "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Through", "[", 
                    RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", 
                   "des"}], ",", 
                  RowBox[{
                   RowBox[{"Through", "[", 
                    RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", 
                   "init"}], ",", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"df", "=", 
                    RowBox[{"Through", "[", 
                    RowBox[{"dvars", "[", "t", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"WhenEvent", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                    RowBox[{"step", "=", 
                    RowBox[{"step", "+", "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                    "\"\<StopIntegration\>\""}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                    "2"}]}]}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", "vars", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "ts", "]"}], "==", "stepNum"}], " ", "&&", 
                RowBox[{"AllTrue", "[", 
                 RowBox[{"ts", ",", "Positive"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"x4", "=", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], 
                  "]"}]}], ";", 
                RowBox[{"xT", "=", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", "8", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", "9", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", 
                   "sol"}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"us", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "]"}], "/", 
                    "totS"}], ")"}], "*", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], ",", "0.01"}], 
                    "]"}]}], "]"}], "+", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "stepNum", "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "+", "1"}], "]"}], 
                    "]"}]}], ")"}]}], "]"}]}], ")"}], "/", "2"}], ")"}], "/", 
                    "5.0"}], ",", "1.0"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ad", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "<", "stepNum"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ad", "=", 
                    RowBox[{"ad", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"ts", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"ts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
                    "]"}], "/.", "sol"}], "]"}], "-", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"ts", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/.", "sol"}], 
                    "]"}]}], "]"}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"0.5", "*", "totS"}], ")"}]}], ")"}], ",", 
                    "1.0"}], "]"}], "*", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "0.1", ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0.001"}], 
                    "]"}], ")"}]}], ",", "1.0"}], "]"}]}], ")"}], "]"}]}]}], 
                   ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ad", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ad", "/", "0.0001"}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}], ")"}]}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"ks", "=", 
                 RowBox[{"Array", "[", 
                  RowBox[{"k", ",", "10"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"pars", ",", 
                  RowBox[{"Join", "[", 
                   RowBox[{"ks", ",", 
                    RowBox[{"{", 
                    RowBox[{"us", ",", "ad", ",", "num", ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "+", 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]]}], "}"}]}], "]"}]}], 
                 "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}], ")"}], ",", 
           RowBox[{
            RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "}"}], "/.", 
         "sol"}], "}"}], ",", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "1", "]"}], "[", "\"\<Domain\>\"", "]"}], "/.", 
           "sol"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(T\), \(tot\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(p\)]\)\>\""}], "}"}]}]}], "}"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"xT", ",", "x4"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", "pars", "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transPars", "=", 
   RowBox[{"Transpose", "[", "pars", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<saturationSampling.csv\>\"", ",", "transPars"}], "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<unsaturationSampling.csv\>\"", ",", "transPars"}], "]"}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"transPars", "[", 
       RowBox[{"[", "11", "]"}], "]"}], ",", 
      RowBox[{"transPars", "[", 
       RowBox[{"[", "12", "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Ultrasensitive score\>\"", ",", "\"\<Adaptive score\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PointSize", "[", "0.05", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6436998607458267`*^9, 3.64369987374323*^9}, {
   3.643700443540639*^9, 3.64370047891429*^9}, {3.643700602787548*^9, 
   3.6437006557159557`*^9}, {3.643700709342*^9, 3.6437007204569902`*^9}, {
   3.643700893186097*^9, 3.643700948011629*^9}, {3.643701032452085*^9, 
   3.6437010509873133`*^9}, {3.64370108395295*^9, 3.643701246152096*^9}, {
   3.643701281997408*^9, 3.643701285452072*^9}, {3.643701358439164*^9, 
   3.643701359498829*^9}, {3.643703625594398*^9, 3.643703661640195*^9}, {
   3.643707074085537*^9, 3.643707083324019*^9}, {3.643707196349228*^9, 
   3.643707321159984*^9}, {3.6437074302136917`*^9, 3.6437074370119877`*^9}, {
   3.64370754571481*^9, 3.643707592127945*^9}, {3.643707785458756*^9, 
   3.6437078294159307`*^9}, {3.643707893733403*^9, 3.643707894189171*^9}, {
   3.643707935223962*^9, 3.6437079484120493`*^9}, {3.6437080341490707`*^9, 
   3.6437080350598593`*^9}, {3.643708071497499*^9, 3.6437080865558043`*^9}, {
   3.643708593108572*^9, 3.643708596369643*^9}, {3.643708672414555*^9, 
   3.6437087204607286`*^9}, {3.6437089611170073`*^9, 3.643708975970174*^9}, 
   3.6437090520995502`*^9, {3.643709098492749*^9, 3.643709106305456*^9}, {
   3.6437091399232483`*^9, 3.643709169629492*^9}, {3.643709256925111*^9, 
   3.643709257132523*^9}, {3.643709338703919*^9, 3.643709346286169*^9}, {
   3.643709378918676*^9, 3.643709494906054*^9}, {3.643709596944428*^9, 
   3.64370963146951*^9}, {3.643709735342758*^9, 3.643709823413134*^9}, {
   3.643710624547573*^9, 3.643710625812334*^9}, 3.643710750292179*^9, {
   3.643710858269864*^9, 3.643710898064659*^9}, {3.643710966547195*^9, 
   3.64371097515523*^9}, {3.64371104018013*^9, 3.64371108786134*^9}, 
   3.64371113078376*^9, {3.6437112407556057`*^9, 3.64371125648171*^9}, {
   3.643711405131199*^9, 3.6437114166348057`*^9}, {3.643711447679839*^9, 
   3.643711460346919*^9}, {3.643711523674697*^9, 3.643711561435845*^9}, {
   3.6437116344309607`*^9, 3.643711636700222*^9}, {3.64371167350709*^9, 
   3.643711691648848*^9}, {3.64371183342909*^9, 3.643711844462294*^9}, 
   3.643712208436214*^9, 3.643712245542878*^9, 3.643712294673707*^9, {
   3.643712575863043*^9, 3.643712576715694*^9}, {3.643712664480938*^9, 
   3.643712698082272*^9}, {3.643712809030074*^9, 3.6437128446501493`*^9}, {
   3.64371289296848*^9, 3.643712899155567*^9}, {3.643712956978305*^9, 
   3.64371298108113*^9}, {3.643713056714593*^9, 3.6437131915399227`*^9}, {
   3.643713257332386*^9, 3.643713267507085*^9}, {3.6437133008862553`*^9, 
   3.6437133406159887`*^9}, {3.643713450379533*^9, 3.643713471479327*^9}, {
   3.643713892003942*^9, 3.643713911025716*^9}, {3.6437139562762213`*^9, 
   3.64371398010991*^9}, {3.643714639759891*^9, 3.643714643084107*^9}, {
   3.643714958546296*^9, 3.643714969352805*^9}, {3.643715005283742*^9, 
   3.643715086668138*^9}, {3.643715129477428*^9, 3.6437151356280403`*^9}, 
   3.6437151762347527`*^9, {3.6437152578781767`*^9, 3.6437152719375362`*^9}, {
   3.643715634780582*^9, 3.6437156548669577`*^9}, 3.643716049588812*^9, {
   3.64371614138422*^9, 3.6437161415424833`*^9}, {3.6437162531221323`*^9, 
   3.643716255022552*^9}, {3.6437164825805273`*^9, 3.643716510081345*^9}, 
   3.6437165491758223`*^9, {3.643716734311495*^9, 3.643716831361841*^9}, {
   3.643717118075388*^9, 3.6437171571027803`*^9}, 3.643717213972543*^9, {
   3.643717377995943*^9, 3.64371738334451*^9}, {3.6438019842927313`*^9, 
   3.643801984834285*^9}, {3.643802072623665*^9, 3.643802074270644*^9}, {
   3.643802193867587*^9, 3.643802199467388*^9}, {3.643802344243903*^9, 
   3.643802404684071*^9}, {3.6438024515582113`*^9, 3.643802486852908*^9}, {
   3.643805054395994*^9, 3.643805054830299*^9}, {3.643805262356163*^9, 
   3.643805375350564*^9}, {3.6438054138727217`*^9, 3.643805606097179*^9}, {
   3.643809797842573*^9, 3.643809816298414*^9}, {3.643818988273415*^9, 
   3.6438189968471727`*^9}, {3.643819173970346*^9, 3.643819212412099*^9}, {
   3.643819247086412*^9, 3.643819280771469*^9}, {3.6438193307800217`*^9, 
   3.6438193695271883`*^9}, {3.6438194334679728`*^9, 3.643819511648574*^9}, {
   3.643819546623178*^9, 3.643819583112074*^9}, 3.6438196793816957`*^9, {
   3.6438220198681097`*^9, 3.643822022338086*^9}, {3.643828504825946*^9, 
   3.6438285174294167`*^9}, {3.643828548223618*^9, 3.643828632475018*^9}, {
   3.6438298342550373`*^9, 3.643829889946651*^9}, {3.64382994552845*^9, 
   3.643829979966634*^9}, {3.643830125338416*^9, 3.643830167326668*^9}, {
   3.6438303075130587`*^9, 3.643830336308387*^9}, {3.6438303831714783`*^9, 
   3.64383038575229*^9}, {3.6438305129923058`*^9, 3.6438306317812138`*^9}, {
   3.6438306671737833`*^9, 3.6438306689485817`*^9}, {3.6438307278075542`*^9, 
   3.643830802034758*^9}, {3.643830889441547*^9, 3.643830931305472*^9}, {
   3.643830990249948*^9, 3.643831123901005*^9}, {3.643831201604356*^9, 
   3.643831299854604*^9}, {3.643831399961038*^9, 3.643831459110828*^9}, {
   3.643831506627194*^9, 3.643831537936737*^9}, {3.643831608173341*^9, 
   3.643831608307686*^9}, {3.643831711993099*^9, 3.643831744464335*^9}, {
   3.643832098193355*^9, 3.6438321286737747`*^9}, {3.6438322711204967`*^9, 
   3.643832272617275*^9}, {3.6438323160213747`*^9, 3.643832318082793*^9}, {
   3.643832393835185*^9, 3.643832397204617*^9}, {3.6438325010823402`*^9, 
   3.643832509037045*^9}, {3.643832663876281*^9, 3.6438326720499897`*^9}, {
   3.6438327851791277`*^9, 3.643832926741323*^9}, {3.64383297086992*^9, 
   3.643832977212739*^9}, 3.643833010401772*^9, {3.643833056485463*^9, 
   3.643833104886807*^9}, {3.64383323160408*^9, 3.643833234521524*^9}, {
   3.643836214019712*^9, 3.643836227672683*^9}, {3.643836366865302*^9, 
   3.643836368873066*^9}, {3.643836440391271*^9, 3.643836523352335*^9}, {
   3.64383657721624*^9, 3.643836648568473*^9}, {3.643836682959277*^9, 
   3.6438367176744556`*^9}, {3.643837076471232*^9, 3.643837124731679*^9}, {
   3.6438371637972183`*^9, 3.6438371880399857`*^9}, {3.643837317247546*^9, 
   3.643837402939303*^9}, {3.643837499560758*^9, 3.6438375311373777`*^9}, {
   3.6438376769327383`*^9, 3.6438376815383167`*^9}, {3.643837765568635*^9, 
   3.6438377718601418`*^9}, 3.643837824307084*^9, {3.643838256952345*^9, 
   3.643838332743099*^9}, {3.643838366954842*^9, 3.6438383834447727`*^9}, {
   3.6438384215033083`*^9, 3.64383846399758*^9}, 3.64383849495977*^9, {
   3.643838701796266*^9, 3.6438387109029417`*^9}, {3.643838747908374*^9, 
   3.643838748479892*^9}, {3.643838781342587*^9, 3.643838782916397*^9}, {
   3.643838879940036*^9, 3.643838890009015*^9}, {3.643838966145993*^9, 
   3.643838967075069*^9}, {3.643839046164988*^9, 3.643839104031039*^9}, {
   3.64383926798129*^9, 3.643839285037622*^9}, {3.6438701247914743`*^9, 
   3.643870135900445*^9}, {3.6438701891583242`*^9, 3.643870236441031*^9}, {
   3.643870306478887*^9, 3.6438703421098557`*^9}, {3.64387052312081*^9, 
   3.643870565230147*^9}, {3.643870699507579*^9, 3.643870720942498*^9}, {
   3.643870990053138*^9, 3.643871027299677*^9}, 3.643871119755238*^9, {
   3.643871231585519*^9, 3.643871269590713*^9}, {3.643871478881982*^9, 
   3.64387152600415*^9}, {3.643871561303986*^9, 3.643871619250478*^9}, {
   3.643872187732053*^9, 3.6438721939727097`*^9}, {3.64387232000991*^9, 
   3.643872334497273*^9}, 3.6438723919381723`*^9, {3.643872447860795*^9, 
   3.643872536860724*^9}, {3.643880147392737*^9, 3.643880189079645*^9}, {
   3.6438802520194902`*^9, 3.643880261019184*^9}, {3.64388225018675*^9, 
   3.643882283223918*^9}, {3.643882321105866*^9, 3.643882334118845*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"transPars", "[", 
       RowBox[{"[", "11", "]"}], "]"}], ",", 
      RowBox[{"transPars", "[", 
       RowBox[{"[", "12", "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Ultrasensitive score\>\"", ",", "\"\<Adaptive score\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6438823491171*^9, 3.6438823778549767`*^9}, {
  3.643882412807231*^9, 3.643882525639991*^9}, {3.643882564867941*^9, 
  3.6438825736810923`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], Dashing[{}], 
     CapForm["Butt"], GeometricTransformationBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], Dashing[{}], 
         CapForm["Butt"], 
         DiskBox[{0, 0}, 
          Offset[{2.75, 2.75}, {0., 0.}]]}], {0., 0.}], CompressedData["
1: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
nEA6BB/vDHf+19/BzR1GSBGCsNEN0ypckYNKzaOYxB522LC8bC3REg5rfMOz
+8nSIHqdSqUOLwMSTXVd/LWDoWzRcfvZWCPQ6/vni4rqg2dHSIXq8yqYV3Vh
iis8DV2VafRd027ApTw18N7aG/jrI37Tnq8CMhJy16JsfrCVUpYms0sHHPef
r7myp072W+8f5K957gEigKiTEcxRgXC7Os7Z7lJgjBN6jLFfGxaD02QZsVD5
7NP6/88jbTE9e1nyf+IrdNF3L2Pvk8fxvZiUKe8L7xMmsqW+VYHzE/PR4oIw
RINurEIHFKD/NKHCC+fnyD2P4kOCt7ywFatENCx0jCw2DWz50oVACUdStMsM
7cn7aE5N7lG4PTj5bUdeejhwsRngbP1/8Q4ctbo+mqUU2PQ9W9LX3gjuFUEZ
f4/04eJ9/MAzZVVw6qt8FOfrA0H7rObKLhoCOMfTcW5EMw5CnxsIYOz/+eCQ
9WHNRuh8mzNJ+7MV3nzZYnGwxkOMsylT06dOQXjRs+q580tgTEVdQiZeBs1V
qRSzbXbQQ0vklvGwDgaSd866BJiAeOlQmk9jEZRWPGWRuo29/13EhvjJ981e
OO1tHY3BO8sE5XejvTNh2j7JlMMGBRM/jUIup5UhQhW9XRV9WlBfb8bHH+UI
8WqUUWyfmkHlQYPqz8sGoP6043H5dD785X1YT4RjCRdrzDgol+tBn+ySksYM
Fq/Scuw0mqeXQnmZb0fPTDMYXXG+nJGRAnUi36OPWVDwp+ofNwvBLPTfKXrp
jDTBP5tzpsxXsfPw35ldUHfOpoVnVJQM5m8DobFpU1zuCQ1YQnT5lYvhaHn7
HroewAD1kj0XVsK8Qf++dG/U93DIdHRtxbOohLkLbd5dFi/gntFjrt8yRRAU
w+NwJIqt7y3A86f8WlqFKF/YYeLdUoGBnyx+BMRJIHpn+uNAdS24diM/sruW
kc6qfq93avaw9CyOmdWlGzxd/K3k1dsh4CVL1kWHC1DDlHHtsmIQjN+bKT6u
XUeu3o64LS7iCThfOHEEP7qAwUHHT7KrZWh/X9nMkZYDxD0sVm7zO8Jd3Riv
2AwTJCib2j21WQjNz67jHb3M4Fn0f1RddzyW7/dHRNkU2YqsMsrIvI+ZQtGy
RZG9Z7KzN9l7k7333tkhO6UIhZIdxe95+r5ePZ+f/57X87jv677uc73P+5zr
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
iR38RrQKy76Fiflh+3P+oqHF9QdDUVgGyDNmAhllvPFMRSN0OVSf5cm5CBtc
JbzZITEw/m1X7xpfKs5/uKl45hm5OijNy6sS38+GQQ9VTwfDaLjXoZq2QImG
s0kODRC4h0zFpl4rYwgAvh3T4doiXlC5ENM93PUSUJslW9NvoyCcfubTk/1W
wDN8/0qyNhGKksxc113qgLspKVg5Oh4Ebc7dPxeIBuGLlbEaWrRH7w+kiu8l
T2qAdx9+9/7rB9HwVtz5qh2k71GUn00pBf9H5ufEDHH9c7e3JsdPswjh7Js9
1esFkR+RX+s607LHLOBOVGlrMlcPMv9GRbgsQB9aei5TBai+Bbn+j5RY+RUT
mBE++bcFdlebWv/1a9zT4o/y9IKadT7mhMBSjP56T/fyIw5verTiGfo3Z4PP
auC51tBu2DfiLetbMoVqS+ofDyqqsfTyoKQW188OdaeD/MLVZGAvcfZRzqwC
+sSLCX3d/YiUYPa6nfRTcCx/0vLhggvicuKspNR7cez5Xky9uHrkTzE1cSg4
09KCZD5jqAwlVIcB+LUuf8sLkg/54gNmGkC6Da1AJVAOMuw5PZVRLcAl+pPs
+JAieMznC7xHoqFt/pfnxdc+R/IFwdcLozWLBU9+vMMo/lYw1f39sVgXV7++
oMt/oVtYA/SKnHQFruVCl+5WTwtkQnTU7gGJJxrU9++eK/8YB4NZ7stvCgpA
mJX7RUj8FBKquOU5JfMEbnvhH3hWFED6xR+l//pvc+jRnkqzh7U6x41XyaUQ
zy3Tk8CQiFzf4hzC41YC1LcfwTJno4Hxafb4OEk15H2SyOmrCgfen4rz0Sxt
oMaZNa9+Rx42RP0F5vpTAU0sLCg5n41sKf0wvTimA2vN3182UeH6W3hq79+c
uxOCME/naYYLB8O1LH8hKt9yqKw3N8DqA61Go2u8qWXIGUfGvJj7BqBZ4NcS
wlEOcvcfMWHXa4qsy4QvGx/t16tWs52ielkcvW18eNhJ0Sao9XzvLpXOFyQ2
gYZRQTMadMw5P6r1t0BKwXhxQYcyaAje6khdLsXSw/tF/V7kfB+1Qqe1DWa/
fe9bGxnCDuubXs+ZLPjuo8bFG9EP8W8e+PzTpwIK6q5FlkfvW3kuIunZdiB4
l32DmqjqGKwb3atoVHkJXgh7lntMG+SNjqYTZNZDXk13CXb9JwVCqyuZOOGT
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
CotilDjklX8IwudNhctHZHp66vhwVdfI0l7PB6KKkPNq+zg+N7x7vltDswHw
jOq5tApxDeBJN5y6yir0P/m3sv846HF8V+/jldzMJ4LhylnR7anCbvjc7Huk
WWwOdkxr/IOXK6Al+CJHmUsPdPlnLGLx02gZrTBrv+6/+ynvCcc5mTcj1E1h
cqG5bnDvlHnOOB7fv/szv20IJSNRA2YSYyWhtWzoCV9IIFW/CrNxt5adbZIh
9+Js6n9ds/D7XOFWDkMPlMoWpK4Lv/8XL49G3e+Q0sH1ZyWJSKCTPPsR7syB
r3jOXjCYoe6d5dsHdkr6MVj7q3jJVOUXsxS8eUT/RzM5B9T3l65MatsBQbqI
+utfjX/53E/++Sh1+IRuXEnsNPhlTx+NRMaC1F7/z7ScbujdYQhC5eH4JYZS
Qqzsf/cgohZopT5OK3ikYnbQHnwRWelXFc94TQuyYbS+J7muQKzVw1n50gw4
01sjcN5jFJ45ivydRyaqnLkzf2sTeVx5pjnK2BtbP+PAlD+DEN/3adNOs4G9
7u2cQaMu5LZvb5C6gilGnozTWQmvYeyNpd3yThII65Vp/3o4BLu5rfN/52tU
ylxafR0MZBz8jTmWnTCm27mnm5IIzyNnw7HzEZaFX99eGhhFso/K4gt6HkHd
6zdB8y2tsHDAJoiNN+z0NinphCNgWuPhkzDmZkAR8jyaXEJDOpNbkGxqM0Rm
2Of0zMbCyx7/0+7yTeDBRbAtNraNuGqayxte8YC4F22kY3qK8PGO+Y+TB3kg
Q7O7++DXJrId8d20ncAdxDVfsQom9kEkU+C6aGU3lFFO1NCo20BkXiLTme1S
qB9g/Dps4wb/de57SoRXww9ryVXpElmYF018pmSbB77PSHo1GpMhsrynDMtX
oWJSdXB94iJYzrvrj48kw4md4muqokVg3Bg6IRreCT9T0jr/yESA3snur/xp
zXDx+w3zServiOPYL46qKwFQlhCVSjCLRhod9liSDe/C6OZU6H9tN4Hrez2d
gn0idIWcFdLAR8PmVye25xEtwPsKtSJ/8xX8ElwLxNpHacaX386rtINZjNK6
812sP3tdc5HKEhDSRtNZpRwYHS/nVDT1B7drtrflL1Rj+a4IFBtw84FD+gnc
XQInIK1ydhMrD6dj5ZfFijF+N5Xyb70P3qsj/GCJO8BZzbAlLZkFczaBP9V2
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
kqjXfJ45WI/lpwI+ffbPjlD1QaClVjMbimvSHrXlPYeDm0Sr1z4VwhsS6oEf
NiYQ2DXt4I+HsedLTZ/wqf9H3jJfFWVh8731Kmk9PwB2ftDE4ZX1DxqscG3g
NNMgURJmXnJkfsL8v/sDVz/IFFhtIl+uqybc6fGFZGkZ4h/BXOCNz47kvE2H
U63UhEzPdYB/DdouPK+CDwQMy8TzhJDAp6Zj0hQKtX7RutE5kvCFGPfzT6E0
AOLBB3Vl+bB4cPE//BiY9V4jTF4I9safrtD9zQHam/zrLz5UAvTJ62L4H2cf
R/myfSRMxTduXfBsgsiwri3nrH2kQmaNlKjPG3hC9Wrp13T/6Se/QTFV6zEs
Hn15asKlWyMHCXD+JYObqg5OjZeCSVjuwCszycdd9VkQzYt3PZQnGsa8KnUt
87rANjB/S/V6KlyidaPD6B9CraKWRNtVhKBKyVy0Mxm+eCU4CVIowLUcR9dS
vWwoi74b/ogJ4DDioxa1czy8ieLB95TDB404jk0hIl9Qga/sVuaGwMKsfJLj
VQONkldSdYnWkI1PW6shdh7A20LzitDCDYqSxz0S+CuhxyL95uOjAOB5f7/B
bbEWGsg2vyhdGYaZtlIB6UgUTGUyjZowdEKu7858xywKFNz0CUZaGeFZ696W
+HQMvHlIJq00JQNPojl4HnCh+aNmKbJzMAkZ0Lj86iBSETbLeQo39vXgyahe
tNSNCjT+v8vxtTUWpl7OihotoaDWxtrr0RG23zNvBPOBa+pz0DeSdqyirgLX
akdrvMpGxMw8Jf6VphHYqZfLPjMoBym5Uer/75f389wBkyDcKmDjOlaMAZO1
dospJRYwHH8p/1YkGpTkWJ9kbZ8CI8u3Bu92Q+DOdNBvugv98Pt94fK4FAqY
O8LxzfdckZlxhgX2eGl40ZHcV5HzBEYdv53ZYcgHz6AApzphV/gYlcUWHVwJ
BTcV0g3KquHnjcDScoF29Pt74uNPryIlntQgO+gKkpUCe2coVbDx2PK5Rpec
KhifJpXH9IfD8X7FF/iD4x//PJpcFyNwCwLG4KP0Hpo+KA/5IZsYMIoUbF5q
eC9qByaR37YY7rvCwObnO5uM6PfBh9jjzkSYVdy/8CKlGQril5wjfm8iTTJi
i59tC8F8xl5gumEctpcOxjwnUWCiJHNcOucHd+uaTgy/VqP1bX7NtdVmLL0L
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
Zu5fPoNFV2SnjfVvfXeIJuz52G6B+G29ybvofrfDr0BCueDf+FxXn1Q4kzoi
OcShPSY40sA57thoVVEAMSRa7OjvF+cJ/kzyZR9xMo/q3eV5DneLCiq/o3C8
Rs9lOjNi1HlqKxBC9rEcDl8T3fx/fEHSxRs3Mfp3nP/HDdbNHmS2J/Tu7Sgz
dLxMziVaDP5d9d2kXrWvB1/fi3bo7w2sWbry7s05YMswfOLSEQuj8vGSJaep
oKCCGP9MUwQclIQR+qYnIgTXKONG0pQhJ92utuGSD0y2XFO4jVcHKd6SK85S
l0Cz8nu/+M8E4EuQnvwQawtkA2/OOGeVgOcuccOjBy1IJ/3Cl/lVE/Ci7+++
FC0JS2uy1XJDqYClovljONEKKEBM5CZ9GWxv/rnZoGqIrMrEED8jEQXpcV/1
RBEO2Gm+tyiUkQTHj0KpoPEXkqtMlFo07w2EhfrFvNjNSDCltdKuqB8YtsrG
Xgm5DD9s1vyufoiEq+QhnTvdsbDCSrtP+tees01uPf4Acq6vs+72pYLXniuL
wR29/+jXc1E+w3dB/N2YrVtfGhgHrP1UMe5FCA4jzasu6wO/2/3DDjZMPZnm
kFL81WkmSNR//XZuPxruPTe1uXQeCy4X7A3ZPQqCC0/cA+9bVSKm+hTqvbr1
YLhTEc/FNw0NqiG30Phmokmlxna1GbGk+7hCFa8LI1p33pBtbiOndcdIHnt7
wzp5KVkl/+4/f8nWn1TL/L18xIcyPXMKXwtIGpN2z78o/nf9Z8bF+u7t90hq
9LBIJLE7JD+YsMbX94C+OnIOA+1KGMjDH5e8TIRE4G/+EGnBAgnf3xIB16qg
crv0BC1/E54L2USv+0DXzwK/P7wLjG95zgVy+QK+95TgG9waELxBcpREpQ4v
3j/jcNYvBInZUxMrNG6wVxydcI+6E9ZS5H5HmErD8Iw633p5Gpx4es0LUPHD
H2IhI//n6VCg6xE8qikN9z8bPFuhzIetgy46apFRwLG5N2It1A0poxpca/s+
IJfxShW9P8WIOq4tPBWAu0HtrTKvk8BEKyWRpDkWMXlANyNK9xBGLNj4sbiD
IBjHydCSvxmWTZqD8KqnIZHQze4vfnx7KD0YJg3B1kV95Orp8Lz+Sk/7kwh4
Mpu/I8xbD9yTwWllgwMwkH+F+//2yWKdjhVW0FazeORtGon6/cL85tWaf/LB
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Ultrasensitive score\"", TraditionalForm], 
    FormBox["\"Adaptive score\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->GrayLevel[0],
  BaseStyle->GrayLevel[0],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->GrayLevel[0],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  LabelStyle->{FontFamily -> "Helvetica", 
    GrayLevel[0]},
  Method->{},
  PlotRange->{{0, 0.8}, {0, 0.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic},
  TicksStyle->GrayLevel[0]]], "Output",
 CellChangeTimes->{{3.64388234533849*^9, 3.643882354043339*^9}, 
   3.643882416414673*^9, {3.6438824468269787`*^9, 3.643882458333688*^9}, {
   3.643882492028119*^9, 3.643882537797888*^9}, 
   3.643882576140423*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxAndIndex", "[", 
  RowBox[{"transPars", "[", 
   RowBox[{"[", "11", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643878690163056*^9, 3.643878749618266*^9}, {
  3.643879028351117*^9, 3.643879030674964*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6762436277811724`", ",", "8920"}], "}"}]], "Output",
 CellChangeTimes->{{3.64387871650751*^9, 3.643878750261544*^9}, 
   3.643879031190441*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxAndIndex", "[", 
  RowBox[{"transPars", "[", 
   RowBox[{"[", "12", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643879039972353*^9, 3.6438790402826567`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.44624261555134787`", ",", "7866"}], "}"}]], "Output",
 CellChangeTimes->{3.6438790407178917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxAndIndex", "[", "a_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"First", "@", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"a", "-", "#"}], "]"}], "]"}], "[", 
        "\"\<AdjacencyLists\>\"", "]"}]}]}], "}"}], "&"}], "@", 
   RowBox[{"Max", "@", "a"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"usIndex", "=", 
   RowBox[{
    RowBox[{"maxAndIndex", "[", 
     RowBox[{"transPars", "[", 
      RowBox[{"[", "11", "]"}], "]"}], "]"}], "//", "Last"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"adIndex", "=", 
    RowBox[{
     RowBox[{"maxAndIndex", "[", 
      RowBox[{"transPars", "[", 
       RowBox[{"[", "12", "]"}], "]"}], "]"}], "//", "Last"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPars", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"k", ",", "10"}], "]"}], "==", 
     RowBox[{
      RowBox[{"pars", "[", 
       RowBox[{"[", "usIndex", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tPer", ",", "step", ",", "totT"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totT", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tPer", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
     RowBox[{
      RowBox[{"{", "sol", "}"}], "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", "des"}], 
           ",", 
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", "init"}], 
           ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"df", "=", 
               RowBox[{"Through", "[", 
                RowBox[{"dvars", "[", "t", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                 RowBox[{"step", "=", 
                  RowBox[{"step", "+", "1"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                   "\"\<StopIntegration\>\""}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                   "2"}]}]}], "}"}]}], "]"}]}], "]"}]}], "}"}], "/.", 
         "maxPars"}], ",", "vars", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x4", "=", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", 
          RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], "]"}], "/", 
       "totS"}]}], ";", 
     RowBox[{"xT", "=", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "7", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "8", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "9", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", "sol"}], 
        "]"}], "/", "10"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{"(", 
         RowBox[{"Transpose", "@", 
          RowBox[{"{", 
           RowBox[{"xT", ",", "x4"}], "}"}]}], ")"}], "]"}], "[", "x", "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<[T]\>\"", ",", "\"\<[\!\(\*SubscriptBox[\(S\), \(p\)]\)]\>\""}], 
        "}"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"xT", ",", "x4"}], "}"}]}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPars", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"k", ",", "10"}], "]"}], "==", 
     RowBox[{
      RowBox[{"pars", "[", 
       RowBox[{"[", "adIndex", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tPer", ",", "step", ",", "totT"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totT", "=", "0.01"}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tPer", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
     RowBox[{
      RowBox[{"{", "sol", "}"}], "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", "des"}], 
           ",", 
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", "init"}], 
           ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"df", "=", 
               RowBox[{"Through", "[", 
                RowBox[{"dvars", "[", "t", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                 RowBox[{"step", "=", 
                  RowBox[{"step", "+", "1"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                   "\"\<StopIntegration\>\""}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                   "2"}]}]}], "}"}]}], "]"}]}], "]"}]}], "}"}], "/.", 
         "maxPars"}], ",", "vars", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x4", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "4", "]"}], "[", 
         RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], "]"}]}], ";", 
     RowBox[{"xT", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
          RowBox[{
           RowBox[{"x", "[", "8", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
          RowBox[{
           RowBox[{"x", "[", "9", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", "sol"}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}], ")"}], "/", 
         "10"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "/", "totS"}]}], 
       "}"}], "/.", "sol"}], "}"}], ",", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"ts", "[", 
         RowBox[{"[", "stepNum", "]"}], "]"}], "-", "0.01"}]}], "}"}]}], ",", 
    
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(T\), \(tot\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(S\), \(p\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1.01"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", "\"\<t\>\"", "}"}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.643878191575953*^9, 3.643878325292324*^9}, {
   3.643878671566923*^9, 3.643878677548521*^9}, {3.643878778533958*^9, 
   3.6438788359118023`*^9}, {3.643878882139316*^9, 3.643878914334897*^9}, {
   3.643879178399446*^9, 3.64387917866685*^9}, {3.643879211654298*^9, 
   3.643879269175371*^9}, {3.643879325960763*^9, 3.643879363863888*^9}, {
   3.643880062466267*^9, 3.643880116820921*^9}, {3.643880315882393*^9, 
   3.643880551355521*^9}, {3.643880829653764*^9, 3.643880842860338*^9}, {
   3.643880940785095*^9, 3.64388094147931*^9}, 3.643881049024061*^9, 
   3.643881911944759*^9, {3.643882705009109*^9, 3.643882761126484*^9}, {
   3.643882823226468*^9, 3.643882833864098*^9}, {3.643882887527441*^9, 
   3.643883035338541*^9}, {3.643883072225799*^9, 3.643883072383532*^9}, {
   3.643883116238514*^9, 3.643883181455715*^9}, {3.643883314575807*^9, 
   3.643883336237152*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
nw==
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.000010000000000000006`, 1.3438214575949102`*^-6}, {
       0.20000999999999972`, 0.15376630419763396`}, {0.4000099999999998, 
       0.46120893893909853`}, {0.6000099999999997, 0.7683723413125823}, {
       0.8000099999999997, 0.9143826596348484}, {1.0000099999999998`, 
       0.9320352314815097}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.643880969021739*^9, 3.643881009481182*^9, {3.643881893140746*^9, 
   3.643881913981695*^9}, 3.643882694400234*^9, 3.643882837287763*^9, 
   3.6438828973055983`*^9, {3.643882930702401*^9, 3.643882940574901*^9}, 
   3.643882987137285*^9, {3.643883028136922*^9, 3.643883036902768*^9}, 
   3.643883073851379*^9, {3.6438831517923594`*^9, 3.643883167487186*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
pbnscA+ay7qd+dsNj/f4lGS4WA/a+3DHUa6bqTDs6sRs/9WNwk0uO+95mAqM
njahkcxudHauv8WNlgq/Z3XVgpa6EHF8NHNhJBUiX3dnmX3pRPZyZImfY6mQ
RZb5Y9zSiWakzGhDk6lgNlIi5/O2EwkJNpU0zabCq6vHOI+TOpHJj5Lq7DVp
0LoSvj3RrhO1k2+NnpZOg9qigzk3f3Ugp1R5t2P706B/e2tdx1AHmo/+/uuA
bBqcv+Xz1pLdgbb7mS9uOZoGMmJqfURFBzI1QXzfzqTBydMWZ21CO1DXep4j
EQ5psPRVXLB8Twe6uupd+T3nNLDh755TEO1AC3M+ql5uaZCTa/CtaVMH2vF1
TOOydxrEnOL+aLHQjizeNl+Se5AGJ0xPPR5ubke9N5LvMSlp4O1YWnTxbju6
dvUcVz0jDd7dzt+ee6Md/bNeG1ZZmAZNmwsUeK62o536t+OpT9Pg+jF1310X
25HlXkvqrZo0CHhkoRSq0I76e6QadwyngdaOwh1/frBxvzah5DiaBvulUZbo
VzaygieM0ok0ULEgflv2sPF8gYdn/qRBxzWJPYcb2ajnqvkp9zXpkOrAGOV/
xEad87Evqvemg0exkZ61KxulProovfFgOnzYWKcs6MBGphY7ky4eSgerE88z
ei6zUcfbAs8JpXTg/0Eve3yOjdgP6w5u1U2HpZxxE8sjbPR5y1Kes1s6hGaF
CUeuYqP4uurNT6+nw+jvxdNhiyx03ics8J93OvTGxIum/WGh1u6tVgn+6eBl
mLx26jsLNeceEnkdkw7catpDXkwWapS/ErupLB3sS9Ndi/JZKHzw4IrZ83S4
W3hd6DWFhXQSZ9yor9Lhd3YB6slhoYa5QF3l9+lQ7PTXQiuZherfZK6xJ9LB
lftvzecgFqrR++z3YjYdfOwtecJtcL87fC28fCEd/hat66y6zEJ3/DakvvyX
DrHTEmwuMxZSKFR/UrEmA0is920FuH8mbXjx/e3WDKg/L+p6W52F/BoyTOqP
ZsCS3NbFlX0sZGp73P6jcgbsN1BX75FmocMLxPWGkxlQ+aqlv2o3C43t44tq
0siAzLFtdAbup03DAt63mmSAg55p1IAACylqOch33swAzvbt2WOLBNrUv+pk
1+0MIDtXCRn8JdDErWzdbv8MvB//NHw9SyAKvd2x92EG9MQXVxf/ItBmHp2s
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 3252.248905331424}, {0, 1.01}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(tot\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(S\\), \\(p\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.643880969021739*^9, 3.643881009481182*^9, {3.643881893140746*^9, 
   3.643881913981695*^9}, 3.643882694400234*^9, 3.643882837287763*^9, 
   3.6438828973055983`*^9, {3.643882930702401*^9, 3.643882940574901*^9}, 
   3.643882987137285*^9, {3.643883028136922*^9, 3.643883036902768*^9}, 
   3.643883073851379*^9, {3.6438831517923594`*^9, 3.643883167906868*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1208, 735},
WindowMargins->{{32, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 23, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 119, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[724, 27, 106, 1, 64, "Section"],
Cell[833, 30, 8445, 246, 811, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9315, 281, 209, 4, 64, "Section"],
Cell[9527, 287, 140, 1, 30, "Text"],
Cell[9670, 290, 720, 18, 81, "DisplayFormula"],
Cell[10393, 310, 198, 3, 30, "Text"],
Cell[10594, 315, 715, 24, 26, "DisplayFormula"],
Cell[11312, 341, 173, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[11510, 347, 6054, 193, 386, "Input"],
Cell[17567, 542, 3829, 120, 80, "Output"],
Cell[21399, 664, 748, 20, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22184, 689, 1419, 38, 48, "Input"],
Cell[23606, 729, 2555, 80, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26198, 814, 1004, 26, 28, "Input"],
Cell[27205, 842, 2239, 66, 50, "Output"]
}, Open  ]],
Cell[29459, 911, 125, 1, 30, "Text"],
Cell[29587, 914, 1026, 32, 44, "DisplayFormula"],
Cell[30616, 948, 96, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[30737, 953, 2122, 56, 69, "Input"],
Cell[32862, 1011, 1288, 39, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34187, 1055, 700, 20, 28, "Input"],
Cell[34890, 1077, 998, 30, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35925, 1112, 416, 11, 28, "Input"],
Cell[36344, 1125, 1830, 52, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38211, 1182, 98, 1, 28, "Input"],
Cell[38312, 1185, 1690, 50, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40039, 1240, 272, 7, 28, "Input"],
Cell[40314, 1249, 419, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40770, 1266, 282, 7, 28, "Input"],
Cell[41055, 1275, 667, 21, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41759, 1301, 958, 28, 51, "Input"],
Cell[42720, 1331, 1819, 54, 50, "Output"]
}, Open  ]],
Cell[44554, 1388, 5547, 156, 97, "Input"],
Cell[CellGroupData[{
Cell[50126, 1548, 706, 19, 28, "Input"],
Cell[50835, 1569, 2010, 56, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52882, 1630, 443, 12, 28, "Input"],
Cell[53328, 1644, 101706, 2370, 1719, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155071, 4019, 55, 1, 28, "Input"],
Cell[155129, 4022, 19094, 432, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174260, 4459, 208, 5, 28, "Input"],
Cell[174471, 4466, 77, 1, 28, "Output"]
}, Open  ]],
Cell[174563, 4470, 187, 4, 30, "Text"],
Cell[174753, 4476, 2581, 64, 119, "Input"],
Cell[177337, 4542, 271, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[177633, 4552, 8312, 238, 216, "Input"],
Cell[185948, 4792, 464, 9, 24, "Message"],
Cell[186415, 4803, 4863, 146, 147, "Output"]
}, Open  ]],
Cell[191293, 4952, 125, 1, 30, "Text"],
Cell[191421, 4955, 973, 31, 44, "DisplayFormula"],
Cell[192397, 4988, 96, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[192518, 4993, 1631, 50, 80, "Input"],
Cell[194152, 5045, 1559, 48, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195760, 5099, 235, 5, 64, "Section"],
Cell[195998, 5106, 601, 9, 68, "Text"],
Cell[196602, 5117, 31141, 698, 1409, "Input"],
Cell[CellGroupData[{
Cell[227768, 5819, 1043, 28, 46, "Input"],
Cell[228814, 5849, 200484, 3302, 190, 192360, 3168, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429335, 9156, 240, 5, 28, "Input"],
Cell[429578, 9163, 185, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429800, 9172, 193, 4, 28, "Input"],
Cell[429996, 9178, 139, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430172, 9186, 11242, 303, 722, "Input"],
Cell[441417, 9491, 7396, 131, 254, "Output"],
Cell[448816, 9624, 34706, 618, 247, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
