(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    742348,      14679]
NotebookOptionsPosition[    738375,      14547]
NotebookOutlinePosition[    738730,      14563]
CellTagsIndexPosition[    738687,      14560]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Scaffold protein titration motif", "Title",
 CellChangeTimes->{{3.6430002271357613`*^9, 3.6430002342704477`*^9}}],

Cell[CellGroupData[{

Cell["The model description", "Section",
 CellChangeTimes->{{3.643000294588601*^9, 3.643000299851523*^9}}],

Cell[TextData[{
 "This particular motif describe one phosphorylation-desphosphorylation cycle \
(can be generalized to any futile cycles) with both kinase ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "K"}], TraditionalForm]]],
 ") and phosphatase ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "P"}], TraditionalForm]]],
 ") can be titrated by a scaffold protein ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "T"}], TraditionalForm]]],
 ").\n\n",
 StyleBox["K + S \[Equilibrium] KS \[RightArrow] K + ", "DisplayFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["S", "p"], TraditionalForm]], "DisplayFormula"], 
  "DisplayFormula"],
 StyleBox["\nP + ", "DisplayFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "p"], " ", "\[Equilibrium]", " ", 
    SubscriptBox["PS", "p"]}], TraditionalForm]], "DisplayFormula"], 
  "DisplayFormula"],
 StyleBox[" \[RightArrow] P + S\nT + K \[Equilibrium] TK\nT + P \
\[Equilibrium] TP", "DisplayFormula"],
 "\n\nThe above reactions show a simple system that composed of one scaffold \
protein, one kinase, one phosphatase and one substrate. Here we try to \
descibe this simple system with differential equation following the mass \
action kinetics.\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "K", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "P", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
         SubscriptBox["S", "p"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "S", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", 
         SubscriptBox["S", "p"], "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
         SubscriptBox["S", "p"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "KS", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}], "-", 
       
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", 
         SubscriptBox["PS", "p"], "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
        SubscriptBox["S", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "T", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "TK", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}], "-", 
       
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "TP", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "-", 
       
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}], "."}]}]}]}], 
    "DisplayFormula"], TraditionalForm]]],
 "\n\nAnd the system need to follow these conservation equations:\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"[", "K", "]"}], "+", 
       RowBox[{"[", "KS", "]"}], "+", 
       RowBox[{"[", "TK", "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["K", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "P", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["PS", "p"], "]"}], "+", 
       RowBox[{"[", "TP", "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["P", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "S", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["S", "p"], "]"}], "+", 
       RowBox[{"[", "KS", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["PS", "p"], "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["S", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "T", "]"}], "+", 
       RowBox[{"[", "TK", "]"}], "+", 
       RowBox[{"[", "TP", "]"}]}], "=", 
      RowBox[{
       RowBox[{"[", 
        SubscriptBox["T", "tot"], "]"}], "."}]}]}], "DisplayFormula"], 
   TraditionalForm]]],
 "\n\nIn the following setion, we will solve the differential equations to \
understand the dynamics and behaviour of such system."
}], "Text",
 CellChangeTimes->{{3.64300032946461*^9, 3.643000411949408*^9}, 
   3.643000765009842*^9, {3.643000801521837*^9, 3.643000819809833*^9}, {
   3.6430008671825657`*^9, 3.643000900906423*^9}, {3.6430009876621447`*^9, 
   3.643001018130637*^9}, {3.643001148803453*^9, 3.643001408094447*^9}, {
   3.643001469379396*^9, 3.64300206984488*^9}, {3.643002302021605*^9, 
   3.64300248368265*^9}, {3.6430028896311207`*^9, 3.643002995076975*^9}, {
   3.643008434602817*^9, 3.6430084533503437`*^9}, {3.643008493769312*^9, 
   3.64300854988597*^9}, {3.643646793285623*^9, 3.64364685611843*^9}, {
   3.64364714847932*^9, 3.64364714849518*^9}, {3.643697127170084*^9, 
   3.643697217776668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understanding the dynamics of this simple system at steady states\
\>", "Section",
 CellChangeTimes->{{3.643008555381485*^9, 3.643008583516593*^9}, {
  3.6433655530615463`*^9, 3.643365557234893*^9}}],

Cell[TextData[StyleBox["The reactions are:", "DisplayFormula"]], "Text",
 CellChangeTimes->{{3.643361856288289*^9, 3.6433618645906973`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"K", "+", "S"}], "\[Equilibrium]", "KS"}], "\[RightArrow]", 
  RowBox[{"K", "+", 
   SubscriptBox["S", "p"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "+", 
    SubscriptBox["S", "p"]}], "\[Equilibrium]", 
   SubscriptBox["PS", "p"]}], "\[RightArrow]", 
  RowBox[{"P", "+", "S"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "+", "K"}], "\[Equilibrium]", "TK"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "+", "P"}], "\[Equilibrium]", "TP"}]}], "DisplayFormula",
 CellChangeTimes->{{3.6433618774715548`*^9, 3.6433619330526648`*^9}, {
  3.6433620036273327`*^9, 3.6433620088325567`*^9}, {3.643362129281958*^9, 
  3.6433622183967943`*^9}}],

Cell["The species are:", "Text",
 CellChangeTimes->{{3.643008589316565*^9, 3.643008598380373*^9}, {
  3.643008653866585*^9, 3.643008686730983*^9}, {3.643361831457127*^9, 
  3.6433618516152163`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"K", 
    RowBox[{"(", "1", ")"}]}], ",", 
   RowBox[{"P", 
    RowBox[{"(", "2", ")"}]}], ",", 
   RowBox[{"S", 
    RowBox[{"(", "3", ")"}]}], ",", 
   RowBox[{
    SubscriptBox["S", "p"], 
    RowBox[{"(", "4", ")"}]}], ",", 
   RowBox[{"KS", 
    RowBox[{"(", "5", ")"}]}], ",", 
   RowBox[{
    SubscriptBox["PS", "p"], 
    RowBox[{"(", "6", ")"}]}], ",", 
   RowBox[{"T", 
    RowBox[{"(", "7", ")"}]}], ",", 
   RowBox[{"TK", 
    RowBox[{"(", "8", ")"}]}], ",", 
   RowBox[{"TP", 
    RowBox[{"(", "9", ")"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{{3.643008711850252*^9, 3.64300877181549*^9}, {
  3.6433622575002604`*^9, 3.643362310785508*^9}}],

Cell["Here we have the differential equations:", "Text",
 CellChangeTimes->{{3.643008691634817*^9, 3.6430086930249767`*^9}, {
  3.643362288361381*^9, 3.643362297585257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "10", "}"}], ",", 
     RowBox[{"{", "9", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "9", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "10", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stoiM", "=", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], 
      RowBox[{"x", "[", "1", "]"}], 
      RowBox[{"x", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], 
      RowBox[{"x", "[", "5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], 
      RowBox[{"x", "[", "5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "4", "]"}], 
      RowBox[{"x", "[", "2", "]"}], 
      RowBox[{"x", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], 
      RowBox[{"x", "[", "6", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "6", "]"}], 
      RowBox[{"x", "[", "6", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "7", "]"}], 
      RowBox[{"x", "[", "1", "]"}], 
      RowBox[{"x", "[", "7", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "8", "]"}], 
      RowBox[{"x", "[", "8", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "9", "]"}], 
      RowBox[{"x", "[", "2", "]"}], 
      RowBox[{"x", "[", "7", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "10", "]"}], 
      RowBox[{"x", "[", "9", "]"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eqns", "=", 
  RowBox[{"stoiM", ".", "ks"}]}], "\[IndentingNewLine]", 
 RowBox[{"mC", "=", 
  RowBox[{"RowReduce", "[", 
   RowBox[{"NullSpace", "[", "A", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.643361674632876*^9, 3.64336167547089*^9}, {
   3.6433617147367992`*^9, 3.643361793985777*^9}, {3.643362243655946*^9, 
   3.643362247349186*^9}, {3.643362322283595*^9, 3.6433624330175447`*^9}, {
   3.643362579076962*^9, 3.643362783772904*^9}, {3.643364279187258*^9, 
   3.643364414971779*^9}, {3.643364485773497*^9, 3.643364582982481*^9}, 
   3.643365235208138*^9, {3.643366034988674*^9, 3.643366061592079*^9}, {
   3.643640722487113*^9, 3.643640763697342*^9}, {3.6436412284096212`*^9, 
   3.643641256215787*^9}, {3.6436467933139343`*^9, 3.643646856126409*^9}, 
   3.643647148506926*^9, {3.643697127204623*^9, 3.643697217569248*^9}, {
   3.643707638380756*^9, 3.643707647399872*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "4", "]"}]}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "4", "]"}]}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "4", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "7", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.643697228547863*^9, 3.643707655915979*^9, 
  3.643727070281424*^9, 3.643727103241551*^9, 3.6437299887519083`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643697228547863*^9, 3.643707655915979*^9, 
  3.643727070281424*^9, 3.643727103241551*^9, 3.6437299887598257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsEqns", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"eqns", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "6", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "8", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "9", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "+", 
     RowBox[{"x", "[", "5", "]"}], "+", 
     RowBox[{"x", "[", "8", "]"}], "-", 
     SubscriptBox["T", "1"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "+", 
     RowBox[{"x", "[", "6", "]"}], "+", 
     RowBox[{"x", "[", "9", "]"}], "-", 
     SubscriptBox["T", "2"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "+", 
     RowBox[{"x", "[", "4", "]"}], "+", 
     RowBox[{"x", "[", "5", "]"}], "+", 
     RowBox[{"x", "[", "6", "]"}], "-", 
     SubscriptBox["T", "3"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "7", "]"}], "+", 
     RowBox[{"x", "[", "8", "]"}], "+", 
     RowBox[{"x", "[", "9", "]"}], "-", 
     SubscriptBox["T", "4"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.643364605281082*^9, 3.643364619344001*^9}, {
  3.643366139136932*^9, 3.643366283768693*^9}, {3.643640722562899*^9, 
  3.64364076377914*^9}, {3.643641228479548*^9, 3.643641256245201*^9}, {
  3.643727058121121*^9, 3.643727063267198*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "4", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "1"]}], "+", 
    RowBox[{"x", "[", "1", "]"}], "+", 
    RowBox[{"x", "[", "5", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "2"]}], "+", 
    RowBox[{"x", "[", "2", "]"}], "+", 
    RowBox[{"x", "[", "6", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "3"]}], "+", 
    RowBox[{"x", "[", "3", "]"}], "+", 
    RowBox[{"x", "[", "4", "]"}], "+", 
    RowBox[{"x", "[", "5", "]"}], "+", 
    RowBox[{"x", "[", "6", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "4"]}], "+", 
    RowBox[{"x", "[", "7", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6436972514988937`*^9, 3.6437076615339603`*^9, {3.6437270734439707`*^9, 
   3.643727105456304*^9}, 3.6437299916761847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], ",", 
      RowBox[{"x", "[", "5", "]"}], ",", 
      RowBox[{"x", "[", "6", "]"}], ",", 
      RowBox[{"x", "[", "8", "]"}], ",", 
      RowBox[{"x", "[", "9", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643366336179184*^9, 3.64336643459307*^9}, {
   3.643640752051255*^9, 3.6436407634656973`*^9}, {3.6436412281683064`*^9, 
   3.643641256270884*^9}, 3.643727096166057*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], "+", 
         RowBox[{"k", "[", "3", "]"}]}], ")"}], " ", 
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"k", "[", "6", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], " ", 
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "+", 
         RowBox[{"k", "[", "6", "]"}]}], ")"}], " ", 
       RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"k", "[", "6", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "+", 
         RowBox[{"k", "[", "6", "]"}]}], ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "5", "]"}], "+", 
       RowBox[{"k", "[", "6", "]"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "7", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], 
      RowBox[{"k", "[", "8", "]"}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "9", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], 
      RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.643697261522545*^9, 3.643707663590868*^9, {3.643727086234314*^9, 
   3.643727108089735*^9}, 3.643727190909494*^9, 3.643729992996666*^9}]
}, Open  ]],

Cell["Here we substitue the composited parameters:", "Text",
 CellChangeTimes->{{3.64372600591439*^9, 3.643726021032902*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "+", 
      RowBox[{"k", "[", "3", "]"}]}], 
     RowBox[{"k", "[", "1", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], "+", 
      RowBox[{"k", "[", "6", "]"}]}], 
     RowBox[{"k", "[", "4", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "2", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "6", "]"}], 
     RowBox[{"k", "[", "3", "]"}]], "\[Rule]", "kcr"}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "7", "]"}], 
     RowBox[{"k", "[", "8", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "9", "]"}], 
     RowBox[{"k", "[", "10", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "2", "]"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{
  3.643726034310108*^9, {3.6437273118471737`*^9, 3.6437273139827642`*^9}}],

Cell["Then we have:", "Text",
 CellChangeTimes->{{3.6437260525276737`*^9, 3.64372605806367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Following", " ", "the", " ", "current", " ", "solution"}], ",", 
    " ", 
    RowBox[{"and", " ", "substitute", " ", "the", " ", 
     SubscriptBox["T", "1"]}], ",", 
    SubscriptBox["T", "2"], ",", 
    SubscriptBox["T", "3"], ",", 
    SubscriptBox["T", "4"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"solution", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"km", "[", "1", "]"}], "*", "kcr", "*", " ", 
        RowBox[{"x", "[", "2", "]"}], "*", " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "*", " ", 
        RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}]}], 
       RowBox[{"km", "[", "2", "]"}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.643640722600461*^9, 3.643640763472082*^9}, {
   3.643641228182201*^9, 3.6436412562804193`*^9}, {3.643642669644499*^9, 
   3.6436427334075613`*^9}, {3.643646793519215*^9, 3.6436468560105743`*^9}, 
   3.643647148417572*^9, {3.643697127428403*^9, 3.6436972177044983`*^9}, {
   3.643727243034295*^9, 3.643727375498589*^9}, {3.643729411519258*^9, 
   3.643729417570405*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{"km", "[", "2", "]"}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{"km", "[", "2", "]"}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437294182928953`*^9, 3.643729997635726*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t12", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", "1", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "+", 
       RowBox[{"x", "[", "5", "]"}], "+", 
       RowBox[{"x", "[", "8", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"T", "[", "2", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "6", "]"}], "+", 
       RowBox[{"x", "[", "9", "]"}]}]}]}], "}"}], "/.", 
   "solution"}]}]], "Input",
 CellChangeTimes->{{3.643729388128778*^9, 3.64372942282086*^9}, {
  3.643729472061891*^9, 3.643729475970663*^9}, {3.643729530389345*^9, 
  3.643729567098056*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"T", "[", "1", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "+", 
     FractionBox[
      RowBox[{"kcr", " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{"km", "[", "2", "]"}]], "+", 
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"T", "[", "2", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{"km", "[", "2", "]"}]], "+", 
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6437295586641283`*^9, 3.64372956755264*^9}, 
   3.643729999273538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "t12Sol", "}"}], "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"t12", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643729484882173*^9, 3.643729497997676*^9}, {
  3.643729564265799*^9, 3.643729603911234*^9}, {3.6437296790898323`*^9, 
  3.643729684602027*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"kd", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"km", "[", "2", "]"}], "+", 
          RowBox[{"x", "[", "4", "]"}], "+", 
          RowBox[{
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "2", "]"}]}], 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.643729577150885*^9, 3.643729605800269*^9}, 
   3.64372968582668*^9, 3.643729926266252*^9, 3.643730001000543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t12Sol"], "Input",
 CellChangeTimes->{{3.643729966127366*^9, 3.643729967591215*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"km", "[", "2", "]"}]}], " ", 
        RowBox[{"T", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "+", 
       RowBox[{"kcr", " ", 
        RowBox[{"T", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "-", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"kd", "[", "1", "]"}], " ", 
          RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"km", "[", "2", "]"}], "+", 
         RowBox[{"x", "[", "4", "]"}], "+", 
         RowBox[{
          RowBox[{"kd", "[", "2", "]"}], " ", 
          RowBox[{"km", "[", "2", "]"}], " ", 
          RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "2", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437299681327667`*^9, 3.643730002740101*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "[", "7", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}], ")"}], "/.", "solution"}]], "Input",
 CellChangeTimes->{{3.6437298042791243`*^9, 3.643729806421791*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "7", "]"}], "+", 
  RowBox[{
   RowBox[{"kd", "[", "1", "]"}], " ", 
   RowBox[{"x", "[", "1", "]"}], " ", 
   RowBox[{"x", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"kd", "[", "2", "]"}], " ", 
   RowBox[{"x", "[", "2", "]"}], " ", 
   RowBox[{"x", "[", "7", "]"}]}]}]], "Output",
 CellChangeTimes->{3.643729807142145*^9, 3.643729928925167*^9, 
  3.643730004508412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "3", "]"}], "+", 
   RowBox[{"x", "[", "4", "]"}], "+", 
   RowBox[{"x", "[", "5", "]"}], "+", 
   RowBox[{"x", "[", "6", "]"}]}], "/.", "solution"}]], "Input",
 CellChangeTimes->{{3.643730153902314*^9, 3.643730170584859*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "4", "]"}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{"km", "[", "2", "]"}]], "+", 
  FractionBox[
   RowBox[{"kcr", " ", 
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{"km", "[", "2", "]"}]], "+", 
  FractionBox[
   RowBox[{"kcr", " ", 
    RowBox[{"km", "[", "1", "]"}], " ", 
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{
    RowBox[{"km", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "1", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.6437301712256603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t3", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"T", "[", "3", "]"}], "==", 
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]], "+", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]], "+", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"km", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "1", "]"}]}]]}]}], "}"}], "/.", 
   "t12Sol"}]}]], "Input",
 CellChangeTimes->{{3.6437301249675903`*^9, 3.643730133058387*^9}, {
  3.6437301804933233`*^9, 3.643730189448743*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"T", "[", "3", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"x", "[", "4", "]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "+", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"km", "[", "2", "]"}]}], " ", 
       RowBox[{"T", "[", "1", "]"}]}], "-", 
      RowBox[{
       RowBox[{"T", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], "+", 
      RowBox[{"kcr", " ", 
       RowBox[{"T", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437301904351683`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"t32", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"km", "[", "2", "]"}]}], " ", 
        RowBox[{"T", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "+", 
       RowBox[{"kcr", " ", 
        RowBox[{"T", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "-", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"T", "[", "3", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"x", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", "kcr", " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", "kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.643743273203521*^9, 3.643743438651905*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t4", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"T", "[", "4", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}], "/.", "t12Sol"}]}]], "Input",\

 CellChangeTimes->{{3.643729614874198*^9, 3.6437296705307827`*^9}, {
   3.6437297008731537`*^9, 3.6437297209263906`*^9}, {3.643729785929903*^9, 
   3.643729888089787*^9}, 3.6437299440875187`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"T", "[", "4", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"x", "[", "7", "]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6437297106747847`*^9, 3.643729721622818*^9}, 
   3.643729790255838*^9, 3.643729822408499*^9, 3.6437298898876247`*^9, {
   3.643729955254242*^9, 3.643729976022353*^9}, 3.643730006148299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t4Sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Solve", "[", 
      RowBox[{"t4", ",", 
       RowBox[{"x", "[", "7", "]"}]}], "]"}], "}"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643731562720862*^9, 3.643731571843151*^9}, {
  3.643731630842449*^9, 3.64373165572816*^9}, {3.643732268453081*^9, 
  3.643732272770039*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "7", "]"}], "\[Rule]", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"kd", "[", "1", "]"}]}], " ", 
       RowBox[{"km", "[", "2", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "1", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "4", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}]}], 
     RowBox[{"3", " ", 
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"km", "[", "2", "]"}]}]], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"kd", "[", "1", "]"}]}], " ", 
              RowBox[{"km", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "1", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "4", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"kd", "[", "1", "]"}], " ", 
          RowBox[{"kd", "[", "2", "]"}], " ", 
          RowBox[{"km", "[", "2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"km", "[", "2", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "2", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "2", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}]}], "-", 
            RowBox[{"x", "[", "4", "]"}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "1", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}], "+", 
            RowBox[{"kcr", " ", 
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "2", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"3", " ", 
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "+", 
          RowBox[{"6", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "3"]}], "+", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "3"]}]}], ")"}], "2"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"kd", "[", "1", "]"}]}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
                 RowBox[{"3", " ", 
                  RowBox[{"kd", "[", "1", "]"}], " ", 
                  RowBox[{"kd", "[", "2", "]"}], " ", 
                  RowBox[{"km", "[", "2", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                    RowBox[{"x", "[", "4", "]"}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}], "+", 
                    RowBox[{"kcr", " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}], 
               "3"]}]}], ")"}]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"3", " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "3"]}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "3"]}]}], ")"}], "2"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"kd", "[", "1", "]"}]}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
               RowBox[{"3", " ", 
                RowBox[{"kd", "[", "1", "]"}], " ", 
                RowBox[{"kd", "[", "2", "]"}], " ", 
                RowBox[{"km", "[", "2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"km", "[", "2", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "1", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "2", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "2", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "2", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}]}], "-", 
                  RowBox[{"x", "[", "4", "]"}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "1", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}], "+", 
                  RowBox[{"kcr", " ", 
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "2", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}], 
             "3"]}]}], ")"}]}]}], ")"}], 
      RowBox[{"1", "/", "3"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.643731573627398*^9, {3.6437316379359503`*^9, 3.643731656951928*^9}, 
   3.6437322742290297`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t3", "/.", "t4Sol"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "3", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"x", "[", "4", "]"}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}], 
             RowBox[{
              RowBox[{"km", "[", "2", "]"}], "+", 
              RowBox[{"x", "[", "4", "]"}], "+", 
              RowBox[{
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  RowBox[{"3", " ", 
                   TemplateBox[{"2"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                   " ", 
                   RowBox[{"km", "[", "2", "]"}]}]], "+", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                 "-", 
                 FractionBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 
                    7]& )]]}], ")"}]}]}]], "+", 
            FractionBox[
             RowBox[{"kcr", " ", 
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}], 
             RowBox[{
              RowBox[{"km", "[", "2", "]"}], "+", 
              RowBox[{"x", "[", "4", "]"}], "+", 
              RowBox[{
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"(", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                ")"}]}]}]], "-", 
            FractionBox[
             RowBox[{"kcr", " ", 
              RowBox[{"km", "[", "1", "]"}], " ", 
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    RowBox[{"3", " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}]], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["2", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
                    
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}]}
                    ]}], 
                    RowBox[{"3", " ", 
                    TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 
                    7]& )]}]], "-", 
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], 
                    RowBox[{"1", "/", "3"}]], 
                    RowBox[{"3", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"1", "/", "3"}]], " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}]]}], ")"}]}]}], ")"}]}], 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]]}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[2612]]], "Output",
 CellChangeTimes->{3.643732339825753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"t3", "/.", "t4Sol"}], ",", 
   RowBox[{"x", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643732294411021*^9, 3.6437323288941393`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.643747356916955*^9}]
}, Open  ]],

Cell["\<\
Here we have the solution for the system we can plug in the values of total \
concentrations.\
\>", "Text",
 CellChangeTimes->{{3.6434575042104263`*^9, 3.6434575272338467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "following", " ", "commented", " ", "region", " ", "is", " ", 
    "merely", " ", "show", " ", "that", " ", "there", " ", "is", " ", "only", 
    " ", "one", " ", "steady", " ", "state", " ", "for", " ", "this", " ", 
    "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"jacobian", "=", 
     RowBox[{"D", "[", 
      RowBox[{"subsEqns", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], ",", 
          RowBox[{"x", "[", "2", "]"}], ",", 
          RowBox[{"x", "[", "3", "]"}], ",", 
          RowBox[{"x", "[", "4", "]"}], ",", 
          RowBox[{"x", "[", "5", "]"}], ",", 
          RowBox[{"x", "[", "6", "]"}], ",", 
          RowBox[{"x", "[", "7", "]"}], ",", 
          RowBox[{"x", "[", "8", "]"}], ",", 
          RowBox[{"x", "[", "9", "]"}]}], "}"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"detJ", "=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Distribute", "[", 
        RowBox[{"Det", "[", "jacobian", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], ",", 
         RowBox[{"x", "[", "2", "]"}], ",", 
         RowBox[{"x", "[", "3", "]"}], ",", 
         RowBox[{"x", "[", "4", "]"}], ",", 
         RowBox[{"x", "[", "5", "]"}], ",", 
         RowBox[{"x", "[", "6", "]"}], ",", 
         RowBox[{"x", "[", "7", "]"}], ",", 
         RowBox[{"x", "[", "8", "]"}], ",", 
         RowBox[{"x", "[", "9", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"detSubs", "=", 
     RowBox[{"Replace", "[", 
      RowBox[{"detJ", ",", 
       RowBox[{"solution", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"polSubs", "=", 
     RowBox[{"Numerator", "[", 
      RowBox[{"Together", "[", "detSubs", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"finalSubs", "=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Distribute", "[", "polSubs", "]"}], ",", 
       SubscriptBox["x", "_"], ",", "FactorTerms"}], "]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.643366698131743*^9, 3.643366717351111*^9}, 
   3.643366835940318*^9, {3.6433669363122253`*^9, 3.64336695196773*^9}, {
   3.643530134985106*^9, 3.643530194764078*^9}, {3.643640722644587*^9, 
   3.643640763483218*^9}, {3.6436412281952457`*^9, 3.643641256296817*^9}}],

Cell[TextData[{
 "Here we directly solve the system with ",
 StyleBox["Mathematica\[CloseCurlyQuote]s Solve function.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.643367092552786*^9, 3.6433671229989233`*^9}, {
  3.643725881086652*^9, 3.643725908203776*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"des", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "3", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "4", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "6", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "8", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "9", "]"}], "'"}], "[", "t", "]"}]}], "}"}], 
     "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "7", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}]}], "}"}]}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"T", "[", "1", "]"}], ",", 
      RowBox[{"T", "[", "2", "]"}], ",", 
      RowBox[{"T", "[", "3", "]"}], ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"T", "[", "4", "]"}], ",", "0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"solution", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"des", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
     "\[Equal]", 
     RowBox[{"des", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"des", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.643367193698986*^9, 3.643367242471057*^9}, {
  3.643367722240954*^9, 3.643367740787838*^9}, {3.643367772741246*^9, 
  3.643367798538733*^9}, {3.6433699547765703`*^9, 3.64336997182723*^9}, {
  3.643640722664279*^9, 3.643640763489441*^9}, {3.643641228213147*^9, 
  3.643641256309085*^9}, {3.643725943766135*^9, 3.643725967039042*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643725968789598*^9, 3.643726220006855*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "[", "2", "]"}], "+", 
          RowBox[{"k", "[", "3", "]"}]}], ")"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "[", "5", "]"}], "+", 
          RowBox[{"k", "[", "6", "]"}]}], ")"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{
        RowBox[{"k", "[", "4", "]"}], " ", 
        RowBox[{"k", "[", "6", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "6", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "7", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "8", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "9", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "9", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", "0"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "7", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "8", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", "0"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643725968795951*^9, 3.643726220014503*^9}]
}, Open  ]],

Cell["Here we substitue the composited parameters:", "Text",
 CellChangeTimes->{{3.64372600591439*^9, 3.643726021032902*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "+", 
      RowBox[{"k", "[", "3", "]"}]}], 
     RowBox[{"k", "[", "1", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], "+", 
      RowBox[{"k", "[", "6", "]"}]}], 
     RowBox[{"k", "[", "4", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "2", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "3", "]"}], 
     RowBox[{"k", "[", "6", "]"}]], "\[Rule]", "kcr"}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "7", "]"}], 
     RowBox[{"k", "[", "8", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "9", "]"}], 
     RowBox[{"k", "[", "10", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "2", "]"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{3.643726034310108*^9}],

Cell["Then we have:", "Text",
 CellChangeTimes->{{3.6437260525276737`*^9, 3.64372605806367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "->", 
     FractionBox[
      RowBox[{
       RowBox[{"km", "[", "1", "]"}], 
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "->", 
     FractionBox[
      RowBox[{"kcr", "*", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "->", 
     RowBox[{"kcr", " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "->", 
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "->", 
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}]}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.6437261845344343`*^9, 3.6437262009429207`*^9}, {
  3.643726231689011*^9, 3.643726234400688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"kcr", " ", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "1", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "2", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.643726172180456*^9, {3.6437262051726313`*^9, 3.643726234961993*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understanding the dynamics of the simple system with input pertubations \
(numerical study)\
\>", "Section",
 CellChangeTimes->{{3.643432279601602*^9, 3.6434323025121317`*^9}, {
  3.643447142474243*^9, 3.643447146830916*^9}}],

Cell["\<\
Since, it is a bit difficult to solve the differential equations \
analytically. Here we try to study them numerically. By defining two \
different way to characterising the dynamics with scoring their tempral \
dynamics when presented with input signal perturbation (the changing of [T]). \
The quantification can be derived from the actually fitness funcitons for \
ultrasensitive response and adaptive response. Then we save all the parameter \
sets as well as their score on ultrasensitivity and adaptation.\
\>", "Text",
 CellChangeTimes->{{3.643432324324327*^9, 3.643432525306143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"des", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "7", "]"}]}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
    RowBox[{"init", "=", 
     RowBox[{"{", 
      RowBox[{
      "totK", ",", "totP", ",", "totS", ",", "0", ",", "0", ",", "0", ",", 
       "totT", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tot", "[", "1", "]"}], ",", 
         RowBox[{"tot", "[", "2", "]"}], ",", 
         RowBox[{"tot", "[", "3", "]"}], ",", "0.00001", ",", "0.00001", ",", 
         "0.00001", ",", "totT", ",", "0.00001", ",", "0.00001"}], "}"}]}], 
      ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"totK", "=", "1"}], ";", 
    RowBox[{"totP", "=", "1"}], ";", 
    RowBox[{"totS", "=", "10"}], ";", "\[IndentingNewLine]", 
    RowBox[{"stepNum", "=", "6"}], ";", "\[IndentingNewLine]", 
    RowBox[{"sampleSize", "=", "20000"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"pars", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vars", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"x", ",", "9"}], "]"}]}], ";", "\n", 
    RowBox[{"dvars", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Derivative", "[", "1", "]"}], "[", "vars", "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"SeedRandom", "[", 
     RowBox[{"IntegerPart", "[", 
      RowBox[{"SessionTime", "[", "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ts", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"num", "=", "1"}], ",", 
      RowBox[{"num", "\[LessEqual]", "sampleSize"}], ",", 
      RowBox[{"num", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", ",", "T", ",", "ssthreshold"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "[", "n_", "]"}], ":=", 
           RowBox[{
            RowBox[{"k", "[", "n", "]"}], "=", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"RandomReal", "[", "]"}], "*", "6"}], "-", "3"}], 
              ")"}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"tot", "[", "n_", "]"}], ":=", 
             RowBox[{
              RowBox[{"tot", "[", "n", "]"}], "=", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RandomReal", "[", "]"}], "*", "4"}], "-", "3"}], 
                ")"}]}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ksTest1", "=", 
             RowBox[{"Array", "[", 
              RowBox[{"k", ",", "10"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"totT", "=", "1.*^-3"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"totT", "=", "0.01"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tPer", ",", "step"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"tPer", "=", 
              RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
             RowBox[{
              RowBox[{"{", "sol", "}"}], "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Through", "[", 
                    RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", 
                   "des"}], ",", 
                  RowBox[{
                   RowBox[{"Through", "[", 
                    RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", 
                   "init"}], ",", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"df", "=", 
                    RowBox[{"Through", "[", 
                    RowBox[{"dvars", "[", "t", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"WhenEvent", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                    RowBox[{"step", "=", 
                    RowBox[{"step", "+", "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                    "\"\<StopIntegration\>\""}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                    RowBox[{"10", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}]}]}]}], "}"}]}], 
                    "]"}]}], "]"}]}], "}"}], ",", "vars", ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "ts", "]"}], "==", "stepNum"}], " ", "&&", 
                RowBox[{"AllTrue", "[", 
                 RowBox[{"ts", ",", "Positive"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"x4", "=", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], 
                  "]"}]}], ";", 
                RowBox[{"xT", "=", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", "8", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", "9", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", 
                   "sol"}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"us", "=", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "+", "1"}], "]"}], 
                    "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "]"}]}], ")"}], 
                    "]"}], "/", "totS"}], ")"}], "*", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "+", "1"}], "]"}], 
                    "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "]"}]}], ")"}], 
                    "]"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "]"}], ",", 
                    "0.001"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "+", "1"}], "]"}], 
                    "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "]"}]}], ")"}], 
                    "]"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "stepNum", "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "+", "1"}], "]"}], 
                    "]"}]}], ")"}], "]"}], ",", "0.001"}], "]"}]}]}], ")"}], 
                    "/", "2"}], ")"}], "/", "10.0"}], ",", "1.0"}], "]"}]}], 
                   ")"}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"ad", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "<", "stepNum"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ad", "=", 
                    RowBox[{"ad", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"ts", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"ts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
                    "]"}], "/.", "sol"}], "]"}], "-", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"ts", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/.", "sol"}], 
                    "]"}]}], "]"}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"0.5", "*", "totS"}], ")"}]}], ")"}], ",", 
                    "1.0"}], "]"}], "*", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "0.1", ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0.001"}], 
                    "]"}], ")"}]}], ",", "1.0"}], "]"}]}], ")"}], "]"}]}]}], 
                   ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ad", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ad", "/", "0.0001"}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}], ")"}]}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"ks", "=", 
                 RowBox[{"Array", "[", 
                  RowBox[{"k", ",", "10"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"pars", ",", 
                  RowBox[{"Join", "[", 
                   RowBox[{"ks", ",", 
                    RowBox[{"{", 
                    RowBox[{"us", ",", "ad", ",", "num", ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "+", 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]]}], "}"}]}], "]"}]}], 
                 "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}], ")"}], ",", 
           RowBox[{
            RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "}"}], "/.", 
         "sol"}], "}"}], ",", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "1", "]"}], "[", "\"\<Domain\>\"", "]"}], "/.", 
           "sol"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(T\), \(tot\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(p\)]\)\>\""}], "}"}]}]}], "}"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"xT", ",", "x4"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", "pars", "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transPars", "=", 
   RowBox[{"Transpose", "[", "pars", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<saturationSampling.csv\>\"", ",", "transPars"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<unsaturationSampling.csv\>\"", ",", "transPars"}], "]"}], 
    ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6436998607458267`*^9, 3.64369987374323*^9}, {
   3.643700443540639*^9, 3.64370047891429*^9}, {3.643700602787548*^9, 
   3.6437006557159557`*^9}, {3.643700709342*^9, 3.6437007204569902`*^9}, {
   3.643700893186097*^9, 3.643700948011629*^9}, {3.643701032452085*^9, 
   3.6437010509873133`*^9}, {3.64370108395295*^9, 3.643701246152096*^9}, {
   3.643701281997408*^9, 3.643701285452072*^9}, {3.643701358439164*^9, 
   3.643701359498829*^9}, {3.643703625594398*^9, 3.643703661640195*^9}, {
   3.643707074085537*^9, 3.643707083324019*^9}, {3.643707196349228*^9, 
   3.643707321159984*^9}, {3.6437074302136917`*^9, 3.6437074370119877`*^9}, {
   3.64370754571481*^9, 3.643707592127945*^9}, {3.643707785458756*^9, 
   3.6437078294159307`*^9}, {3.643707893733403*^9, 3.643707894189171*^9}, {
   3.643707935223962*^9, 3.6437079484120493`*^9}, {3.6437080341490707`*^9, 
   3.6437080350598593`*^9}, {3.643708071497499*^9, 3.6437080865558043`*^9}, {
   3.643708593108572*^9, 3.643708596369643*^9}, {3.643708672414555*^9, 
   3.6437087204607286`*^9}, {3.6437089611170073`*^9, 3.643708975970174*^9}, 
   3.6437090520995502`*^9, {3.643709098492749*^9, 3.643709106305456*^9}, {
   3.6437091399232483`*^9, 3.643709169629492*^9}, {3.643709256925111*^9, 
   3.643709257132523*^9}, {3.643709338703919*^9, 3.643709346286169*^9}, {
   3.643709378918676*^9, 3.643709494906054*^9}, {3.643709596944428*^9, 
   3.64370963146951*^9}, {3.643709735342758*^9, 3.643709823413134*^9}, {
   3.643710624547573*^9, 3.643710625812334*^9}, 3.643710750292179*^9, {
   3.643710858269864*^9, 3.643710898064659*^9}, {3.643710966547195*^9, 
   3.64371097515523*^9}, {3.64371104018013*^9, 3.64371108786134*^9}, 
   3.64371113078376*^9, {3.6437112407556057`*^9, 3.64371125648171*^9}, {
   3.643711405131199*^9, 3.6437114166348057`*^9}, {3.643711447679839*^9, 
   3.643711460346919*^9}, {3.643711523674697*^9, 3.643711561435845*^9}, {
   3.6437116344309607`*^9, 3.643711636700222*^9}, {3.64371167350709*^9, 
   3.643711691648848*^9}, {3.64371183342909*^9, 3.643711844462294*^9}, 
   3.643712208436214*^9, 3.643712245542878*^9, 3.643712294673707*^9, {
   3.643712575863043*^9, 3.643712576715694*^9}, {3.643712664480938*^9, 
   3.643712698082272*^9}, {3.643712809030074*^9, 3.6437128446501493`*^9}, {
   3.64371289296848*^9, 3.643712899155567*^9}, {3.643712956978305*^9, 
   3.64371298108113*^9}, {3.643713056714593*^9, 3.6437131915399227`*^9}, {
   3.643713257332386*^9, 3.643713267507085*^9}, {3.6437133008862553`*^9, 
   3.6437133406159887`*^9}, {3.643713450379533*^9, 3.643713471479327*^9}, {
   3.643713892003942*^9, 3.643713911025716*^9}, {3.6437139562762213`*^9, 
   3.64371398010991*^9}, {3.643714639759891*^9, 3.643714643084107*^9}, {
   3.643714958546296*^9, 3.643714969352805*^9}, {3.643715005283742*^9, 
   3.643715086668138*^9}, {3.643715129477428*^9, 3.6437151356280403`*^9}, 
   3.6437151762347527`*^9, {3.6437152578781767`*^9, 3.6437152719375362`*^9}, {
   3.643715634780582*^9, 3.6437156548669577`*^9}, 3.643716049588812*^9, {
   3.64371614138422*^9, 3.6437161415424833`*^9}, {3.6437162531221323`*^9, 
   3.643716255022552*^9}, {3.6437164825805273`*^9, 3.643716510081345*^9}, 
   3.6437165491758223`*^9, {3.643716734311495*^9, 3.643716831361841*^9}, {
   3.643717118075388*^9, 3.6437171571027803`*^9}, 3.643717213972543*^9, {
   3.643717377995943*^9, 3.64371738334451*^9}, {3.6438019842927313`*^9, 
   3.643801984834285*^9}, {3.643802072623665*^9, 3.643802074270644*^9}, {
   3.643802193867587*^9, 3.643802199467388*^9}, {3.643802344243903*^9, 
   3.643802404684071*^9}, {3.6438024515582113`*^9, 3.643802486852908*^9}, {
   3.643805054395994*^9, 3.643805054830299*^9}, {3.643805262356163*^9, 
   3.643805375350564*^9}, {3.6438054138727217`*^9, 3.643805606097179*^9}, {
   3.643809797842573*^9, 3.643809816298414*^9}, {3.643818988273415*^9, 
   3.6438189968471727`*^9}, {3.643819173970346*^9, 3.643819212412099*^9}, {
   3.643819247086412*^9, 3.643819280771469*^9}, {3.6438193307800217`*^9, 
   3.6438193695271883`*^9}, {3.6438194334679728`*^9, 3.643819511648574*^9}, {
   3.643819546623178*^9, 3.643819583112074*^9}, 3.6438196793816957`*^9, {
   3.6438220198681097`*^9, 3.643822022338086*^9}, {3.643828504825946*^9, 
   3.6438285174294167`*^9}, {3.643828548223618*^9, 3.643828632475018*^9}, {
   3.6438298342550373`*^9, 3.643829889946651*^9}, {3.64382994552845*^9, 
   3.643829979966634*^9}, {3.643830125338416*^9, 3.643830167326668*^9}, {
   3.6438303075130587`*^9, 3.643830336308387*^9}, {3.6438303831714783`*^9, 
   3.64383038575229*^9}, {3.6438305129923058`*^9, 3.6438306317812138`*^9}, {
   3.6438306671737833`*^9, 3.6438306689485817`*^9}, {3.6438307278075542`*^9, 
   3.643830802034758*^9}, {3.643830889441547*^9, 3.643830931305472*^9}, {
   3.643830990249948*^9, 3.643831123901005*^9}, {3.643831201604356*^9, 
   3.643831299854604*^9}, {3.643831399961038*^9, 3.643831459110828*^9}, {
   3.643831506627194*^9, 3.643831537936737*^9}, {3.643831608173341*^9, 
   3.643831608307686*^9}, {3.643831711993099*^9, 3.643831744464335*^9}, {
   3.643832098193355*^9, 3.6438321286737747`*^9}, {3.6438322711204967`*^9, 
   3.643832272617275*^9}, {3.6438323160213747`*^9, 3.643832318082793*^9}, {
   3.643832393835185*^9, 3.643832397204617*^9}, {3.6438325010823402`*^9, 
   3.643832509037045*^9}, {3.643832663876281*^9, 3.6438326720499897`*^9}, {
   3.6438327851791277`*^9, 3.643832926741323*^9}, {3.64383297086992*^9, 
   3.643832977212739*^9}, 3.643833010401772*^9, {3.643833056485463*^9, 
   3.643833104886807*^9}, {3.64383323160408*^9, 3.643833234521524*^9}, {
   3.643836214019712*^9, 3.643836227672683*^9}, {3.643836366865302*^9, 
   3.643836368873066*^9}, {3.643836440391271*^9, 3.643836523352335*^9}, {
   3.64383657721624*^9, 3.643836648568473*^9}, {3.643836682959277*^9, 
   3.6438367176744556`*^9}, {3.643837076471232*^9, 3.643837124731679*^9}, {
   3.6438371637972183`*^9, 3.6438371880399857`*^9}, {3.643837317247546*^9, 
   3.643837402939303*^9}, {3.643837499560758*^9, 3.6438375311373777`*^9}, {
   3.6438376769327383`*^9, 3.6438376815383167`*^9}, {3.643837765568635*^9, 
   3.6438377718601418`*^9}, 3.643837824307084*^9, {3.643838256952345*^9, 
   3.643838332743099*^9}, {3.643838366954842*^9, 3.6438383834447727`*^9}, {
   3.6438384215033083`*^9, 3.64383846399758*^9}, 3.64383849495977*^9, {
   3.643838701796266*^9, 3.6438387109029417`*^9}, {3.643838747908374*^9, 
   3.643838748479892*^9}, {3.643838781342587*^9, 3.643838782916397*^9}, {
   3.643838879940036*^9, 3.643838890009015*^9}, {3.643838966145993*^9, 
   3.643838967075069*^9}, {3.643839046164988*^9, 3.643839104031039*^9}, {
   3.64383926798129*^9, 3.643839285037622*^9}, {3.6438701247914743`*^9, 
   3.643870135900445*^9}, {3.6438701891583242`*^9, 3.643870236441031*^9}, {
   3.643870306478887*^9, 3.6438703421098557`*^9}, {3.64387052312081*^9, 
   3.643870565230147*^9}, {3.643870699507579*^9, 3.643870720942498*^9}, {
   3.643870990053138*^9, 3.643871027299677*^9}, 3.643871119755238*^9, {
   3.643871231585519*^9, 3.643871269590713*^9}, {3.643871478881982*^9, 
   3.64387152600415*^9}, {3.643871561303986*^9, 3.643871619250478*^9}, {
   3.643872187732053*^9, 3.6438721939727097`*^9}, {3.64387232000991*^9, 
   3.643872334497273*^9}, 3.6438723919381723`*^9, {3.643872447860795*^9, 
   3.643872536860724*^9}, {3.643880147392737*^9, 3.643880189079645*^9}, {
   3.6438802520194902`*^9, 3.643880261019184*^9}, {3.64388225018675*^9, 
   3.643882283223918*^9}, {3.643882321105866*^9, 3.643882334118845*^9}, {
   3.6438834557934523`*^9, 3.643883456538495*^9}, 3.6438834932597513`*^9, {
   3.6438836765769672`*^9, 3.643883712242968*^9}, {3.643889899273781*^9, 
   3.6438898995277863`*^9}, 3.643892049140855*^9, {3.643893032692368*^9, 
   3.64389307465786*^9}, 3.643893207529162*^9, {3.643893310946735*^9, 
   3.643893324167749*^9}, {3.6438933763269157`*^9, 3.6438933847786827`*^9}, {
   3.643893468754043*^9, 3.6438934829561033`*^9}, {3.643893605807692*^9, 
   3.6438936651779547`*^9}, {3.6438937065120068`*^9, 3.643893744296377*^9}, {
   3.6438938147150707`*^9, 3.6438938261877832`*^9}, {3.6438939424539833`*^9, 
   3.6438939431853657`*^9}, 3.643893984168537*^9, {3.64389958480582*^9, 
   3.6438995976699667`*^9}, 3.643905699226756*^9, {3.6439125819220133`*^9, 
   3.643912584839368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4311.040169`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.6439101135251513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"transPars", "[", 
       RowBox[{"[", "11", "]"}], "]"}], ",", 
      RowBox[{"transPars", "[", 
       RowBox[{"[", "12", "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Ultrasensitive score\>\"", ",", "\"\<Adaptive score\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6438823491171*^9, 3.6438823778549767`*^9}, {
  3.643882412807231*^9, 3.643882525639991*^9}, {3.643882564867941*^9, 
  3.6438825736810923`*^9}, {3.643893010975161*^9, 3.643893014092874*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], Dashing[{}], 
     CapForm["Butt"], GeometricTransformationBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], Dashing[{}], 
         CapForm["Butt"], 
         DiskBox[{0, 0}, 
          Offset[{2.75, 2.75}, {0., 0.}]]}], {0., 0.}], CompressedData["
1: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
XZQDDW2riBW3dFN6BiVJeGhy3rrQZU2+0xFX/A3l3DAxs5jI+6AMTG6C4Ur7
vhJ7z1LFD1vqgyHj9pnhzxGYlc/hGm6vhWv2Dp2vab7wmffggmU5nm9ZrpdJ
8F3bX+OTMFsVqZ5vqdnlWTPfgmnLTt+ckJi1eJiy32Qf/fEERHonz20OuAsK
0U/zIZsscUp9QFJcmpQfh55tl/7zlpjHXyAqNaMFwqDSzT2Gfmv8Dokf3fVU
05R4vTCn/p+3KLRsA9Qp9nwj3rrslxuOGzh2OLrAKjoWqUbXv+Yskuqx9oxP
nzIV1/jbMXTS/dG/OrioO4OsnyZXC44Dw4dBszX6tVJAJLiPFtzapT9NXNbk
Sq+9bIN2NZNW6ggjGJ+id8qcT8Bjrf17M61CEKHPNqNbWA0ze+VAwZwIuAxF
PK79XgdW+o6yBbUk/NwZP0j5v37D06ON0bY4ZW/ssrAnHWM9OUlHFqLxL8Gd
1aitFu35V17c6O4h/orMdmc7fALX6tyaD+uT7Cr54mXTyE6IBmkW8tav9xfN
/J2WS2mrwCgl5fB/99sI3R6GtURegy8tZeeUYMvaZKsYYIBDbsnqeoXZcBDx
+iZhsH5fhUeE66wawRXfJDv1xaIL0G2roEhfGoK+hX76JKHq/51HHDZf34/h
PdUzo1kKvFSp45nIMcIzFesxl+8BIOx/9fKHzW3S+lFds9FtEK2S8/7ja4MP
xB/CNANe+LWreU6nvogk/9zBCFaP//p31Gh3F9H99y/pl90nYDfwxTru7gUI
MHTRmG6PIb0vuuXxr9qwtDl/va87El6uX8xbc7NxmxgyTb5fOjxswnOCkReT
zUIq/j6B2NFlHiV79t4a/R/jd45f+ZOI21erh362NaLA7OyV3SzXkTj39ljG
3ww8rJZQ3nYoEofDmH3T3BvwSJzR5bdEIg5soo3NedaBu4Qogai6ZFx1cLr6
w6sJp4knbGhiq7Df95lC1dsOKB7IpNSkFYcob6LruH8UOF1fmnG1++J7VsuG
QPsyKEeFJXnz6WB+aPkUh1QyescP2uyv+kBUEtw9H55qAf/Xlqo6HvpwKJ+Y
yKHMwN4dguJvLueu169L1DdqGy3wvGk8X7U2BWORB8SCj4XhCIuIGqdfHe7/
qTIT47KA2LNbRr+PpELJlerDnAQ3TBadqdIavOEqnrstM8oQdk8ZHSofZ0Gc
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
VNMSSFzOknxc0YY/hWbn9f77TpiyKGpMqlzFvspzb7ZcacHnPIYp8u8nzHyy
vjtUAKE3xgZk+bhH/2ol8c5xsI367g1zDsXJgkNZlSqjhOYZf+tD6TaQHrrH
tneMwo+78Jrl7vVHobjfTjtxXb8KbrLRroGDDaB+PvQ3vyOUnW1D5b4g4sBm
qasat6SRv8zEcDawECb0m+9xR7eBxzLOfMkoB0XVsmH/148nb+lZwRzBzGE6
PChsBJXAgGvs4v7ozr167vRUK1pp6z4rHvOFtjdhrPGDhN901URv1ydhckxB
+sWBVqy9Luu94To1gpUqVtdMXUOOWVR5F20xYg3EC8nzMzm8P/5bChViiVgz
F1FLUKc5fQkcM8QRW0HlM5OR8Hr5fHddKcV/eWnHotmTBWVERxy2+fQyCpa+
D/58lxwnvLiezISK2OG50bk1mq2LxOUXWR+eq/ljTXsv3dW7R1DQ0FU1IuqL
37arXIX/hf+PPmm9H6P6P/IUrf9ul3oK/G7HrpL9N9c3J+i07PxJZHIeGxnn
uQp222qpL125aOi+2jRa14aw/TNfnqbGQyVG9yDT5jb86L5Hzc/6v/3qvNh2
r1r/+/6U1M/e54VlyFDXTiTPX4QuajnEWB++U8EWrt3hGGR0DZaM44d5BzOr
9W83fN7xqoJpG8U+VOpgWcwIDEW+zMaDnczVSMuhapgXi0bKQaGZ81JNYCpz
9qGyLUB252MZ8vdVTY5JTU+Egy327s1asXZYbXmwV+ZdAlSqztfWvm3C+33H
rual5mHjHp58Otk2vNKJWA0IvEHx5wxnPfjGchIPdx+qSzO9BQdF1V3yVKn4
YyqzneyvfDNo3tgqp4RJ6p1ClpWR2ChRZ2UhTZHXE7WnC2V6tDFdwHr7ylAi
Mn/WXPg0xQAjvo3ZsRWukGduO7c1dhM4VNP4+eOuYqXr8hetzlDc3SCxf005
OR6sojnDQYk/H+FiLn9adY5QOLZZ9kudJLRvn4tUzQrCphxm/6+uj7BpMDX6
CM/jf88T3hY96yYF8WBCc0TifihedzcUSX6LxdFZK+Nu20aMraO55XkrA7od
QQQZP9+XtJxrPFWApehV2Zusf/k74nIK/IgtSf0GT3cewQuHnTwmz0shs432
EPk82cr+KXfVkWI/peWdzKtP2fPvmq5P4WN0aSVlv9nJhF1mtsXNLCmj+YPx
4J9V+p04F4tK+Uz2Ax6tsH0Qm/SruhpCnKtPyPi3tYdvuL6bF0ffqh7QOOeA
PfO63xlig7FxV80XqntVqH/8QMy5wxtaj04JxdPdRZq90vVoa1VQB47O7rMi
1/u8ftu5svfffrR14q3JO7MDe/jTCybYfbDd0EvYv+4sDhprFs3uTIdXu4rM
t620eFNzJV9m2Rl2c1kC0/fGCfUuaZpyGX0IMoy6abOKwj4lfDW3KBR/rJP+
TITmIubO3lDy+t0zHGN/uhKLkc2pha0vmhG3GuWy+MAXo0ufzD7alUJH0HbH
YKsXbDwXJHfSFIJqhPH2oC+FD5DuT1R8xkZvzA/5CZ3yyYNxtp3XrGQkROz9
BfmIWsR947qoG2gK7wYG7pjeXNJ7YbfUP08Qrt8YPtbeMkDNMT2RDS3J+Jp9
dXV3BLmeRknL7sq+f9+f9O7+fI/zG3GFYaGYgXSeqhICq6Z0WWjzDrNuUmuD
SbJ562Pjj4Rtzm5mgTA91P7xMfhyPBYZPda3jTWrgbOzRp6nPdCgzWscR8IR
O0QLrF9Th0N577V3e4orEKTW//DRTy3K/20Vc5Fh3Q7st2bxXW/ohzQJo1Ad
ZRo8ZAsx3eFMOqe1QL/8zgypsX1rj39Nw7G3fRuYlHLQ48bsVCPQjgdeHN/G
d+fDP8q1n4xX7nQVn3/xKhqMJZ1KHCU1cKni91ffrQh+f3CG8UfAQS1xYivL
Pkj3HfcbN/OHqyvriH9NLZ68/+5K1v91A1mXnu/LgUPOpGAeQzvCrMRyzh+j
8Gc2tPiyWZxZiyJlE6MaiZsYJs50F8Xb4tWJAw4CtHmw2zf8gHeKIl9UXlu/
WvjQEke1h2nk9D4T9XR02VNht3Hk0H8FCRGV0EgReP1COhIeAcfnh79Uw2vf
nRNnNDUo/AzvbksqxD79d/0p9qXIjDnFPpvtkV36tcMTbLPtFwpms1Fqvt5A
YbsPEV7EYb/NWRYecFnSyyDZ65tPtf9fPsXTVndLFXzsCZ9bPxMIt+3HFa/t
mibw+eWUm7AdniTUcs25tsJ8ii2ZLF95GiWZ9wxNsSGoanN7SRo+5O2x1ZYu
wnvlnj/DW8j+86/ao/omOKIazaXrFIWv3R+DbUbCcKLNKi5qcw3yNj6zZ284
iduaX9sez5PshhyBLnMWXoKQNrO9njdNtG44OK/Paw5T+Qn/CJ4YpHmGuEdk
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
+7sev9HRJPt73yrav5L4ZgDJU1zUZddLwH1udHeyGxmvq/ua/9GbuoEnHvnG
Qjy1iBEWjBl57A+LNxZ7xwmSfkWRejWrg7zfTNvarcfikcrZO2v+qgUU/VEv
6vfYHuC99GZXdEQ+UVhY58nG6IL3E4YPL8hlg/rR1Dc36TJosGr+VPBrx2O6
ew4vd2RC1CNYoVq6Dj5T3cy+ZrJY5A3outvlA8X9jgkPLS79ex/f94yPpmPk
+pcW7HwGFmJScJ0Jf3jihDdMJQtlVBorEPbd8iQJL/joPJL0yrqIsXsdKp7l
2XhrKXjZ3dMfIiuWG9wkKrBFOP5IRFMYzOWXa18uNeDkG1mxo6/9wfLgcmbh
tUq4an2llwrgINuHWO3T9HOY/yNfGvtcW9Zj5djrwFv7LEny8/bPZgIF4kyH
pZz8oSJ17mRP/zUsyiiyi0/1I/5jllGoWD6stlDPVtJ3oeuKXln8i3rM9zjk
/e2f6NskevjNayJ2m3jPtwW9VXlyvnM/DqJ6feNpOvvV8/Bo0fjjW1tEJ0cu
8EslYdOKqsX4HuX/yNtM3QiJJ4SKn7jO71RdcD+LC7OcIsdfUiy+sOXjjPl3
bbvnjfROOz+4Z9PzZ0mVgv3edLqRH7mfVFPrqcriC+R+FYW/jlHlFrjAslRF
mN47GyuRLsN7fuRAhK47k4m3DYrf1S9q/ZwlvptV7Ns87IOYfB7BRxNk++5V
i9IV228v/43HaNCdfmzDLKH7wSe8h88Mt1rfXP25mdzPhuVS3crWsz7INr8g
Od9btMp/FkUd9/YR7/zVhsTs3WDq6LKVpT4CZnQlBbt210P1uOyG3dW1OHnv
3V//+bHD/ZwTNypB6zFJJXGvHarSgrUth7RxDH3hH+fjgUPiBqPc5H4NJRfD
+rEmEpoymTnUzHVY00p91ETP7d98EtSecYqvKUF7thcnib4MaFtPTgdoYCb9
7KZH28LReezWlUPeYfhqbets11uLuuYZ06X8JAxatL0yYG1HYXt2UnKZFEq/
eY7f1gmFTZ//UG3QYQQw92w/ORkEB0u9DTzPyP7AB0I+9mFD84SV2jEEpzjC
WOuZ4ByPL3RH83SatpTDs4ymQT/a99//jQp1mGo7ClBgUUKXUdG5+vurFNZw
XVA5aje9oQzHZaaLE9Fz5Hit+FkDxtmpg/+eF/Fzl4vs9oOZSqXgJtdc3PR0
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
t37pxWMjn4ntFiORe/+cwdctkQFUNtehSKXhdrSxGwesv2/OHrsOsT2jnnx5
pHx80fINCXP/7JuNybt2H/mWg5Kokci//aAUo3hTP5/Apt37K9uHY0DBIR22
LLfj3/s3aRh8jrYNgPRHw9p3Ka1IUQhkbc+XQ9Ox1wl311wH++Ce6pa4k5Br
3n/ERSQL6WkOc76ltliwpbhz9no2KDP1vS73n4ftJX7Fj4WZGB3WkU08ngLR
1j9d6/7q6wN5VB/5wMAXzLnA6YYR97xdsUFr4PfqFl3QsBf0JhsJwYleQt/s
mJ/Fh1Mo0Ok/b7ugjswL9Mr3s0Pxc9nmjWZSKDpP7WnYKVKLI3klk/03XWBQ
ZnvQTScH9yhZXossREPi1UyhTlsD7nRQPsujisZ23hp7z7YmUIryev68fRIT
LHF+9vIk/TqyKOLT+L/9l3emVn1WRo73cZavexE+WEU8aPJ8cLDjIERHaZgz
B/sJX/qUo/J5utC4fEYtMTYB17gZFCPo2jC7lpWj6Ko9WAbSj19ZyF4dn7YR
l3lBNLkPR+peRaO3V6fxhYMwO5KjEfIpGpTzEnF2GyORKucir6dZA5t15o0H
vofj+2K8J01gIzI/v0gM1PZDCM++mLqIYnBWeukwTtFDZ/mCLF/3NaQc033V
9igHuR/ExUn81Mh6P9P8qWnCfGYijtrEEW32bXU5irpkfiRqEEg7rY3YQ0pB
E5rR2FUxS9Mzuh/C1lsfvL8dAZkOnZ/rl/yQT9U3UWdRgnX72H/Q3/Ek1wOQ
HI8RX0jD6C2/dhftVbx1a3PhFhpyPdZTP2yYN71ygla+vANXaDa8vVo3H/t9
Az+U7soPO9WD7XjGQ5GYBLwf66Xxs23DyS5hlit3D0KBM/QS21A0zBY686fp
WohPn2duxKzqK4v3fvY9z6rEH5M/nCT+5B/wsnlTRD4GdR3W/qVn7tfOnm+P
o4Oh99Hcr1A4irZeywzJQiP7pqpw+dug+u24Z92mItyaGQ3/6y9yLvgyFf6I
EK41SrJn1MGNhMczHTSbcU1Ew3y3vDeIHorWgvem8LhpHXHIOA1XbmVovxcL
xPZ0Cq4u1lU9Z/Sq282DThgKyuO5t6MA19n9RtRYSqCcPrjl73wo6lssZIXA
PXzULkXbF7yTuxuur56/ebqFo6T75qlHfl0KKwWzS3j/9q52bH0+18l9phZZ
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
gkLOuqZbpHxsr9NdNz+XokW4+dqW6nZc5vno/Z1q/t/73/DVbFJ5lYmPzpfM
bX7/Pe+1yb4ZRMCEg8fdUJVVfZdZmnOVz0fJFlI0XKmEDMXyvgoeOcQ1ufaN
s0WCkbg3nihnDAoGu8s/05ORuf7HXS9lWYzSdCjSCkUiiydHM/lUBL6eTrKI
ftqI4J0OlX3uGjCwP93eSR8ErUO3d2eU68K9afm6ZE4CNtV67027N0bs2G3y
42OLE1qcLr5MWcXTAmK9+785t0K68gjtbsZE3EROWts5Un9Mr81GNhRo9OZ/
ya0fiP4485fH47XwhI5bwVo0AVKZ6y3t72cjpE6ogSSPA6Yfhz5VFCaKqezv
HBr9G9fIHylYRRzKN/60194ML57aWa9RjMJPffath0vrUO92+AQNazi6nXIT
Pmuu8tu3Xg+eDLlgfFcH11vfbPyRTBlqXBeMxzIqLbcEy/FB1XFPWWkNZCeq
v5Pkjx5bBeUxsc3Q43bSO1nrg+Fs9Q93gj0JiSf1gUETksj5jd1v19jA8Y2n
S687iQ95P+gWaCDeb819OrJsDPtLT048cCefN16mb2Mq5/NwevuhvXuy28BM
3zrAd/wa1qjTNgl1F2AznavOgaQIbOoyUdu2yneGHoXkHb6YBPVKWYagk6R6
7cuCDKl7YLVsQL9uiweKvr0bXZrLRvWFgUCSPvhh5aqlsG0+4gVftig9LkPU
TuPe0W+VeED1vY3Ev4YZFxXH9cjxSMrLxi9zRsn+iHKu9J6Xkqdg30VnfsMp
A6V5T65LmJZi2+ytZyT8dMR+MaqO1h0suu86GQNycWJ/vbGyUDCc+AR3qcfV
guZmgeK+NZT/wfOKNcaDs8SJ3PYKBJwCReXRgOJrbYSuxUFuiTvKcOUKpbm3
nwuZTPYZn1ICYbNRW+p5txNEi3siVLQyQRGRJ7I2RApU79r6hGd8IXf5DyV3
IFm/Z1xbHHeYh1w/foj5R7jPYXmCW1U50uLSWryMoc+F2wJRSXeQdd0TRxxN
ctwadccHVhEi37+yVcPdxpfnnRzZv+W9OfXOQ746bHdKjCCtV13DPgdf2noM
ZmXuFlq9FnlT/uTzSUlYf57R6vcMRxtXlq99JBOOsrxhLmm/AKGHrE39PhdB
WZ5tb+6zSg86FLxc7DarOLKMzW4wAQWe8QOTzOT8NBa1apGwkNNojJzcFsyU
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
57APykSfR75pK0DqVsvBd6fKcaBJ4DYZ7z9Q6qPKeRKLCQG/UI3AVgRefbcl
+kQcfoefG2BOaANDud54dkMUgh2WHmuG1MGzxlLb8NAlOPbrLVUo5+HO+JAZ
70Fd+AjtlLu1MwfvYk1PeXjc/LseVg2L9hGMChC2q2SZmo6CbFf2sNEZSUQn
ZroKffHBjqzjVLUNuyHR73XljiTJ7hbSD4pSlwVz14Pi4xw+yPWU9vo0HQdm
ubrcif/sSQF5AV91PHIwsfcJD0W4++15Ia9SrPm1QYJ8vvhPGMZdf+CLLBWm
1jefiknyXFXc+OEJ9Ix8jKqzCkKxusukiW0eymm+Dc1va0few113tn9IwMf7
aV843FohnrIacUXrMJr5H3qc3RwJuW8hRSE0RaC9S51M3t/L6m9CDpvvgr6h
QcJPwUAMvj2pm5ISDuWmkOd0NpWYuD92cZaE59gqsK6t0gVnnuxg1mMyRXKT
Cr+DSiwuCY50qO26iGAt4dMpbVlonfQ83ScRibnpk6lJHyuh+aBQOJGeUg+g
d4Hp6xOTYjBPbknDVCuW136oJrDOEwXF1nxJt3TE93f3td5zZRG1npuNBr/R
xEm3llWG/HQUVykxXahtwWoa66ENW0nytbP1ufh6cjxr3GmlicJvF5t9wvBF
gBF26+UOXllMQ3+o1NTBda3EE5tLXDvFldDfJxQdmKgHz7BBrrUGsZgictow
CPr+vb/U3aPfl9nk73y3foreqnAgEi1cbj9KjKth0Fb7mtYyH2uW6oy137Rh
kfcR1UbFfdji7ngoS9wH6g9kOkUlUyn8CzO36RpUI0BUEV26WV+BzVVmiRUD
uZB4VXNu3+lWpF6KK5GOc4B1oZXzcHsaJD5E9MV0J+JR3lj4Dg9yvIcg3SJM
qbcmPL0qsmb0K7FjjH98x/sLICivmH9g+/SPvROws+H47r/v02rcZq6otwmH
fh9WsrplA8nUj3tmnZOhbJy+h+zfKbc27Tn3aPjv/bb1gzZ+t17887zxZwbP
SUp2N0+I0YIbaf+VDg3omsL8kvl1DcVAdGewF16RdQOb5ZknYLmP2a89XtWl
VTAu7eQg61OZ4btNN87vgvdYpCZDiR8kxP0T1XIo/ov3x5ddro47w8VT1vvA
NFk/qhfKxlD40+q7r0oSejuJV5fzhywG1En2SPwFRl9DtNNfDprqiML0r6Cf
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
+zozpgCKptO3FGw88Pg5I3veVDn217WpDrNHgNmFdi2XYx0IImZ988lWkF11
kCpNScQjQsnngifKMNl86KvnhTj4LfLpbHtXDF3OWxJk/X+m9fNYJq89lP58
LT/FlQM7Y0cZbalHxOiEFi2dptNg9esqvr+5FAcP/fhA3t+r2XpvLQUp9f0c
Dx4YFQ2b/L0WjJhisAkiwGrbQc27RGfwJt9ns3CJxbMfkdZSgy1o6v+wgfbb
CbhyuT7eZZ4OPpP1sTM9lHoeluRzdG5S34g+O5jVYtlNsPaC/8bvgf/wHxO+
CNIHUvIpTK/VOtn3UPhmdlTH7ZPcHoIW1zOKxgv1GD5PxSKxn3S+JjqJa1bs
wJR279meiINglNcbdR8Kw8711PHzOyn5LEPyG4Xo1xXjZ6K1K3l9HtOqBefR
XoLcPm4O1u15WL9lr1nc3dPEh7X3YiJPi2NbXq9UI484ST9+p76bHI4uQsjs
mm5ePNg0E7I93g8TvNFHzS9R8o3270iVX16xwpeR38yJ15NgGiYp0h9zHQwy
mw7I02aBLdsrRT8zHotcIZYKra3Y+8tvC3dpNtLCjBn+xy9N2MIV6UZ05HgV
THNcFATlZ1Trf1D6VRNaOXpktmrgF2PIaZMI0vlPL5tzdPonfkW47R/QtxaP
OGTid2+2wnZjyaJV1XPw2J715su22/hZKNiV/ocNdK95v4o1+6OR8fPDXzPb
UVJAf8dfzh/dW0wubzbTQuvFvuxx91tozSqWcGTrIiZYSzhKsSriVZL9+HXN
aNzPfut67moz0rdJtLP3PiOePKP124lZHcNU68/i8muiCkNEfeUdbayrims0
oB4jFqpOPbKZsoS1w4do5nAvfE91+PN8NR9B+Ymxn4VCIZGfThcoSdKPk+ki
J/op8myx7dqS9hl/opHY5b5jE7Jgdgy3Yd9ignvzS1FJ5engTUgUfClZhgM5
NbufcZLw1iIfi/eRaJxspucV/tAAERqNLwy5RvCVockq2RcL54izo7nKqVge
J673+EqO3xbtw43L/6wfj4CayBNiJRs34QCHOjTNcs+OKQagvODaVzWOEogd
2cOW216APvoaPrK+mW2ufu94VRw3D0zqP0oLR2ZGz6iGHcXfauAj9iyqPgCh
ftdqmJ1KcPjNcM1IQMbf/fzq5q+uwuMUvsm1axSL14wHwORV99asH8XwJsbb
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
OE/d3ZMEvJu0r/XoxNB04y9lVgXid3rIjPo8LZR5oleJXq7FuffsbX/zzU18
133fqw01GmMl2v4YSG8Wzfb5eg6DZukhztsu47paalS0RwSOpTVyC0TVwD+5
+dtV6TCUCuuW6nZcxUOvhNQGZUo/tFNqleZGaZVonH1wkyy/Ctfybf8jnQGa
9ZOvHut04eqIsU6VlibW7nHpOamaAWJ736sF7WIM2616b9PSiTX+x62rnjDB
J/hzSdLSyrlfeiPxYyYFUdHyIUbenXCczxrRFAzAB+PnPz3+lIE0tkWU9c1h
9NlKBNtaRkApw5913ywrim6MeYhsCYb0xQUq7bflEOnZKvl/e6PEE1PxeSLn
CpVqu4A5cOhgB29hFaRfbRk33NYN7tUrCkKGFnbnv93xPC8JWy9HSRJCj4gc
s/uzWee0QYrj8JIhuWCv/ZBGi3oO/CI8a+UawxAVOCFD3L+C+1Q4bFGejZZZ
weSu153IL40817rNHFkGJu18XHl4Sx8wt2soBSGHrvRIaD5e4SfNXYaHD2OV
pH1uwbELWPtgeWjncDReJ0i9YY+qJ+erngnduRphax4958i2BFXoBF1a3VfC
uOiQ3a8pcr60etMVy8MYULr6rpgtEqOtZyVtJRNgIRhlu1q3GQqBy3G9gxm4
+8E1TTGwE8qNzNqjXxLxZ+MOy91dbXi4z0cr2ZVin7eL3fTt1xIfxX61/few
a68yvr+hTXrHlICLImdTOWYqMaO9NuC2602QzjJtKzm1F4qF6+qWS2JQL/Zo
PbVyHZ4w/Fz+2y/3EJvZDbsCbDzszN8h3w19vyNbxP288PxtiKzipwLE5evO
Z0aV/Rs/PDYpO3Ugm9gfPfP6gLMWdCfeyp01vIK+VxfuZK/oi0nP6lSirvri
U1W8i8FQMX57T2x2f0OhP68Us7wPv84RNKlJ1+9c3wqS+44T1d4U/OGeVWoq
s/8qVtXObv3b7yzi9hnnJxL/vreUh0vq+9sLuMhz0mw3Wx1Wc45urFSjyM+a
VywLYlajBK+09hXDQWv0OGd1f2G7Cb117/76I1vpbtbLDFDGoyKVRo8kcABH
aXVdLjgjyOPppjVF7qh+Y8zju+pvPbxKIUYKvntVb/Tsi9ibf9cm+qZhDsOU
/I19TZKLPtxtRE/a0Rtbzp9B9PeOs6cuUfxpJQplHpYcCbi3ZifxdrAJZ/Mu
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
YPyyBpN2RRdyInyw+hzVpIZPKQL79UOuqL4mbussvuaVOw63Vr4H/Q+PoU5F
Y8fN2wl4qFRA93o8F8F2hdvu32qH/Mmvmz0UHP+tp4ZiXFjKlVq8qdsr9Dfe
k5T72PXpVtyZOt1Q+NADPxXvK9n7RGLL/qjPzZurcTBk2/mlHRl4VbiqhZ+u
E5Y/Nq+JfUKxT2Uzz742oq6FzITGYTJ9Cjo0LVyyLcRiqcl3sjxu/VAVPnQ1
B/ecxKtzvrUj+NMu6vvvpMAQsPVM9a4A/BDki/PgSECKv47uF6dGGD06YiFf
mwjzUpqTKmWNGPl18OlBTUFQi/ObW98LJ+/31gL9ExT9jMb0/MyXFTz6buo4
mV9w1M7e2xX1n342pK0BByzfEgLfDKmkP9pA6b4kf1RmES6/59RgXtcJCyve
ULt7r4jD1Z61tL9sYax/JKReQg4el3LMQrtX9EidHWLXbtng9zITo5pIOgRl
fge8lZLHLDPHVOPKedeK/NjSJZuCHvOwTSM8ncCv2Fcnqk1gP7e/YGlFT16f
3rtZs7EYem/6yqs728FsFvtNne8srh3SWLqWQJa3gdqKJwb/M185hnbVn4TC
dY6CzbamCKc3M9MVsMafVbm+7h15GJ9l6jEMSsR2btN3VQ7keECSpyRXHkE9
wT+ifl8FtSd6NDav4KybDSW8zIJFaNKQuL56bx16r8mk/z/+polP5cFnwjzg
gqvIA1PQra1Y47vogIumZwxpHQtxYn6nsOquXqi1QZW8n1V0Wx4tr+hXBw0K
G5OCyPam4qHlA8K4UvdHzDspEAkRm2NNfUaIW2WvKo852qBxiS33o7435omP
49xT+ZAxOzn2Y04W1fllAZq6iegO47p6z50DWnUVEyI//LBb/87n2Jz96Pu9
Jd1vbyIuLwWGB3SX4MjjoYNk/fBj45xXuPoi0Zh3wUBBxhq55cnHRCtzkDDd
/HtmoQPLp3w5ZI4VIHhXqemlgG6Ue9TflA0sgrFNX6hvZBf2nmNVfds+AdZD
QdZfBBvh5mxYouKQQrHPiRjSKeVQ4olJKd3P9e9T6tEXlrZkdNlHIX8wXHGO
iZzfQvJnqEv+d7/3pZCrwpF07JnNfadu1g7O6W7BQ6b+6H/NoqIqUII7jjI6
H7uvQbNkXdWd0z0A64tjv8ovoCVz3qU3tAo603f0G4RNICWrm/zZPAcPdpuP
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
x0d9+20QuAwLtZK6K5D/bNP03oFaNMYaOm76ax8JTEl7Q8kXftefL9a0lRLP
MfrLZuKjfDYEsqNj4qg6QTuktGlT6TnsTA3sXGArwpLGN6GLonp4/NT6atLN
NAjQ7qj5+aMDj65wfPzbj+MKx8b55RCKPKrpZNjlVoqPv9OXTwh2413IYu/i
GCUeiOZ0+A4xJilonsdJ5vBEbDqSzpqakYJfw9Q2yrqdIF3QK7+6+9V/+K1S
BSmIUu/Pcrsjr7ZCKd5FPL5NHj+Eo/A0DXUpeu7lzv8//ovEKLOBUj8rO3f1
tsMr+t8h0eQqdt5qVM2unubPpfBjNpsJaaPsWtAuzjKR33fMbmLb/QJ3PM86
NSmqU4hNlz94+9WJwYltp/NEYCRIWYo3/JiKsCNl2998jdYjWZpL5t4IFNdp
s/HIh44Us/xvi/O486vuAV9gKUgPbX7Ipi4SxtSvVHa3m+CFqfs7hdYj0Deu
0a9RSkXua9lVzDQBOLQUX3QmpBRhwkFq8/TVmNsfvOYv/vaUKVk9XPjPX7VV
+sKDbNMK7KxmELxzoAvl36cqRb39ITemHnNgUynEuwoLQ/3MQeJ8aJKrmoqq
jee0b/3UwRCLHN+bpkxM09ottUceRlX6Kx3PtiTwnh7e/yZ3PYzdPzzsGg2C
Z9beu85+F2CzvtnxGjdZX1Bap32zh9AxK7whtlVlRU+VvunWkYOz4efTZvU7
YHC/ooNvmBnrH6SYD8z6I5Dp5v3y7gmiZHTR4tcPY0TG9637/DoPvA6Hecn8
WCom+NXIthPI0zj+1IcrC65Tvj+KV0dDvXT5adj2WrTsdbZMUzsJh8F7qTuK
siA1X1aYzFKAR5nnGLc3dCKs9tf3tEuUeAFSp8/tbPv9oPtjxOtaHYMUhYux
te0ZsDU+37DjVhccGJtEhM+zEoarnlYc5flMkKIq36/nHyZ8h3tNkteu8MtD
VTlMCwIY7XPy+JEaiMM+rkm36vIhMtGiI/+kCx++NRe3EjvAZbnP9EtPBCYa
69bIr69GN7um/t/92fctdNVNH6In+/jH3Bge8nkVPDp6CksK99z3y5LzMxrU
UnwNMbZ7nC3WPx4MJea58yq2lPxj7n06stoliOIOfUxen9wzP3YOTVH817xU
NBG87sVgVKH6bbGpC29H5xRTGA2xjvWB9Pk3l4HdG2Oaj1LyG9L5pEleX17t
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
tLlkup2Yb4CR90mBqYczxBc7S6zf33FYfV/BD6f8CTh2aVsN3w8rXF+4wzDP
loI6UwsZU6kOvL7rs2nfmXKUt+8ikeNDOi6qhJ+DO//Jnwlc8uf4J1/rHvNb
n6qtODq/ZofGDTL/sNLV21SCOBM5FPe10Bvv+YKav9AkQ/sQ6e5xpnYkWD1T
nzi2HkJy04p3t9mB74JLk7lGEwajpOPI9tkhUPbN/JtmuN/66kW2F4q8Ljfh
z4A4M2KQcWEacnzPE8t3Us6bTDNmmA1NKP4KIeVwX+m3LX+vXxF9Z/Ozs5G8
lmaK5g8fCs/0QZ554tTcSf4z5sa4/9HPoexmEcp2vvYQ6ybzm9uG+4TuoPg7
Fm9oEzRsQdtjObnonob2laKv3tQ+eDwhosR6ohzvZHP2VNt44JVWZWSYYylc
v/hzjNM4IP9QQOnK+wyQbhxrHesd/vs+WoONGzknZomhF9lZbki4oPwYYzjL
hUKcsuUQ+MOHJeQY+OFZJ1HRuvDx1cDV/WWhYkX9kRnMFwKaji87gveuyrVf
QtXwP2lgm7KKLx7v7C71/K0ErRabwTOr+qhrOWcGJEq8cZviT/s1/jvRrjJ2
X2coY3U85Rat2xR+2A2e9jHLdQkQ6P0ZdkPqCp4ud888XsXnZ/p1Jn1m2rH9
kRGrcLcjHknUCAvFkf3H9M2JUwoY2rCJv6IxBHk88rW/3b8RufhTcG6dJ1TY
LBbDFGyx9smegmdGJfigwGiy8UIISnh3y4hLVUFgN83KpTM5sBdRVe6O7kOg
+KZH7wR50bh226v13yJxqtf6YXlwDiJFprd1vFz19zVMPNtyN/193wbrbX2v
H2xAPYfE/p5HPvCwH9efDI7FG1rjpKtXm8h8N8O7Td4RWe/3ejE8MIWpOY8c
zyIBIdLiWIYDltc1Ed7mFWM3W1ouOR41mtpfcwVEcEafk57USgNnDRVJU/U7
USn6cqyHgy3oUrQ3rOG/gKg+/v3t/eR61LM+8c7KeL1mLGTXSjgiT+37r+p4
J9rTe/3+nL/R7DT9nEjJp32w9RH3gkQe7g8PnbE704JhxioGbQsr4kBJ5Pbj
j4WRtbFhVJSUjynfwVeelzuw/qGRXvPYPniWr8mfsYhCrKDjxhiVw8T49ZN5
r1/vQZP/C2N3XlOsFRAoFu/OAeHjeVqjPdXQKUh/Rvb/Fvn0NmsNZODcj7dn
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
bsvnfYNxGBHediCPrh1lqhc+9OuUY11TkR1pvu/u/jhk1BiOa2XhriMm1RDk
GnKU+GEKwvWxrUJkOrad9+zM/5MIurB3lctebZg69kmPUyUKT0rqcqUzqvHj
kxLvXEYFEVx89Mi1qrOQ3dvJZEV35N/6iLW70ZiGhSJ1fp9oVX01uuSan1Nb
U+LmhhKfVCNrXPBxq58/U4ksez4D0nmZ/+7si9znQnBp9n3TL5ZV++MjXnlM
XhDT7labJTs8cetqGVVLx49/67FJdmYfN1cLQUPUC8fsUkK21KfM1MrHhM3G
vdlJry6DPNj6UqCzLZFy80Hj1RZdRL+7vI71UCSEtzHvFP9UiVGPhORHlk7o
c2WrsJnKhdv3BWWEhfyT9z1txU4+7oGI6iqzMOoohzqXzzPJga/EJhZ1usqK
M/ALGcsaNwrHuTTZprn9VfDZvHJNX5sTd/W87iZbkvbv3ranVIxgmqVpVj7g
Anv6k0WFyln/1ifsSu9btcN3iPJ0G8mHz1RA9iJ3Yra8nDD4xb//W3kootcb
66xYpYB3/U51nYx6UJ4a12gwioNqpsEdBe82+Dg5Okq3umO46cmNPYkFqEgR
W9FiyEOCwDpOAf92SIq9dTQ0CkDb3u/eDzvKQFnT2n9B7wOhe2n0yfPqi5Cn
4bg6eqcBsm5OiyT98VMwx4Z3IB59L+viqspX139e1/OHx1r/Nxq1cXuyIF88
v5Oq6CNWBCf/XmfOg5xI5Q87q/zdD7ll5Xrr9rfjHdPWv/2ohF7kl0ndL8C1
6WCzpKJ2pNqRM39svvrvedd87epDZZVwOLbQM8KSxAfRq2LgIAA/g11CK2Re
WN+dxdZb7IaQl8Meb6KywLtd8OHeQiH4eostFFvHY0aoKH+vbACyshkyyR+W
4ccjCw7l6QjU/FS1/8hfg3uPDSSZeyqIMaUYS+NTmiCjf03H4mYMIcWgcLOg
OLAnbxJhnE3G1bFQb7rIZsgfnRfTvn6HCEqefvSz6xzO3Yva3mkjCn8m5obP
UuGoVuM/576XH5SR99y+WIWg7Nz9sGi5KWLKoHq5jdUBv3c9YXerL8R2fb1y
Ur+HHQTrpl/52VhOdHe5VNYGkTrXiPM6h6CYUHalpDMM++4aHbGfu4TkA/4m
yhzZGOO+NaLV85ug4JjLvJvhDrEG/74EsheEPXuQ93kyE7y9ul9SwiQP+/cu
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
hCf3aL+HHSk+lehNE/nzRxq4uAwSYvfU4cUHms0DlgWY1KGSm/xD9Nd7Nmw2
pMG+rBM0VgvEPO78302aEphhmumAiSfMzvdEf6W6g2H998FEf+2wwEz/dylD
Unxk9lSy01NrHNXvF5T+kQNRxnhpuzFqFJ7bsN/tjwXeJi4KSQTfQ7vztX98
eq4A+TMOR18SvsvNnLxRZ47e58e0rZwdYCNfJcz6Kw3ziaWtPuKViEi8Ex6q
0QbHD7e7dnWehXxI0u1jKQlQpw4mfJWpxh5zpp/E9ewKm2zamLEJvbqa0wQ1
d+SquNXJ87vjw959su+Ni2D1/lrgVk7SPOC9JZJH7/BroUzgbcJTpjX5OOKR
1ZkWjbKwAzczWJrhx+Ej+DTFDzCVY8r2LYXEwD75h2t+WvbFroiTNEmwG0rb
EWaVB7fSsX982ht7Z8gmb1/GJ5k+JyWyaribpHZedvFbw5/5v5nZynHlU9fO
VztrwTvAmFf+sA1/nav6XvZqo9Px/bn63mR8omH2vV+/HzQWg7dzKW8glZ7w
l0eTNF/p9vEfC5vZ4lCnKt1t2V2N407+H1dWBLDVq88pz9sTW3AumfM3A67O
kw34lXjCYqLGqfNwLtpveAfncrfiZHLgXR9rCxIfQ1vuJPNfRhLfw+D6brWP
Udhh5L3T5AWRn0A29dHyAcHn1YNR2WRNcDjubCr3PYPbVjFYVQuGcGZBHH/f
bugKlx21mwzAkvnZ3qzZUFg4v05j4qzGtdWJp68mSHwf4csNl3fz3kFtzOhV
4vtyUHzDE+lpi8wHU6IX5PPwcG/RcLSBHDaXyGT5d0dirO/h2cvVsRC9rGoy
6tqEYgXVGbfeAtBLv3Uu6W3D9ic3UvYeyYZxXshzYj9emoG6FzqZrpgb36fN
OFwEl81sVZlrenJ1TXaHfhH9Gc8nlTq/CLRCevqfVA2R6+Q8adfJhP2v/au3
3/eB2HXfz0ozwOhUBmWvgR9ydy/urT69pk8vfPf5OnEbPAd4P89K0eJoxMDM
1HUivzDyuS0bCW/YUA098M4RxYPHyPD+FoHc90mjOkFr59BY72yHeSZK04zz
MwYTYNY6JvlqYU3f6BUY03qMEp5fMw/mZNNZs5s2VF1Kcdiisl9wW3ULHo2b
9p/rI/Hr5IKlAoMVd0B06UbSDk1/PJke7FUlY8CcMGvx7lxPnEvgXupfNoO1
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
dc7znNfznKNVw6dc9ZSCp+a7KxV2dJYhwKb92f/4XZIs0Wse/PM+pBPnDkvj
XgBbc3TCddA+3K31tHgXftgO3mK4bQ/dVh7B1OnXkKvg6w7TX8ErK45G/DN+
vN/t/fnwq2DEr56uVj9JyRf3ctrvdvO7NPSF6NmlSq7jaFK14uSkBybeidYz
5WdDoWBP9aikE2KLEiyrdq7o+94x75oXbmC/ZyNr00Wu5+FV8J5EwYvjlx4/
zCx2xb40p4cuqrXo8Ln5WquG0p+Hnnly9upaSZSxBY7bFofCw69vZr1CHqSt
i83VuLuwroXZ2Mk8H28nyy+R5d2SPjWHbtW1v79/dJKqiSc1ALcGjgq9zq5F
xN4O02YeW1CzDP/ZrJuPXVxKVe334+H4cad51pY+0FjRCew5qYzJ5w8eNO2K
R/22Hn7+siQcMN7+7enHKnhE+/cu9vpime5cscOlYni9t9TmGf5BtHv9ENuv
ROZNSTqeuUHhv2yJqZwXuuSK6m01gy/u5a34u9FxU38o84+8fJlHRqsM+/da
s7K8bMXB/ugTv0otMFH7kHZ/cSVGmr7pmd2LI8YTD7bz2B9Gotv6B1+PimGN
+YHiMD9/OBzJpL4wdA6L9943eCQlkfeDV1yKwN/nZx5JGxXZQ4knzrqadpqr
vyMusORU1d7UxqKJbp3hBU+I09IkdV3KwdqNio8SLctAo/wngozvHx5ZI0fs
VcIOyU3tnQ0ZsCjVrf4pGk+oyk/QHdc+jCn5flO9nxR+mmQSV77WSY5/5O/Q
gEARK1q2E6m6dE5Yz3N6Nrmvlehk7tjI/0YV3w7Yqqc/CgCDfTrdQjpZ/3md
XOijxP9DPz5J+FCahcqfp9rJ/kthu/QMySsF7UW1jG/cGjG/wW7rkLMvxqr4
vly5XoKhgoGWWwHpuNi0O4kcHx6Q1HhioesNWssxZZrlPIQumnktpSwQbbvd
36tVXMCn2+uch9jeE7s/nTlak2GA9TrRY8L3o0D1nvOk96pGuGoPGB6gjcIG
zQ8uz4+XY+OPLptjNyh8+bGw1MS9tb3EhEj8q8RKBYjI+vE8vq+DqBL/lieq
5PPLzecSaKlx3MRSLa/IDHfeP3i3+gAXHtytTH3aGIia+TrfiuYcHPjufo/s
rylrXjJNKaDU/7wsdlI2zdcF7rtD7gd7rcgPZ2rjpMg//VQMy0vEbP+J3+2+
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Ultrasensitive score\"", TraditionalForm], 
    FormBox["\"Adaptive score\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->GrayLevel[0],
  BaseStyle->GrayLevel[0],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->GrayLevel[0],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  LabelStyle->{FontFamily -> "Helvetica", 
    GrayLevel[0]},
  Method->{},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic},
  TicksStyle->GrayLevel[0]]], "Output",
 CellChangeTimes->{
  3.64391128680473*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxAndIndex", "[", "a_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"First", "@", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"a", "-", "#"}], "]"}], "]"}], "[", 
        "\"\<AdjacencyLists\>\"", "]"}]}]}], "}"}], "&"}], "@", 
   RowBox[{"Max", "@", "a"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxAndIndex", "[", 
  RowBox[{"transPars", "[", 
   RowBox[{"[", "11", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643878690163056*^9, 3.643878749618266*^9}, {
  3.643879028351117*^9, 3.643879030674964*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5545545966847166`", ",", "12278"}], "}"}]], "Output",
 CellChangeTimes->{3.6439112945181417`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxAndIndex", "[", 
  RowBox[{"transPars", "[", 
   RowBox[{"[", "12", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643879039972353*^9, 3.6438790402826567`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4142526047731022`", ",", "2962"}], "}"}]], "Output",
 CellChangeTimes->{3.643911295930523*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxAndIndex", "[", "a_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"First", "@", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"a", "-", "#"}], "]"}], "]"}], "[", 
        "\"\<AdjacencyLists\>\"", "]"}]}]}], "}"}], "&"}], "@", 
   RowBox[{"Max", "@", "a"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"usIndex", "=", 
   RowBox[{
    RowBox[{"maxAndIndex", "[", 
     RowBox[{"transPars", "[", 
      RowBox[{"[", "11", "]"}], "]"}], "]"}], "//", "Last"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adIndex", "=", 
   RowBox[{
    RowBox[{"maxAndIndex", "[", 
     RowBox[{"transPars", "[", 
      RowBox[{"[", "12", "]"}], "]"}], "]"}], "//", "Last"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stepNum", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPars", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"k", ",", "10"}], "]"}], "==", 
     RowBox[{
      RowBox[{"pars", "[", 
       RowBox[{"[", "usIndex", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tPer", ",", "step", ",", "totT"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totT", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tPer", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
     RowBox[{
      RowBox[{"{", "sol", "}"}], "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", "des"}], 
           ",", 
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", "init"}], 
           ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"df", "=", 
                RowBox[{"Through", "[", 
                 RowBox[{"dvars", "[", "t", "]"}], "]"}]}], ",", 
               RowBox[{"delta", "=", 
                RowBox[{"Through", "[", 
                 RowBox[{"dvars", "[", 
                  RowBox[{"t", "+", "500"}], "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], "&&", 
                 RowBox[{
                  RowBox[{"Norm", "[", "delta", "]"}], "<", "ssthreshold"}]}],
                 ")"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                 RowBox[{"step", "=", 
                  RowBox[{"step", "+", "1"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                   "\"\<StopIntegration\>\""}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                   RowBox[{"10", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}]}]}]}], "}"}]}], 
              "]"}]}], "]"}]}], "}"}], "/.", "maxPars"}], ",", "vars", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x4", "=", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", 
          RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], "]"}], "/", 
       "totS"}]}], ";", 
     RowBox[{"xT", "=", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "7", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "8", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "9", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", "sol"}], 
        "]"}], "/", "10"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpolation", "[", 
       RowBox[{"(", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"xT", ",", "x4"}], "}"}]}], ")"}], "]"}], "[", "x", "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<[\!\(\*SubscriptBox[\(T\), \(tot\)]\)]\>\"", ",", 
        "\"\<[\!\(\*SubscriptBox[\(S\), \(p\)]\)]/[\!\(\*SubscriptBox[\(S\), \
\(tot\)]\)]\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{"xT", ",", "x4"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
            RowBox[{
             RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "+", 
            RowBox[{
             RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}], ")"}], "/", 
          "10"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "/", "totS"}]}], 
        "}"}], "/.", "sol"}], "}"}], ",", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{
         RowBox[{"ts", "[", 
          RowBox[{"[", "stepNum", "]"}], "]"}], "-", "0.01"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<[\!\(\*SubscriptBox[\(T\), \(tot\)]\)]\>\"", ",", 
          "\"\<[\!\(\*SubscriptBox[\(S\), \
\(p\)]\)]/[\!\(\*SubscriptBox[\(S\), \(tot\)]\)]\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.25"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.01"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<t\>\"", "}"}]}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPars", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"k", ",", "10"}], "]"}], "==", 
     RowBox[{
      RowBox[{"pars", "[", 
       RowBox[{"[", "adIndex", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tPer", ",", "step", ",", "totT"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totT", "=", "0.01"}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tPer", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
     RowBox[{
      RowBox[{"{", "sol", "}"}], "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", "des"}], 
           ",", 
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", "init"}], 
           ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"df", "=", 
               RowBox[{"Through", "[", 
                RowBox[{"dvars", "[", "t", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                 RowBox[{"step", "=", 
                  RowBox[{"step", "+", "1"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                   "\"\<StopIntegration\>\""}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                   RowBox[{"10", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}]}]}]}], "}"}]}], 
              "]"}]}], "]"}]}], "}"}], "/.", "maxPars"}], ",", "vars", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x4", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "4", "]"}], "[", 
         RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], "]"}]}], ";", 
     RowBox[{"xT", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
          RowBox[{
           RowBox[{"x", "[", "8", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
          RowBox[{
           RowBox[{"x", "[", "9", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", "sol"}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}], ")"}], "/", 
         "10"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "/", "totS"}]}], 
       "}"}], "/.", "sol"}], "}"}], ",", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"ts", "[", 
         RowBox[{"[", "stepNum", "]"}], "]"}], "-", "0.01"}]}], "}"}]}], ",", 
    
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<[\!\(\*SubscriptBox[\(T\), \(tot\)]\)]\>\"", ",", 
         "\"\<[\!\(\*SubscriptBox[\(S\), \(p\)]\)]/[\!\(\*SubscriptBox[\(S\), \
\(tot\)]\)]\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.85", ",", "0.25"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1.01"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", "\"\<t\>\"", "}"}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.643878191575953*^9, 3.643878325292324*^9}, {
   3.643878671566923*^9, 3.643878677548521*^9}, {3.643878778533958*^9, 
   3.6438788359118023`*^9}, {3.643878882139316*^9, 3.643878914334897*^9}, {
   3.643879178399446*^9, 3.64387917866685*^9}, {3.643879211654298*^9, 
   3.643879269175371*^9}, {3.643879325960763*^9, 3.643879363863888*^9}, {
   3.643880062466267*^9, 3.643880116820921*^9}, {3.643880315882393*^9, 
   3.643880551355521*^9}, {3.643880829653764*^9, 3.643880842860338*^9}, {
   3.643880940785095*^9, 3.64388094147931*^9}, 3.643881049024061*^9, 
   3.643881911944759*^9, {3.643882705009109*^9, 3.643882761126484*^9}, {
   3.643882823226468*^9, 3.643882833864098*^9}, {3.643882887527441*^9, 
   3.643883035338541*^9}, {3.643883072225799*^9, 3.643883072383532*^9}, {
   3.643883116238514*^9, 3.643883181455715*^9}, {3.643883314575807*^9, 
   3.643883336237152*^9}, {3.6438894700335693`*^9, 3.643889476440546*^9}, {
   3.643889583497365*^9, 3.643889678590495*^9}, 3.643889862860536*^9, {
   3.643890110807721*^9, 3.643890129640451*^9}, {3.643890161825906*^9, 
   3.643890260637334*^9}, {3.6438903548261213`*^9, 3.643890402015826*^9}, {
   3.6438905002664967`*^9, 3.643890552341671*^9}, {3.6438905977954617`*^9, 
   3.643890661153942*^9}, {3.643890952720357*^9, 3.6438909554461603`*^9}, {
   3.643891119684709*^9, 3.643891122234367*^9}, 3.643891214497005*^9, {
   3.6438912693156223`*^9, 3.6438912754170437`*^9}, {3.6438913424392433`*^9, 
   3.643891348487207*^9}, {3.643891573672958*^9, 3.643891608967492*^9}, {
   3.643891786769442*^9, 3.6438918136986647`*^9}, {3.643891958015336*^9, 
   3.6438919899579*^9}, {3.6438993832316303`*^9, 3.643899421380537*^9}, {
   3.643905495769217*^9, 3.64390554908086*^9}, {3.643911358517735*^9, 
   3.643911359377573*^9}, {3.643911501005672*^9, 3.643911501378532*^9}, {
   3.643911549700683*^9, 3.6439115506006193`*^9}, {3.6439115988033533`*^9, 
   3.64391159912134*^9}, {3.643911735877947*^9, 3.643911752275873*^9}, {
   3.6439118000975733`*^9, 3.643911883721731*^9}, {3.6439119154837713`*^9, 
   3.643911933947843*^9}, {3.643911965482978*^9, 3.6439120025048943`*^9}, {
   3.6439120472336807`*^9, 3.6439120546631393`*^9}, {3.643912144636765*^9, 
   3.643912196369038*^9}, {3.643912227412283*^9, 3.643912312398452*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
7yFmzQLH/+O/ewKvJQ==
      "]], LineBox[CompressedData["
1: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
CQbO66fHWmbzkKKrPDQ5yUDitFdYzeHhvzvI2VM=
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.000010000000000000006`, 0.8931548206964277}, {
       0.2500099999999997, 0.596875674850071}, {0.5000099999999993, 
       0.12625598413559477`}, {0.7500100000000005, 0.000995570220710348}, {
       1.0000099999999974`, 0.0004917200924809041}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"[\\!\\(\\*SubscriptBox[\\(T\\), \\(tot\\)]\\)]\"", TraditionalForm], 
    FormBox[
    "\"[\\!\\(\\*SubscriptBox[\\(S\\), \
\\(p\\)]\\)]/[\\!\\(\\*SubscriptBox[\\(S\\), \\(tot\\)]\\)]\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.64391200964569*^9, 3.643912056580771*^9, 3.643912199713068*^9, {
   3.6439122442870293`*^9, 3.643912260455667*^9}, {3.643912296532455*^9, 
   3.643912314151641*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0mlQU1cUB/CUzQroiMUplrJXQi2YdgREquQC3WxkQFA+QJEtUEsEyiK1
oAhCFSGtQFsWayuLymqQJRRIYAgJkJCAgMoSKkGWEqSgCSLQgaF25nLuhzdv
fnPu/8457zyLkGjvMA0KhRL9+vn/7aeabA5XH6Srz0xlcFenXeRGlPVxhhva
cnBE+OYowxstYfuKZSmiGH/0Envfz3tThxkhYPMOmUA2Hg5+R3VJoyOGBV7z
zas01zqLhAYs1fuUfvoIv9r7Uh5xk6Xw3yc2keD8jNGSIzxi35M6S2uKKNSB
rZtdWOyv8S1Y7N+lMqLGgK9Sl1yHGLGQL7fl6bQ5XgBPFwhmBnelgd3r/llM
9GFDPipjt+lAfS7YKyswPLQoH3zCaLz/sdNNcDz/StRUYRF4R1txJ0+vFNyY
/tgu3ecOeD/36d9ZsjIwp1KnNs24Egmw3+67kUw7WoXasVNUB46Pna4Gl5nQ
tr2xTtx3jNZhXXgP8pOBNbeaZ4lfnaNdPO7IATedV4yYIuKkpOv2qmMc6Mcl
mZ4t9OEgxevtGVIm6JTU5/O/BhD/cMWz1DmGg8axddk1fop0YsP8aIlNNQf9
hW1SQnOKfchBY9gvv+I3cldrkBx7Juv2jfWf7qMR7EfdIcxz48RCTYsDi3a1
4OKk3wUKWS3ktQyNBtRa9XD/4k6zuQ1qA7jVJbeiPJQL/ewZyIllZDZCvz4F
G1M/Sv4EO705f5Si2Qzz3pYziyKoLeDlp19WxTN54AeM1rYENh/sdbq2pZzT
CubeMQhMnGsDD1I3tUu2tYM/zq+6P3S3HU1gr8oLPK3cBeA1T5l6/hFxpMIh
QiuuA/xe0cxMgY4Q7qM5DJ36NJ/43vR6oau9CM5Hd34z2dwlgnppu/5malgn
2Hhh2axrjXh2wczBMqsLvs++7SmmfTbd4LJT1vqveMSW1wwXavXEkL/J1+iL
9BdD/dpHY/oTAWL0BDvhbj3DO4g41JidKQoh9spmShzDxHifSvr+xD2fG0cQ
azO7RJtRxBMe37lNxxG3HLJpF58X4/0r6VF6mbycy2L8/yjpXyw7H064Ss5b
KuYb/dikPlznUWeVR/LIz6CCW0G8u6Igb7R/az4lfWbFLH1jZWt+Jd2WcyJY
01UC52OZaS7bMyV4H0q6mtqvfWhUgqaxY+bf7WXa9KAZ7Nxudp5XbA9SYjeU
rgce4fegWWzKM7ZVg5YU6owPTWY/8CC21c4YfBhEvFOubk2KJ660D+K9SCD+
7HpvU9j3UhQt8rugS3lBn5xzbpQnSVEkdvIn5fWeyVJ0Frtx7TLncBrxc05A
hVWGFLGwg/a+dWslh7g/TfyL9DfiXLs/WMZC4pPDcW6sZ1IUgZ3o7qYWH5Sh
M9jFNbtKrC8SB+8QVOk/kKGvsS1YMVy1eS8Kx/4PPR6AHA==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
qMG1o6aRvUYNwLz1Xk7GQg3+p2W6h+NSA+g7Dq50/6lBt9QwrkCdBlg4nR8h
w16LR37q0l4qN4D0Bw3qzLFabKk9bMV7tAFyfj89YfagFs8xNYrQWRqgU3Rt
42sWMrJ/uUuzqayH0J7ML/xbyPjzSEDR4rt60AzUz45jI+OaoeJH77J6aP2R
SYrcScYY/sflGYX1UFuqH+fPS8bFDLNBtox6yDmXJe0gRUaOmGufFCLrwc/M
4IrCJTJKbXm9KOlUD/JR2QXdaWQ8FrPH5ceRelDTEGWoZJKRfuPHBmbJeri8
PoWzPJuMvzpY1XgP14PbjViPuAIyZm+YnNUSrYcieHbevIKMkunn7lL318Oh
ietfJtvIKLqwT2DnznrgOSW47u8iGcsT3Zs7F+vgV2+0ttC5OuQ2fb6rl1wH
9IyDzvYX6jD9eCXPzdo6SHIriihUqcNMS169teo6uLiL3gMadSgjkkwSr6yD
aNU1SxODOkz+sMkqsLQO5N5Zu0fa1CGTgRnX06w6cI88lswSVIeOHNp/DCLr
YEWbvjDdVYe8n/xF9t+uA9mfmfpWn+sweOzYRN/NOnCNf1rW11OH0f2q9Lgb
dTA3oeTR1l+Hb9+1LvPZ1cHEk/L1+RN1uBiqQ5awqoPu4rQdzqt1qFtAO/XE
uA6K9zw58kuoHu+lmo/8VKmDWwMn7Jld6tHSQeDU0ME6cEwQrtK9U4/3r78/
PC9cB86mHOzJd+vxmWbgxHrC7l/nCs88qMd/0RHVBwXrwOdz9oqbbz3WMaIa
3PjrILb9wLPJqHqUUVjOObOnDlprt2W8r6rHr4fqbxqz1oFw0uho9KYGTChv
YuTOksH92puor5sb8IYp34XZH2SgC1ur8m9twBUe8rmjhO9kjuSkbG9AV+p3
rrczZGguYrjkcTdgnUbvJuokGWyahtY3HmrAC7cq4tlGyJA19W3frFYDvhi3
FV/fQwapE90GF6Ia8HaP2sbgRjLMtI8pl8c0oPy/F22jDcR4++WTkvENOL7d
ReIsYZEkbh7O5Ab87P8je66ODPxbr/SPZDWgTIV8ikktGdiHBq771DSgjmXZ
P+0KMvwImrzbMNqA7QonPyUVkCF3ZDVG8Xgj/mE+6vIhgQzS0fz3A2Ubcd0u
4XV6hEvU0eSTXCOa544tfXpFhooib367M4048d2D51s8sT7PLSmhyo24V1Lp
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
bVcPH8L/AFhwVEw=
       "]]}}, InsetBox[
     TemplateBox[{
      "\"[\\!\\(\\*SubscriptBox[\\(T\\), \\(tot\\)]\\)]\"",
       "\"[\\!\\(\\*SubscriptBox[\\(S\\), \
\\(p\\)]\\)]/[\\!\\(\\*SubscriptBox[\\(S\\), \\(tot\\)]\\)]\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.25}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"t\"", TraditionalForm], None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 14913.896162202176`}, {0, 1.01}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF0mlQU1cUB/CUzQroiMUplrJXQi2YdgREquQC3WxkQFA+QJEtUEsEyiK1
oAhCFSGtQFsWayuLymqQJRRIYAgJkJCAgMoSKkGWEqSgCSLQgaF25nLuhzdv
fnPu/8457zyLkGjvMA0KhRL9+vn/7aeabA5XH6Srz0xlcFenXeRGlPVxhhva
cnBE+OYowxstYfuKZSmiGH/0Envfz3tThxkhYPMOmUA2Hg5+R3VJoyOGBV7z
zas01zqLhAYs1fuUfvoIv9r7Uh5xk6Xw3yc2keD8jNGSIzxi35M6S2uKKNSB
rZtdWOyv8S1Y7N+lMqLGgK9Sl1yHGLGQL7fl6bQ5XgBPFwhmBnelgd3r/llM
9GFDPipjt+lAfS7YKyswPLQoH3zCaLz/sdNNcDz/StRUYRF4R1txJ0+vFNyY
/tgu3ecOeD/36d9ZsjIwp1KnNs24Egmw3+67kUw7WoXasVNUB46Pna4Gl5nQ
tr2xTtx3jNZhXXgP8pOBNbeaZ4lfnaNdPO7IATedV4yYIuKkpOv2qmMc6Mcl
mZ4t9OEgxevtGVIm6JTU5/O/BhD/cMWz1DmGg8axddk1fop0YsP8aIlNNQf9
hW1SQnOKfchBY9gvv+I3cldrkBx7Juv2jfWf7qMR7EfdIcxz48RCTYsDi3a1
4OKk3wUKWS3ktQyNBtRa9XD/4k6zuQ1qA7jVJbeiPJQL/ewZyIllZDZCvz4F
G1M/Sv4EO705f5Si2Qzz3pYziyKoLeDlp19WxTN54AeM1rYENh/sdbq2pZzT
CubeMQhMnGsDD1I3tUu2tYM/zq+6P3S3HU1gr8oLPK3cBeA1T5l6/hFxpMIh
QiuuA/xe0cxMgY4Q7qM5DJ36NJ/43vR6oau9CM5Hd34z2dwlgnppu/5malgn
2Hhh2axrjXh2wczBMqsLvs++7SmmfTbd4LJT1vqveMSW1wwXavXEkL/J1+iL
9BdD/dpHY/oTAWL0BDvhbj3DO4g41JidKQoh9spmShzDxHifSvr+xD2fG0cQ
azO7RJtRxBMe37lNxxG3HLJpF58X4/0r6VF6mbycy2L8/yjpXyw7H064Ss5b
KuYb/dikPlznUWeVR/LIz6CCW0G8u6Igb7R/az4lfWbFLH1jZWt+Jd2WcyJY
01UC52OZaS7bMyV4H0q6mtqvfWhUgqaxY+bf7WXa9KAZ7Nxudp5XbA9SYjeU
rgce4fegWWzKM7ZVg5YU6owPTWY/8CC21c4YfBhEvFOubk2KJ660D+K9SCD+
7HpvU9j3UhQt8rugS3lBn5xzbpQnSVEkdvIn5fWeyVJ0Frtx7TLncBrxc05A
hVWGFLGwg/a+dWslh7g/TfyL9DfiXLs/WMZC4pPDcW6sZ1IUgZ3o7qYWH5Sh
M9jFNbtKrC8SB+8QVOk/kKGvsS1YMVy1eS8Kx/4PPR6AHA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
qMG1o6aRvUYNwLz1Xk7GQg3+p2W6h+NSA+g7Dq50/6lBt9QwrkCdBlg4nR8h
w16LR37q0l4qN4D0Bw3qzLFabKk9bMV7tAFyfj89YfagFs8xNYrQWRqgU3Rt
42sWMrJ/uUuzqayH0J7ML/xbyPjzSEDR4rt60AzUz45jI+OaoeJH77J6aP2R
SYrcScYY/sflGYX1UFuqH+fPS8bFDLNBtox6yDmXJe0gRUaOmGufFCLrwc/M
4IrCJTJKbXm9KOlUD/JR2QXdaWQ8FrPH5ceRelDTEGWoZJKRfuPHBmbJeri8
PoWzPJuMvzpY1XgP14PbjViPuAIyZm+YnNUSrYcieHbevIKMkunn7lL318Oh
ietfJtvIKLqwT2DnznrgOSW47u8iGcsT3Zs7F+vgV2+0ttC5OuQ2fb6rl1wH
9IyDzvYX6jD9eCXPzdo6SHIriihUqcNMS169teo6uLiL3gMadSgjkkwSr6yD
aNU1SxODOkz+sMkqsLQO5N5Zu0fa1CGTgRnX06w6cI88lswSVIeOHNp/DCLr
YEWbvjDdVYe8n/xF9t+uA9mfmfpWn+sweOzYRN/NOnCNf1rW11OH0f2q9Lgb
dTA3oeTR1l+Hb9+1LvPZ1cHEk/L1+RN1uBiqQ5awqoPu4rQdzqt1qFtAO/XE
uA6K9zw58kuoHu+lmo/8VKmDWwMn7Jld6tHSQeDU0ME6cEwQrtK9U4/3r78/
PC9cB86mHOzJd+vxmWbgxHrC7l/nCs88qMd/0RHVBwXrwOdz9oqbbz3WMaIa
3PjrILb9wLPJqHqUUVjOObOnDlprt2W8r6rHr4fqbxqz1oFw0uho9KYGTChv
YuTOksH92puor5sb8IYp34XZH2SgC1ur8m9twBUe8rmjhO9kjuSkbG9AV+p3
rrczZGguYrjkcTdgnUbvJuokGWyahtY3HmrAC7cq4tlGyJA19W3frFYDvhi3
FV/fQwapE90GF6Ia8HaP2sbgRjLMtI8pl8c0oPy/F22jDcR4++WTkvENOL7d
ReIsYZEkbh7O5Ab87P8je66ODPxbr/SPZDWgTIV8ikktGdiHBq771DSgjmXZ
P+0KMvwImrzbMNqA7QonPyUVkCF3ZDVG8Xgj/mE+6vIhgQzS0fz3A2Ubcd0u
4XV6hEvU0eSTXCOa544tfXpFhooib367M4048d2D51s8sT7PLSmhyo24V1Lp
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
bVcPH8L/AFhwVEw=
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"t", None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 14913.896162202176`}, {0, 1.01}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
       "[\!\(\*SubscriptBox[\(T\), \(tot\)]\)]", 
        "[\!\(\*SubscriptBox[\(S\), \(p\)]\)]/[\!\(\*SubscriptBox[\(S\), \
\(tot\)]\)]"}, LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {0.85, 0.25}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.64391200964569*^9, 3.643912056580771*^9, 3.643912199713068*^9, {
   3.6439122442870293`*^9, 3.643912260455667*^9}, {3.643912296532455*^9, 
   3.6439123142411633`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0H1Q03UcB/ChM3bK00URSXA8pJAKCgQnd939vq7YJQYRDdAhRjyOBxEn
xg49DIaMIQ8DhDEYyB7qRgcDk+JJDSRxp7ECN0aawjqqaTSBTRZLsex+fj9/
/O53r3u/P5/P3dcn9VhcxgYKhZL73/f8f4Tpai/c4UD807U8HZ0aS9h2+Y0a
dBHohQW7ip/O6fajJ6SDIk1HaYssnLvq7PMmnqVhDyV/UnaJnYOdJZ7sZKkK
sE/W+59ZXTyBPdxrvvjG8SLsVyLS4mcXirFXfqy1BnmW4PvlDDcrf/JznE/t
HF++nl+GrZwYU2jsy3G/rXCtVDJ+Fjv2rbr7A5/ysX2WkzNafAVonTTXZXvY
uBCs2W2imtYF6CnpbR9+q3U/WoV9Or9E8e7dKryvms3l9xqqUM9zuvxEtKdy
cjyMVaiXtOpwXjTfBL6akLnHbAHPRbFWb9qdw6YQMZdlTueQijTdP/z9uAAw
z9lLa0eH/kvzf/2ZchJc1Xdl46gS3PBRcmiJczW2eOVJ6jufgcOvHkz0iK/B
nhb0H7CF1mJP+t+8tElbh/pIc/Ic/HJvCXF+7cJh9aCyHvvETFJgYFED9tfN
Rf7UxEbsOBbdYBdwHu8b+DvMumABf+XNkO243YS9fmCTo0jWjD1HMThk8kTY
FcLf2FtTWrBr/cTljwPF+J4fyg4LdWzF+espxi9E98A6lpBj6GrDtkk48gF3
CbbXHFNbwwe7xvL2sqVg2thFCX0EzEi+EjY0BuatqTW71WDZjRiP3Fvg0SZt
1pca8Fwaq98wBV4Pnqd46iToDvfB9mDaPMHNsYZs/hVsljllWE0S9DPp++W5
gd2+7WiWtDpT/TglAZx+zGXq1ASYwj3Y3RzegefF1SJfs/0FnFtPPbO8rQNz
bPtUi4c6kf5Ff/DuvukxsMvwoz5PG7hiZKN3dogUu1X/Mm9LDFhl9vm9Jxs8
WNr12pki8DXn4P2xZ8HvmRuavq8E35ixGPZWS9EM6Ur1Npq5BvKo4YSgnjrw
lm4+M6se+j+0Dxb7NEqR7n8bian0066bW8EzO1H3SqcUaUknBET+MTQMnnkz
yrdUC329J7PFmSYj9xuJDuaq5l6RjLxvJNwcCzKIeTDVe4Cf7SrHXg5Z72pk
yMn3NhKStUcbyqPBjFFDUiET+kvBXpw9CeA2OatyMRHMeFXUoTwE80sVt/vT
k+Qo93Jhozt1iYjM+cDwyxFwa/R1x/hUOconbbqj/C6sQI7ySNPZ1cfdSiB/
WPaxTi+G+Yb2rRHib8Ajjef7Mh6AFwROASGeCmzLkP8sNVGBskhTH6JKvVCB
2KT/Bdo4U90=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
HEULDEDKuwwWvBbcMzaM/h81wjby
       "]]}}, InsetBox[
     TemplateBox[{
      "\"[\\!\\(\\*SubscriptBox[\\(T\\), \\(tot\\)]\\)]\"",
       "\"[\\!\\(\\*SubscriptBox[\\(S\\), \
\\(p\\)]\\)]/[\\!\\(\\*SubscriptBox[\\(S\\), \\(tot\\)]\\)]\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.25}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"t\"", TraditionalForm], None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 2632.420961407248}, {0, 1.01}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF0H1Q03UcB/ChM3bK00URSXA8pJAKCgQnd939vq7YJQYRDdAhRjyOBxEn
xg49DIaMIQ8DhDEYyB7qRgcDk+JJDSRxp7ECN0aawjqqaTSBTRZLsex+fj9/
/O53r3u/P5/P3dcn9VhcxgYKhZL73/f8f4Tpai/c4UD807U8HZ0aS9h2+Y0a
dBHohQW7ip/O6fajJ6SDIk1HaYssnLvq7PMmnqVhDyV/UnaJnYOdJZ7sZKkK
sE/W+59ZXTyBPdxrvvjG8SLsVyLS4mcXirFXfqy1BnmW4PvlDDcrf/JznE/t
HF++nl+GrZwYU2jsy3G/rXCtVDJ+Fjv2rbr7A5/ysX2WkzNafAVonTTXZXvY
uBCs2W2imtYF6CnpbR9+q3U/WoV9Or9E8e7dKryvms3l9xqqUM9zuvxEtKdy
cjyMVaiXtOpwXjTfBL6akLnHbAHPRbFWb9qdw6YQMZdlTueQijTdP/z9uAAw
z9lLa0eH/kvzf/2ZchJc1Xdl46gS3PBRcmiJczW2eOVJ6jufgcOvHkz0iK/B
nhb0H7CF1mJP+t+8tElbh/pIc/Ic/HJvCXF+7cJh9aCyHvvETFJgYFED9tfN
Rf7UxEbsOBbdYBdwHu8b+DvMumABf+XNkO243YS9fmCTo0jWjD1HMThk8kTY
FcLf2FtTWrBr/cTljwPF+J4fyg4LdWzF+espxi9E98A6lpBj6GrDtkk48gF3
CbbXHFNbwwe7xvL2sqVg2thFCX0EzEi+EjY0BuatqTW71WDZjRiP3Fvg0SZt
1pca8Fwaq98wBV4Pnqd46iToDvfB9mDaPMHNsYZs/hVsljllWE0S9DPp++W5
gd2+7WiWtDpT/TglAZx+zGXq1ASYwj3Y3RzegefF1SJfs/0FnFtPPbO8rQNz
bPtUi4c6kf5Ff/DuvukxsMvwoz5PG7hiZKN3dogUu1X/Mm9LDFhl9vm9Jxs8
WNr12pki8DXn4P2xZ8HvmRuavq8E35ixGPZWS9EM6Ur1Npq5BvKo4YSgnjrw
lm4+M6se+j+0Dxb7NEqR7n8bian0066bW8EzO1H3SqcUaUknBET+MTQMnnkz
yrdUC329J7PFmSYj9xuJDuaq5l6RjLxvJNwcCzKIeTDVe4Cf7SrHXg5Z72pk
yMn3NhKStUcbyqPBjFFDUiET+kvBXpw9CeA2OatyMRHMeFXUoTwE80sVt/vT
k+Qo93Jhozt1iYjM+cDwyxFwa/R1x/hUOconbbqj/C6sQI7ySNPZ1cfdSiB/
WPaxTi+G+Yb2rRHib8Ajjef7Mh6AFwROASGeCmzLkP8sNVGBskhTH6JKvVCB
2KT/Bdo4U90=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
HEULDEDKuwwWvBbcMzaM/h81wjby
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"t", None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 2632.420961407248}, {0, 1.01}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
       "[\!\(\*SubscriptBox[\(T\), \(tot\)]\)]", 
        "[\!\(\*SubscriptBox[\(S\), \(p\)]\)]/[\!\(\*SubscriptBox[\(S\), \
\(tot\)]\)]"}, LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {0.85, 0.25}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.64391200964569*^9, 3.643912056580771*^9, 3.643912199713068*^9, {
   3.6439122442870293`*^9, 3.643912260455667*^9}, {3.643912296532455*^9, 
   3.643912314663866*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1208, 735},
WindowMargins->{{32, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 23, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 119, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[724, 27, 106, 1, 64, "Section"],
Cell[833, 30, 8445, 246, 811, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9315, 281, 209, 4, 64, "Section"],
Cell[9527, 287, 140, 1, 30, "Text"],
Cell[9670, 290, 720, 18, 81, "DisplayFormula"],
Cell[10393, 310, 198, 3, 30, "Text"],
Cell[10594, 315, 715, 24, 26, "DisplayFormula"],
Cell[11312, 341, 173, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[11510, 347, 6054, 193, 386, "Input"],
Cell[17567, 542, 3829, 120, 80, "Output"],
Cell[21399, 664, 748, 20, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22184, 689, 1419, 38, 48, "Input"],
Cell[23606, 729, 2555, 80, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26198, 814, 1004, 26, 28, "Input"],
Cell[27205, 842, 2239, 66, 50, "Output"]
}, Open  ]],
Cell[29459, 911, 125, 1, 30, "Text"],
Cell[29587, 914, 1026, 32, 44, "DisplayFormula"],
Cell[30616, 948, 96, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[30737, 953, 2122, 56, 69, "Input"],
Cell[32862, 1011, 1288, 39, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34187, 1055, 700, 20, 28, "Input"],
Cell[34890, 1077, 998, 30, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35925, 1112, 416, 11, 28, "Input"],
Cell[36344, 1125, 1830, 52, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38211, 1182, 98, 1, 28, "Input"],
Cell[38312, 1185, 1690, 50, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40039, 1240, 272, 7, 28, "Input"],
Cell[40314, 1249, 419, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40770, 1266, 282, 7, 28, "Input"],
Cell[41055, 1275, 667, 21, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41759, 1301, 958, 28, 51, "Input"],
Cell[42720, 1331, 1819, 54, 50, "Output"]
}, Open  ]],
Cell[44554, 1388, 5547, 156, 97, "Input"],
Cell[CellGroupData[{
Cell[50126, 1548, 706, 19, 28, "Input"],
Cell[50835, 1569, 2010, 56, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52882, 1630, 443, 12, 28, "Input"],
Cell[53328, 1644, 101706, 2370, 1719, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155071, 4019, 55, 1, 28, "Input"],
Cell[155129, 4022, 19094, 432, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174260, 4459, 208, 5, 28, "Input"],
Cell[174471, 4466, 77, 1, 28, "Output"]
}, Open  ]],
Cell[174563, 4470, 187, 4, 30, "Text"],
Cell[174753, 4476, 2581, 64, 119, "Input"],
Cell[177337, 4542, 271, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[177633, 4552, 8312, 238, 216, "Input"],
Cell[185948, 4792, 464, 9, 24, "Message"],
Cell[186415, 4803, 4863, 146, 147, "Output"]
}, Open  ]],
Cell[191293, 4952, 125, 1, 30, "Text"],
Cell[191421, 4955, 973, 31, 44, "DisplayFormula"],
Cell[192397, 4988, 96, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[192518, 4993, 1631, 50, 80, "Input"],
Cell[194152, 5045, 1559, 48, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195760, 5099, 235, 5, 64, "Section"],
Cell[195998, 5106, 601, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[196624, 5119, 32303, 714, 1358, "Input"],
Cell[228930, 5835, 131, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229098, 5843, 1085, 28, 46, "Input"],
Cell[230186, 5873, 387225, 6364, 190, 380423, 6251, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[617426, 12240, 419, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[617870, 12257, 240, 5, 28, "Input"],
Cell[618113, 12264, 139, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618289, 12272, 193, 4, 28, "Input"],
Cell[618485, 12278, 136, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618658, 12286, 14997, 385, 785, "Input"],
Cell[633658, 12673, 8259, 149, 246, "Output"],
Cell[641920, 12824, 46037, 822, 245, "Output"],
Cell[687960, 13648, 50375, 894, 245, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
