(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    701020,      13895]
NotebookOptionsPosition[    697170,      13767]
NotebookOutlinePosition[    697525,      13783]
CellTagsIndexPosition[    697482,      13780]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Scaffold protein titration motif", "Title",
 CellChangeTimes->{{3.6430002271357613`*^9, 3.6430002342704477`*^9}}],

Cell[CellGroupData[{

Cell["The model description", "Section",
 CellChangeTimes->{{3.643000294588601*^9, 3.643000299851523*^9}}],

Cell[TextData[{
 "This particular motif describe one phosphorylation-desphosphorylation cycle \
(can be generalized to any futile cycles) with both kinase ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "K"}], TraditionalForm]]],
 ") and phosphatase ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "P"}], TraditionalForm]]],
 ") can be titrated by a scaffold protein ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "T"}], TraditionalForm]]],
 ").\n\n",
 StyleBox["K + S \[Equilibrium] KS \[RightArrow] K + ", "DisplayFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["S", "p"], TraditionalForm]], "DisplayFormula"], 
  "DisplayFormula"],
 StyleBox["\nP + ", "DisplayFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "p"], " ", "\[Equilibrium]", " ", 
    SubscriptBox["PS", "p"]}], TraditionalForm]], "DisplayFormula"], 
  "DisplayFormula"],
 StyleBox[" \[RightArrow] P + S\nT + K \[Equilibrium] TK\nT + P \
\[Equilibrium] TP", "DisplayFormula"],
 "\n\nThe above reactions show a simple system that composed of one scaffold \
protein, one kinase, one phosphatase and one substrate. Here we try to \
descibe this simple system with differential equation following the mass \
action kinetics.\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "K", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "P", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
         SubscriptBox["S", "p"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "S", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", 
         SubscriptBox["S", "p"], "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
         SubscriptBox["S", "p"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}], "+", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "KS", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], "[", "K", "]"}], "[", "S", "]"}], "-", 
       
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], "[", "KS", "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], "[", "KS", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", 
         SubscriptBox["PS", "p"], "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], "[", "P", "]"}], "[", 
        SubscriptBox["S", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "5", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}], "-", 
       RowBox[{
        RowBox[{"k", "[", "6", "]"}], "[", 
        SubscriptBox["PS", "p"], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "T", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "+", 
       
       RowBox[{
        RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "TK", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "[", "T", "]"}], "[", "K", "]"}], "-", 
       
       RowBox[{
        RowBox[{"k", "[", "8", "]"}], "[", "TK", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", 
        RowBox[{"[", "TP", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "[", "T", "]"}], "[", "P", "]"}], "-", 
       
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "[", "TP", "]"}], "."}]}]}]}], 
    "DisplayFormula"], TraditionalForm]]],
 "\n\nAnd the system need to follow these conservation equations:\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"[", "K", "]"}], "+", 
       RowBox[{"[", "KS", "]"}], "+", 
       RowBox[{"[", "TK", "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["K", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "P", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["PS", "p"], "]"}], "+", 
       RowBox[{"[", "TP", "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["P", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "S", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["S", "p"], "]"}], "+", 
       RowBox[{"[", "KS", "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["PS", "p"], "]"}]}], "=", 
      RowBox[{"[", 
       SubscriptBox["S", "tot"], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"[", "T", "]"}], "+", 
       RowBox[{"[", "TK", "]"}], "+", 
       RowBox[{"[", "TP", "]"}]}], "=", 
      RowBox[{
       RowBox[{"[", 
        SubscriptBox["T", "tot"], "]"}], "."}]}]}], "DisplayFormula"], 
   TraditionalForm]]],
 "\n\nIn the following setion, we will solve the differential equations to \
understand the dynamics and behaviour of such system."
}], "Text",
 CellChangeTimes->{{3.64300032946461*^9, 3.643000411949408*^9}, 
   3.643000765009842*^9, {3.643000801521837*^9, 3.643000819809833*^9}, {
   3.6430008671825657`*^9, 3.643000900906423*^9}, {3.6430009876621447`*^9, 
   3.643001018130637*^9}, {3.643001148803453*^9, 3.643001408094447*^9}, {
   3.643001469379396*^9, 3.64300206984488*^9}, {3.643002302021605*^9, 
   3.64300248368265*^9}, {3.6430028896311207`*^9, 3.643002995076975*^9}, {
   3.643008434602817*^9, 3.6430084533503437`*^9}, {3.643008493769312*^9, 
   3.64300854988597*^9}, {3.643646793285623*^9, 3.64364685611843*^9}, {
   3.64364714847932*^9, 3.64364714849518*^9}, {3.643697127170084*^9, 
   3.643697217776668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understanding the dynamics of this simple system at steady states\
\>", "Section",
 CellChangeTimes->{{3.643008555381485*^9, 3.643008583516593*^9}, {
  3.6433655530615463`*^9, 3.643365557234893*^9}}],

Cell[TextData[StyleBox["The reactions are:", "DisplayFormula"]], "Text",
 CellChangeTimes->{{3.643361856288289*^9, 3.6433618645906973`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"K", "+", "S"}], "\[Equilibrium]", "KS"}], "\[RightArrow]", 
  RowBox[{"K", "+", 
   SubscriptBox["S", "p"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "+", 
    SubscriptBox["S", "p"]}], "\[Equilibrium]", 
   SubscriptBox["PS", "p"]}], "\[RightArrow]", 
  RowBox[{"P", "+", "S"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "+", "K"}], "\[Equilibrium]", "TK"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "+", "P"}], "\[Equilibrium]", "TP"}]}], "DisplayFormula",
 CellChangeTimes->{{3.6433618774715548`*^9, 3.6433619330526648`*^9}, {
  3.6433620036273327`*^9, 3.6433620088325567`*^9}, {3.643362129281958*^9, 
  3.6433622183967943`*^9}}],

Cell["The species are:", "Text",
 CellChangeTimes->{{3.643008589316565*^9, 3.643008598380373*^9}, {
  3.643008653866585*^9, 3.643008686730983*^9}, {3.643361831457127*^9, 
  3.6433618516152163`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"K", 
    RowBox[{"(", "1", ")"}]}], ",", 
   RowBox[{"P", 
    RowBox[{"(", "2", ")"}]}], ",", 
   RowBox[{"S", 
    RowBox[{"(", "3", ")"}]}], ",", 
   RowBox[{
    SubscriptBox["S", "p"], 
    RowBox[{"(", "4", ")"}]}], ",", 
   RowBox[{"KS", 
    RowBox[{"(", "5", ")"}]}], ",", 
   RowBox[{
    SubscriptBox["PS", "p"], 
    RowBox[{"(", "6", ")"}]}], ",", 
   RowBox[{"T", 
    RowBox[{"(", "7", ")"}]}], ",", 
   RowBox[{"TK", 
    RowBox[{"(", "8", ")"}]}], ",", 
   RowBox[{"TP", 
    RowBox[{"(", "9", ")"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{{3.643008711850252*^9, 3.64300877181549*^9}, {
  3.6433622575002604`*^9, 3.643362310785508*^9}}],

Cell["Here we have the differential equations:", "Text",
 CellChangeTimes->{{3.643008691634817*^9, 3.6430086930249767`*^9}, {
  3.643362288361381*^9, 3.643362297585257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "10", "}"}], ",", 
     RowBox[{"{", "9", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "7", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}], "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "[", 
    RowBox[{"[", "9", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", "10", "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"A", "[", 
     RowBox[{"[", "9", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stoiM", "=", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], 
      RowBox[{"x", "[", "1", "]"}], 
      RowBox[{"x", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], 
      RowBox[{"x", "[", "5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], 
      RowBox[{"x", "[", "5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "4", "]"}], 
      RowBox[{"x", "[", "2", "]"}], 
      RowBox[{"x", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], 
      RowBox[{"x", "[", "6", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "6", "]"}], 
      RowBox[{"x", "[", "6", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "7", "]"}], 
      RowBox[{"x", "[", "1", "]"}], 
      RowBox[{"x", "[", "7", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "8", "]"}], 
      RowBox[{"x", "[", "8", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "9", "]"}], 
      RowBox[{"x", "[", "2", "]"}], 
      RowBox[{"x", "[", "7", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "10", "]"}], 
      RowBox[{"x", "[", "9", "]"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eqns", "=", 
  RowBox[{"stoiM", ".", "ks"}]}], "\[IndentingNewLine]", 
 RowBox[{"mC", "=", 
  RowBox[{"RowReduce", "[", 
   RowBox[{"NullSpace", "[", "A", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.643361674632876*^9, 3.64336167547089*^9}, {
   3.6433617147367992`*^9, 3.643361793985777*^9}, {3.643362243655946*^9, 
   3.643362247349186*^9}, {3.643362322283595*^9, 3.6433624330175447`*^9}, {
   3.643362579076962*^9, 3.643362783772904*^9}, {3.643364279187258*^9, 
   3.643364414971779*^9}, {3.643364485773497*^9, 3.643364582982481*^9}, 
   3.643365235208138*^9, {3.643366034988674*^9, 3.643366061592079*^9}, {
   3.643640722487113*^9, 3.643640763697342*^9}, {3.6436412284096212`*^9, 
   3.643641256215787*^9}, {3.6436467933139343`*^9, 3.643646856126409*^9}, 
   3.643647148506926*^9, {3.643697127204623*^9, 3.643697217569248*^9}, {
   3.643707638380756*^9, 3.643707647399872*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "4", "]"}]}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "4", "]"}]}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "4", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "7", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.643697228547863*^9, 3.643707655915979*^9, 
  3.643727070281424*^9, 3.643727103241551*^9, 3.6437299887519083`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643697228547863*^9, 3.643707655915979*^9, 
  3.643727070281424*^9, 3.643727103241551*^9, 3.6437299887598257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsEqns", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"eqns", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "6", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "8", "]"}], "]"}], ",", 
    RowBox[{"eqns", "[", 
     RowBox[{"[", "9", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "+", 
     RowBox[{"x", "[", "5", "]"}], "+", 
     RowBox[{"x", "[", "8", "]"}], "-", 
     SubscriptBox["T", "1"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "+", 
     RowBox[{"x", "[", "6", "]"}], "+", 
     RowBox[{"x", "[", "9", "]"}], "-", 
     SubscriptBox["T", "2"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "+", 
     RowBox[{"x", "[", "4", "]"}], "+", 
     RowBox[{"x", "[", "5", "]"}], "+", 
     RowBox[{"x", "[", "6", "]"}], "-", 
     SubscriptBox["T", "3"]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "7", "]"}], "+", 
     RowBox[{"x", "[", "8", "]"}], "+", 
     RowBox[{"x", "[", "9", "]"}], "-", 
     SubscriptBox["T", "4"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.643364605281082*^9, 3.643364619344001*^9}, {
  3.643366139136932*^9, 3.643366283768693*^9}, {3.643640722562899*^9, 
  3.64364076377914*^9}, {3.643641228479548*^9, 3.643641256245201*^9}, {
  3.643727058121121*^9, 3.643727063267198*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"k", "[", "1", "]"}]}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "3", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"x", "[", "5", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "4", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "4", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "5", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "6", "]"}], " ", 
     RowBox[{"x", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "7", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "8", "]"}], " ", 
     RowBox[{"x", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "9", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "[", "10", "]"}], " ", 
     RowBox[{"x", "[", "9", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "1"]}], "+", 
    RowBox[{"x", "[", "1", "]"}], "+", 
    RowBox[{"x", "[", "5", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "2"]}], "+", 
    RowBox[{"x", "[", "2", "]"}], "+", 
    RowBox[{"x", "[", "6", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "3"]}], "+", 
    RowBox[{"x", "[", "3", "]"}], "+", 
    RowBox[{"x", "[", "4", "]"}], "+", 
    RowBox[{"x", "[", "5", "]"}], "+", 
    RowBox[{"x", "[", "6", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["T", "4"]}], "+", 
    RowBox[{"x", "[", "7", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6436972514988937`*^9, 3.6437076615339603`*^9, {3.6437270734439707`*^9, 
   3.643727105456304*^9}, 3.6437299916761847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"subsEqns", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], ",", 
      RowBox[{"x", "[", "5", "]"}], ",", 
      RowBox[{"x", "[", "6", "]"}], ",", 
      RowBox[{"x", "[", "8", "]"}], ",", 
      RowBox[{"x", "[", "9", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643366336179184*^9, 3.64336643459307*^9}, {
   3.643640752051255*^9, 3.6436407634656973`*^9}, {3.6436412281683064`*^9, 
   3.643641256270884*^9}, 3.643727096166057*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], "+", 
         RowBox[{"k", "[", "3", "]"}]}], ")"}], " ", 
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"k", "[", "6", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], " ", 
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "+", 
         RowBox[{"k", "[", "6", "]"}]}], ")"}], " ", 
       RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"k", "[", "6", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "+", 
         RowBox[{"k", "[", "6", "]"}]}], ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "4", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{
       RowBox[{"k", "[", "5", "]"}], "+", 
       RowBox[{"k", "[", "6", "]"}]}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "7", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], 
      RowBox[{"k", "[", "8", "]"}]]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"k", "[", "9", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], 
      RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.643697261522545*^9, 3.643707663590868*^9, {3.643727086234314*^9, 
   3.643727108089735*^9}, 3.643727190909494*^9, 3.643729992996666*^9}]
}, Open  ]],

Cell["Here we substitue the composited parameters:", "Text",
 CellChangeTimes->{{3.64372600591439*^9, 3.643726021032902*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "+", 
      RowBox[{"k", "[", "3", "]"}]}], 
     RowBox[{"k", "[", "1", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], "+", 
      RowBox[{"k", "[", "6", "]"}]}], 
     RowBox[{"k", "[", "4", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "2", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "6", "]"}], 
     RowBox[{"k", "[", "3", "]"}]], "\[Rule]", "kcr"}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "7", "]"}], 
     RowBox[{"k", "[", "8", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "9", "]"}], 
     RowBox[{"k", "[", "10", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "2", "]"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{
  3.643726034310108*^9, {3.6437273118471737`*^9, 3.6437273139827642`*^9}}],

Cell["Then we have:", "Text",
 CellChangeTimes->{{3.6437260525276737`*^9, 3.64372605806367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Following", " ", "the", " ", "current", " ", "solution"}], ",", 
    " ", 
    RowBox[{"and", " ", "substitute", " ", "the", " ", 
     SubscriptBox["T", "1"]}], ",", 
    SubscriptBox["T", "2"], ",", 
    SubscriptBox["T", "3"], ",", 
    SubscriptBox["T", "4"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"solution", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"km", "[", "1", "]"}], "*", "kcr", "*", " ", 
        RowBox[{"x", "[", "2", "]"}], "*", " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "*", " ", 
        RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}]}], 
       RowBox[{"km", "[", "2", "]"}]]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.643640722600461*^9, 3.643640763472082*^9}, {
   3.643641228182201*^9, 3.6436412562804193`*^9}, {3.643642669644499*^9, 
   3.6436427334075613`*^9}, {3.643646793519215*^9, 3.6436468560105743`*^9}, 
   3.643647148417572*^9, {3.643697127428403*^9, 3.6436972177044983`*^9}, {
   3.643727243034295*^9, 3.643727375498589*^9}, {3.643729411519258*^9, 
   3.643729417570405*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "1", "]"}]}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "5", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{"km", "[", "2", "]"}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "6", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{"km", "[", "2", "]"}]]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "8", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "1", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "9", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "2", "]"}], " ", 
     RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437294182928953`*^9, 3.643729997635726*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t12", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", "1", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "+", 
       RowBox[{"x", "[", "5", "]"}], "+", 
       RowBox[{"x", "[", "8", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"T", "[", "2", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "6", "]"}], "+", 
       RowBox[{"x", "[", "9", "]"}]}]}]}], "}"}], "/.", 
   "solution"}]}]], "Input",
 CellChangeTimes->{{3.643729388128778*^9, 3.64372942282086*^9}, {
  3.643729472061891*^9, 3.643729475970663*^9}, {3.643729530389345*^9, 
  3.643729567098056*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"T", "[", "1", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "+", 
     FractionBox[
      RowBox[{"kcr", " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{"km", "[", "2", "]"}]], "+", 
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"T", "[", "2", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], 
      RowBox[{"km", "[", "2", "]"}]], "+", 
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6437295586641283`*^9, 3.64372956755264*^9}, 
   3.643729999273538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "t12Sol", "}"}], "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"t12", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643729484882173*^9, 3.643729497997676*^9}, {
  3.643729564265799*^9, 3.643729603911234*^9}, {3.6437296790898323`*^9, 
  3.643729684602027*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"kd", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"km", "[", "2", "]"}], "+", 
          RowBox[{"x", "[", "4", "]"}], "+", 
          RowBox[{
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "2", "]"}]}], 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.643729577150885*^9, 3.643729605800269*^9}, 
   3.64372968582668*^9, 3.643729926266252*^9, 3.643730001000543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t12Sol"], "Input",
 CellChangeTimes->{{3.643729966127366*^9, 3.643729967591215*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"km", "[", "2", "]"}]}], " ", 
        RowBox[{"T", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "+", 
       RowBox[{"kcr", " ", 
        RowBox[{"T", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "-", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"kd", "[", "1", "]"}], " ", 
          RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"km", "[", "2", "]"}], "+", 
         RowBox[{"x", "[", "4", "]"}], "+", 
         RowBox[{
          RowBox[{"kd", "[", "2", "]"}], " ", 
          RowBox[{"km", "[", "2", "]"}], " ", 
          RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "2", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437299681327667`*^9, 3.643730002740101*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "[", "7", "]"}], "+", 
    RowBox[{"x", "[", "8", "]"}], "+", 
    RowBox[{"x", "[", "9", "]"}]}], ")"}], "/.", "solution"}]], "Input",
 CellChangeTimes->{{3.6437298042791243`*^9, 3.643729806421791*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "7", "]"}], "+", 
  RowBox[{
   RowBox[{"kd", "[", "1", "]"}], " ", 
   RowBox[{"x", "[", "1", "]"}], " ", 
   RowBox[{"x", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"kd", "[", "2", "]"}], " ", 
   RowBox[{"x", "[", "2", "]"}], " ", 
   RowBox[{"x", "[", "7", "]"}]}]}]], "Output",
 CellChangeTimes->{3.643729807142145*^9, 3.643729928925167*^9, 
  3.643730004508412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "3", "]"}], "+", 
   RowBox[{"x", "[", "4", "]"}], "+", 
   RowBox[{"x", "[", "5", "]"}], "+", 
   RowBox[{"x", "[", "6", "]"}]}], "/.", "solution"}]], "Input",
 CellChangeTimes->{{3.643730153902314*^9, 3.643730170584859*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "4", "]"}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{"km", "[", "2", "]"}]], "+", 
  FractionBox[
   RowBox[{"kcr", " ", 
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{"km", "[", "2", "]"}]], "+", 
  FractionBox[
   RowBox[{"kcr", " ", 
    RowBox[{"km", "[", "1", "]"}], " ", 
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "4", "]"}]}], 
   RowBox[{
    RowBox[{"km", "[", "2", "]"}], " ", 
    RowBox[{"x", "[", "1", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.6437301712256603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t3", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"T", "[", "3", "]"}], "==", 
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]], "+", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{"km", "[", "2", "]"}]], "+", 
      FractionBox[
       RowBox[{"kcr", " ", 
        RowBox[{"km", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "1", "]"}]}]]}]}], "}"}], "/.", 
   "t12Sol"}]}]], "Input",
 CellChangeTimes->{{3.6437301249675903`*^9, 3.643730133058387*^9}, {
  3.6437301804933233`*^9, 3.643730189448743*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"T", "[", "3", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"x", "[", "4", "]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "+", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"km", "[", "2", "]"}]}], " ", 
       RowBox[{"T", "[", "1", "]"}]}], "-", 
      RowBox[{
       RowBox[{"T", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], "+", 
      RowBox[{"kcr", " ", 
       RowBox[{"T", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6437301904351683`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"t32", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"km", "[", "2", "]"}], "+", 
       RowBox[{"x", "[", "4", "]"}], "+", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"km", "[", "2", "]"}]}], " ", 
        RowBox[{"T", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "+", 
       RowBox[{"kcr", " ", 
        RowBox[{"T", "[", "2", "]"}], " ", 
        RowBox[{"x", "[", "4", "]"}]}], "-", 
       RowBox[{
        RowBox[{"kd", "[", "2", "]"}], " ", 
        RowBox[{"km", "[", "2", "]"}], " ", 
        RowBox[{"T", "[", "1", "]"}], " ", 
        RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
     RowBox[{"T", "[", "3", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"x", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", "kcr", " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], "*", "kcr", " ", 
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "4", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.643743273203521*^9, 3.643743438651905*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t4", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"T", "[", "4", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]}], "}"}], "/.", "t12Sol"}]}]], "Input",\

 CellChangeTimes->{{3.643729614874198*^9, 3.6437296705307827`*^9}, {
   3.6437297008731537`*^9, 3.6437297209263906`*^9}, {3.643729785929903*^9, 
   3.643729888089787*^9}, 3.6437299440875187`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"T", "[", "4", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"x", "[", "7", "]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{"T", "[", "2", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}]}], 
     RowBox[{
      RowBox[{"km", "[", "2", "]"}], "+", 
      RowBox[{"x", "[", "4", "]"}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"x", "[", "7", "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"x", "[", "7", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"km", "[", "2", "]"}]}], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"kcr", " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"kd", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"km", "[", "2", "]"}], "+", 
        RowBox[{"x", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "7", "]"}]}]}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6437297106747847`*^9, 3.643729721622818*^9}, 
   3.643729790255838*^9, 3.643729822408499*^9, 3.6437298898876247`*^9, {
   3.643729955254242*^9, 3.643729976022353*^9}, 3.643730006148299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t4Sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Solve", "[", 
      RowBox[{"t4", ",", 
       RowBox[{"x", "[", "7", "]"}]}], "]"}], "}"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643731562720862*^9, 3.643731571843151*^9}, {
  3.643731630842449*^9, 3.64373165572816*^9}, {3.643732268453081*^9, 
  3.643732272770039*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "7", "]"}], "\[Rule]", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"kd", "[", "1", "]"}]}], " ", 
       RowBox[{"km", "[", "2", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "1", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{"T", "[", "4", "]"}]}], "-", 
      RowBox[{
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"x", "[", "4", "]"}]}]}], 
     RowBox[{"3", " ", 
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{"km", "[", "2", "]"}]}]], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"kd", "[", "1", "]"}]}], " ", 
              RowBox[{"km", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "1", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"kd", "[", "2", "]"}], " ", 
              RowBox[{"km", "[", "2", "]"}], " ", 
              RowBox[{"T", "[", "4", "]"}]}], "-", 
             RowBox[{
              RowBox[{"kd", "[", "1", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{"kd", "[", "1", "]"}], " ", 
          RowBox[{"kd", "[", "2", "]"}], " ", 
          RowBox[{"km", "[", "2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"km", "[", "2", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "2", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "2", "]"}], " ", 
             RowBox[{"km", "[", "2", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}]}], "-", 
            RowBox[{"x", "[", "4", "]"}], "-", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "1", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}], "+", 
            RowBox[{"kcr", " ", 
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "2", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"kd", "[", "1", "]"}], " ", 
             RowBox[{"T", "[", "4", "]"}], " ", 
             RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"3", " ", 
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "+", 
          RowBox[{"6", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"kd", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "1", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "2", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"km", "[", "2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"T", "[", "4", "]"}], "2"], " ", 
           RowBox[{"x", "[", "4", "]"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "1", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"9", " ", "kcr", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "2", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           RowBox[{"kd", "[", "2", "]"}], " ", 
           RowBox[{"km", "[", "2", "]"}], " ", 
           RowBox[{"T", "[", "4", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "4", "]"}], "3"]}], "+", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"km", "[", "2", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"T", "[", "4", "]"}], "2"], " ", 
                 RowBox[{"x", "[", "4", "]"}]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "1", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"9", " ", "kcr", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "2", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 RowBox[{"kd", "[", "2", "]"}], " ", 
                 RowBox[{"km", "[", "2", "]"}], " ", 
                 RowBox[{"T", "[", "4", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"x", "[", "4", "]"}], "3"]}]}], ")"}], "2"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"kd", "[", "1", "]"}]}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
                 RowBox[{"3", " ", 
                  RowBox[{"kd", "[", "1", "]"}], " ", 
                  RowBox[{"kd", "[", "2", "]"}], " ", 
                  RowBox[{"km", "[", "2", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                    RowBox[{"x", "[", "4", "]"}], "-", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}], "+", 
                    RowBox[{"kcr", " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}], 
               "3"]}]}], ")"}]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"3", " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"kd", "[", "1", "]"}], " ", 
       RowBox[{"kd", "[", "2", "]"}], " ", 
       RowBox[{"km", "[", "2", "]"}]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"kd", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "1", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "2", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"km", "[", "2", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"T", "[", "4", "]"}], "2"], " ", 
         RowBox[{"x", "[", "4", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "1", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"9", " ", "kcr", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "2", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         RowBox[{"kd", "[", "2", "]"}], " ", 
         RowBox[{"km", "[", "2", "]"}], " ", 
         RowBox[{"T", "[", "4", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "4", "]"}], "3"]}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "3"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "3"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "3"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"kd", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "1", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "2", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"km", "[", "2", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"T", "[", "4", "]"}], "2"], " ", 
               RowBox[{"x", "[", "4", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "2"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "1", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"9", " ", "kcr", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "2", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"T", "[", "4", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"kd", "[", "1", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", "4", "]"}], "3"]}]}], ")"}], "2"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"kd", "[", "1", "]"}]}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "1", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "2", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}], " ", 
                    RowBox[{"T", "[", "4", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"x", "[", "4", "]"}]}]}], ")"}], "2"]}], "-", 
               RowBox[{"3", " ", 
                RowBox[{"kd", "[", "1", "]"}], " ", 
                RowBox[{"kd", "[", "2", "]"}], " ", 
                RowBox[{"km", "[", "2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"km", "[", "2", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "1", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "2", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "2", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "2", "]"}], " ", 
                   RowBox[{"km", "[", "2", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}]}], "-", 
                  RowBox[{"x", "[", "4", "]"}], "-", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "1", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}], "+", 
                  RowBox[{"kcr", " ", 
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "2", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"kd", "[", "1", "]"}], " ", 
                   RowBox[{"T", "[", "4", "]"}], " ", 
                   RowBox[{"x", "[", "4", "]"}]}]}], ")"}]}]}], ")"}], 
             "3"]}]}], ")"}]}]}], ")"}], 
      RowBox[{"1", "/", "3"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.643731573627398*^9, {3.6437316379359503`*^9, 3.643731656951928*^9}, 
   3.6437322742290297`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t3", "/.", "t4Sol"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "3", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"x", "[", "4", "]"}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}], 
             RowBox[{
              RowBox[{"km", "[", "2", "]"}], "+", 
              RowBox[{"x", "[", "4", "]"}], "+", 
              RowBox[{
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  RowBox[{"3", " ", 
                   TemplateBox[{"2"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                   " ", 
                   RowBox[{"km", "[", "2", "]"}]}]], "+", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                 "-", 
                 FractionBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 
                    7]& )]]}], ")"}]}]}]], "+", 
            FractionBox[
             RowBox[{"kcr", " ", 
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}]}], 
             RowBox[{
              RowBox[{"km", "[", "2", "]"}], "+", 
              RowBox[{"x", "[", "4", "]"}], "+", 
              RowBox[{
               RowBox[{"kd", "[", "2", "]"}], " ", 
               RowBox[{"km", "[", "2", "]"}], " ", 
               RowBox[{"(", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                ")"}]}]}]], "-", 
            FractionBox[
             RowBox[{"kcr", " ", 
              RowBox[{"km", "[", "1", "]"}], " ", 
              RowBox[{"T", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"kd", "[", "1", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    RowBox[{"3", " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}]], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["2", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
                    
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}]}
                    ]}], 
                    RowBox[{"3", " ", 
                    TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 
                    7]& )]}]], "-", 
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], 
                    RowBox[{"1", "/", "3"}]], 
                    RowBox[{"3", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"1", "/", "3"}]], " ", 
                    RowBox[{"kd", "[", "1", "]"}], " ", 
                    RowBox[{"kd", "[", "2", "]"}], " ", 
                    RowBox[{"km", "[", "2", "]"}]}]]}], ")"}]}]}], ")"}]}], 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]]}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 2612, 23584033851199460344, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[2612]]], "Output",
 CellChangeTimes->{3.643732339825753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"t3", "/.", "t4Sol"}], ",", 
   RowBox[{"x", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643732294411021*^9, 3.6437323288941393`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.643747356916955*^9}]
}, Open  ]],

Cell["\<\
Here we have the solution for the system we can plug in the values of total \
concentrations.\
\>", "Text",
 CellChangeTimes->{{3.6434575042104263`*^9, 3.6434575272338467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "following", " ", "commented", " ", "region", " ", "is", " ", 
    "merely", " ", "show", " ", "that", " ", "there", " ", "is", " ", "only", 
    " ", "one", " ", "steady", " ", "state", " ", "for", " ", "this", " ", 
    "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"jacobian", "=", 
     RowBox[{"D", "[", 
      RowBox[{"subsEqns", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], ",", 
          RowBox[{"x", "[", "2", "]"}], ",", 
          RowBox[{"x", "[", "3", "]"}], ",", 
          RowBox[{"x", "[", "4", "]"}], ",", 
          RowBox[{"x", "[", "5", "]"}], ",", 
          RowBox[{"x", "[", "6", "]"}], ",", 
          RowBox[{"x", "[", "7", "]"}], ",", 
          RowBox[{"x", "[", "8", "]"}], ",", 
          RowBox[{"x", "[", "9", "]"}]}], "}"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"detJ", "=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Distribute", "[", 
        RowBox[{"Det", "[", "jacobian", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], ",", 
         RowBox[{"x", "[", "2", "]"}], ",", 
         RowBox[{"x", "[", "3", "]"}], ",", 
         RowBox[{"x", "[", "4", "]"}], ",", 
         RowBox[{"x", "[", "5", "]"}], ",", 
         RowBox[{"x", "[", "6", "]"}], ",", 
         RowBox[{"x", "[", "7", "]"}], ",", 
         RowBox[{"x", "[", "8", "]"}], ",", 
         RowBox[{"x", "[", "9", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"detSubs", "=", 
     RowBox[{"Replace", "[", 
      RowBox[{"detJ", ",", 
       RowBox[{"solution", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"polSubs", "=", 
     RowBox[{"Numerator", "[", 
      RowBox[{"Together", "[", "detSubs", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"finalSubs", "=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Distribute", "[", "polSubs", "]"}], ",", 
       SubscriptBox["x", "_"], ",", "FactorTerms"}], "]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.643366698131743*^9, 3.643366717351111*^9}, 
   3.643366835940318*^9, {3.6433669363122253`*^9, 3.64336695196773*^9}, {
   3.643530134985106*^9, 3.643530194764078*^9}, {3.643640722644587*^9, 
   3.643640763483218*^9}, {3.6436412281952457`*^9, 3.643641256296817*^9}}],

Cell[TextData[{
 "Here we directly solve the system with ",
 StyleBox["Mathematica\[CloseCurlyQuote]s Solve function.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.643367092552786*^9, 3.6433671229989233`*^9}, {
  3.643725881086652*^9, 3.643725908203776*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"des", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "3", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "4", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "6", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "8", "]"}], "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "9", "]"}], "'"}], "[", "t", "]"}]}], "}"}], 
     "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "7", "]"}]}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}]}], "}"}]}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"T", "[", "1", "]"}], ",", 
      RowBox[{"T", "[", "2", "]"}], ",", 
      RowBox[{"T", "[", "3", "]"}], ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"T", "[", "4", "]"}], ",", "0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"solution", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"des", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
     "\[Equal]", 
     RowBox[{"des", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"des", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.643367193698986*^9, 3.643367242471057*^9}, {
  3.643367722240954*^9, 3.643367740787838*^9}, {3.643367772741246*^9, 
  3.643367798538733*^9}, {3.6433699547765703`*^9, 3.64336997182723*^9}, {
  3.643640722664279*^9, 3.643640763489441*^9}, {3.643641228213147*^9, 
  3.643641256309085*^9}, {3.643725943766135*^9, 3.643725967039042*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643725968789598*^9, 3.643726220006855*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "[", "2", "]"}], "+", 
          RowBox[{"k", "[", "3", "]"}]}], ")"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "[", "5", "]"}], "+", 
          RowBox[{"k", "[", "6", "]"}]}], ")"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{
        RowBox[{"k", "[", "4", "]"}], " ", 
        RowBox[{"k", "[", "6", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "6", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "7", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "8", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "9", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "9", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "10", "]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", "0"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", "[", "7", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], 
       RowBox[{"k", "[", "8", "]"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", "0"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643725968795951*^9, 3.643726220014503*^9}]
}, Open  ]],

Cell["Here we substitue the composited parameters:", "Text",
 CellChangeTimes->{{3.64372600591439*^9, 3.643726021032902*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "+", 
      RowBox[{"k", "[", "3", "]"}]}], 
     RowBox[{"k", "[", "1", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"k", "[", "5", "]"}], "+", 
      RowBox[{"k", "[", "6", "]"}]}], 
     RowBox[{"k", "[", "4", "]"}]], "\[Rule]", 
    RowBox[{"km", "[", "2", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "3", "]"}], 
     RowBox[{"k", "[", "6", "]"}]], "\[Rule]", "kcr"}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "7", "]"}], 
     RowBox[{"k", "[", "8", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"k", "[", "9", "]"}], 
     RowBox[{"k", "[", "10", "]"}]], "\[Rule]", 
    RowBox[{"kd", "[", "2", "]"}]}]}], "}"}]], "DisplayFormula",
 CellChangeTimes->{3.643726034310108*^9}],

Cell["Then we have:", "Text",
 CellChangeTimes->{{3.6437260525276737`*^9, 3.64372605806367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "->", 
     FractionBox[
      RowBox[{
       RowBox[{"km", "[", "1", "]"}], 
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "->", 
     FractionBox[
      RowBox[{"kcr", "*", 
       RowBox[{"km", "[", "2", "]"}], " ", 
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "->", 
     RowBox[{"kcr", " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "->", 
     RowBox[{
      RowBox[{"kd", "[", "1", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "->", 
     RowBox[{
      RowBox[{"kd", "[", "2", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}]}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.6437261845344343`*^9, 3.6437262009429207`*^9}, {
  3.643726231689011*^9, 3.643726234400688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"km", "[", "1", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"kcr", " ", 
      RowBox[{"km", "[", "2", "]"}], " ", 
      RowBox[{
       RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"kcr", " ", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "1", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"kd", "[", "2", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.643726172180456*^9, {3.6437262051726313`*^9, 3.643726234961993*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Understanding the dynamics of the simple system with input pertubations \
(numerical study)\
\>", "Section",
 CellChangeTimes->{{3.643432279601602*^9, 3.6434323025121317`*^9}, {
  3.643447142474243*^9, 3.643447146830916*^9}}],

Cell["\<\
Since, it is a bit difficult to solve the differential equations \
analytically. Here we try to study them numerically. By defining two \
different way to characterising the dynamics with scoring their tempral \
dynamics when presented with input signal perturbation (the changing of [T]). \
The quantification can be derived from the actually fitness funcitons for \
ultrasensitive response and adaptive response. Then we save all the parameter \
sets as well as their score on ultrasensitivity and adaptation.\
\>", "Text",
 CellChangeTimes->{{3.643432324324327*^9, 3.643432525306143*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"des", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "1", "]"}]}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "4", "]"}]}], "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "5", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "6", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "[", "7", "]"}]}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], "*", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "7", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "8", "]"}], "*", " ", 
         RowBox[{
          RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "9", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "[", "t", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"k", "[", "10", "]"}], " ", "*", 
         RowBox[{
          RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
    RowBox[{"init", "=", 
     RowBox[{"{", 
      RowBox[{
      "totK", ",", "totP", ",", "totS", ",", "0", ",", "0", ",", "0", ",", 
       "totT", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tot", "[", "1", "]"}], ",", 
         RowBox[{"tot", "[", "2", "]"}], ",", 
         RowBox[{"tot", "[", "3", "]"}], ",", "0.00001", ",", "0.00001", ",", 
         "0.00001", ",", "totT", ",", "0.00001", ",", "0.00001"}], "}"}]}], 
      ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"totK", "=", "1"}], ";", 
    RowBox[{"totP", "=", "1"}], ";", 
    RowBox[{"totS", "=", "10"}], ";", "\[IndentingNewLine]", 
    RowBox[{"stepNum", "=", "6"}], ";", "\[IndentingNewLine]", 
    RowBox[{"sampleSize", "=", "20000"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"pars", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vars", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"x", ",", "9"}], "]"}]}], ";", "\n", 
    RowBox[{"dvars", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Derivative", "[", "1", "]"}], "[", "vars", "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"SeedRandom", "[", 
     RowBox[{"IntegerPart", "[", 
      RowBox[{"SessionTime", "[", "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ts", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"num", "=", "1"}], ",", 
      RowBox[{"num", "\[LessEqual]", "sampleSize"}], ",", 
      RowBox[{"num", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", ",", "T", ",", "ssthreshold"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "[", "n_", "]"}], ":=", 
           RowBox[{
            RowBox[{"k", "[", "n", "]"}], "=", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"RandomReal", "[", "]"}], "*", "6"}], "-", "3"}], 
              ")"}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"tot", "[", "n_", "]"}], ":=", 
             RowBox[{
              RowBox[{"tot", "[", "n", "]"}], "=", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RandomReal", "[", "]"}], "*", "4"}], "-", "3"}], 
                ")"}]}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ksTest1", "=", 
             RowBox[{"Array", "[", 
              RowBox[{"k", ",", "10"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"totT", "=", "1.*^-3"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"totT", "=", "0.01"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tPer", ",", "step"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"tPer", "=", 
              RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
             RowBox[{
              RowBox[{"{", "sol", "}"}], "=", 
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Through", "[", 
                    RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", 
                   "des"}], ",", 
                  RowBox[{
                   RowBox[{"Through", "[", 
                    RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", 
                   "init"}], ",", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"df", "=", 
                    RowBox[{"Through", "[", 
                    RowBox[{"dvars", "[", "t", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"WhenEvent", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                    RowBox[{"step", "=", 
                    RowBox[{"step", "+", "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                    "\"\<StopIntegration\>\""}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                    "2"}]}]}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", "vars", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
                RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "ts", "]"}], "==", "stepNum"}], " ", "&&", 
                RowBox[{"AllTrue", "[", 
                 RowBox[{"ts", ",", "Positive"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"x4", "=", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], 
                  "]"}]}], ";", 
                RowBox[{"xT", "=", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", "8", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", "9", "]"}], "[", 
                    RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", 
                   "sol"}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"us", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "]"}], "/", 
                    "totS"}], ")"}], "*", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], ",", "0.01"}], 
                    "]"}]}], "]"}], "+", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "stepNum", "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"stepNum", "-", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"stepNum", "/", "2"}], "]"}], "+", 
                    RowBox[{"10", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}]}], "]"}], "]"}]}], 
                    ")"}]}], "]"}]}], ")"}], "/", "2"}], ")"}], "/", "10.0"}],
                     ",", "1.0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"ad", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "<", "stepNum"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ad", "=", 
                    RowBox[{"ad", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"ts", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"ts", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
                    "]"}], "/.", "sol"}], "]"}], "-", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", 
                    RowBox[{"ts", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "/.", "sol"}], 
                    "]"}]}], "]"}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"0.5", "*", "totS"}], ")"}]}], ")"}], ",", 
                    "1.0"}], "]"}], "*", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "0.1", ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"x4", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"x4", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0.001"}], 
                    "]"}], ")"}]}], ",", "1.0"}], "]"}]}], ")"}], "]"}]}]}], 
                   ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ad", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ad", "/", "0.0001"}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}], ")"}]}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"ks", "=", 
                 RowBox[{"Array", "[", 
                  RowBox[{"k", ",", "10"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"pars", ",", 
                  RowBox[{"Join", "[", 
                   RowBox[{"ks", ",", 
                    RowBox[{"{", 
                    RowBox[{"us", ",", "ad", ",", "num", ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "+", 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]], ",", 
                    FractionBox[
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], 
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]]}], "}"}]}], "]"}]}], 
                 "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}], ")"}], ",", 
           RowBox[{
            RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "}"}], "/.", 
         "sol"}], "}"}], ",", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "1", "]"}], "[", "\"\<Domain\>\"", "]"}], "/.", 
           "sol"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(T\), \(tot\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(p\)]\)\>\""}], "}"}]}]}], "}"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"xT", ",", "x4"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", "pars", "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transPars", "=", 
   RowBox[{"Transpose", "[", "pars", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<saturationSampling.csv\>\"", ",", "transPars"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<unsaturationSampling.csv\>\"", ",", "transPars"}], "]"}], 
    ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6436998607458267`*^9, 3.64369987374323*^9}, {
   3.643700443540639*^9, 3.64370047891429*^9}, {3.643700602787548*^9, 
   3.6437006557159557`*^9}, {3.643700709342*^9, 3.6437007204569902`*^9}, {
   3.643700893186097*^9, 3.643700948011629*^9}, {3.643701032452085*^9, 
   3.6437010509873133`*^9}, {3.64370108395295*^9, 3.643701246152096*^9}, {
   3.643701281997408*^9, 3.643701285452072*^9}, {3.643701358439164*^9, 
   3.643701359498829*^9}, {3.643703625594398*^9, 3.643703661640195*^9}, {
   3.643707074085537*^9, 3.643707083324019*^9}, {3.643707196349228*^9, 
   3.643707321159984*^9}, {3.6437074302136917`*^9, 3.6437074370119877`*^9}, {
   3.64370754571481*^9, 3.643707592127945*^9}, {3.643707785458756*^9, 
   3.6437078294159307`*^9}, {3.643707893733403*^9, 3.643707894189171*^9}, {
   3.643707935223962*^9, 3.6437079484120493`*^9}, {3.6437080341490707`*^9, 
   3.6437080350598593`*^9}, {3.643708071497499*^9, 3.6437080865558043`*^9}, {
   3.643708593108572*^9, 3.643708596369643*^9}, {3.643708672414555*^9, 
   3.6437087204607286`*^9}, {3.6437089611170073`*^9, 3.643708975970174*^9}, 
   3.6437090520995502`*^9, {3.643709098492749*^9, 3.643709106305456*^9}, {
   3.6437091399232483`*^9, 3.643709169629492*^9}, {3.643709256925111*^9, 
   3.643709257132523*^9}, {3.643709338703919*^9, 3.643709346286169*^9}, {
   3.643709378918676*^9, 3.643709494906054*^9}, {3.643709596944428*^9, 
   3.64370963146951*^9}, {3.643709735342758*^9, 3.643709823413134*^9}, {
   3.643710624547573*^9, 3.643710625812334*^9}, 3.643710750292179*^9, {
   3.643710858269864*^9, 3.643710898064659*^9}, {3.643710966547195*^9, 
   3.64371097515523*^9}, {3.64371104018013*^9, 3.64371108786134*^9}, 
   3.64371113078376*^9, {3.6437112407556057`*^9, 3.64371125648171*^9}, {
   3.643711405131199*^9, 3.6437114166348057`*^9}, {3.643711447679839*^9, 
   3.643711460346919*^9}, {3.643711523674697*^9, 3.643711561435845*^9}, {
   3.6437116344309607`*^9, 3.643711636700222*^9}, {3.64371167350709*^9, 
   3.643711691648848*^9}, {3.64371183342909*^9, 3.643711844462294*^9}, 
   3.643712208436214*^9, 3.643712245542878*^9, 3.643712294673707*^9, {
   3.643712575863043*^9, 3.643712576715694*^9}, {3.643712664480938*^9, 
   3.643712698082272*^9}, {3.643712809030074*^9, 3.6437128446501493`*^9}, {
   3.64371289296848*^9, 3.643712899155567*^9}, {3.643712956978305*^9, 
   3.64371298108113*^9}, {3.643713056714593*^9, 3.6437131915399227`*^9}, {
   3.643713257332386*^9, 3.643713267507085*^9}, {3.6437133008862553`*^9, 
   3.6437133406159887`*^9}, {3.643713450379533*^9, 3.643713471479327*^9}, {
   3.643713892003942*^9, 3.643713911025716*^9}, {3.6437139562762213`*^9, 
   3.64371398010991*^9}, {3.643714639759891*^9, 3.643714643084107*^9}, {
   3.643714958546296*^9, 3.643714969352805*^9}, {3.643715005283742*^9, 
   3.643715086668138*^9}, {3.643715129477428*^9, 3.6437151356280403`*^9}, 
   3.6437151762347527`*^9, {3.6437152578781767`*^9, 3.6437152719375362`*^9}, {
   3.643715634780582*^9, 3.6437156548669577`*^9}, 3.643716049588812*^9, {
   3.64371614138422*^9, 3.6437161415424833`*^9}, {3.6437162531221323`*^9, 
   3.643716255022552*^9}, {3.6437164825805273`*^9, 3.643716510081345*^9}, 
   3.6437165491758223`*^9, {3.643716734311495*^9, 3.643716831361841*^9}, {
   3.643717118075388*^9, 3.6437171571027803`*^9}, 3.643717213972543*^9, {
   3.643717377995943*^9, 3.64371738334451*^9}, {3.6438019842927313`*^9, 
   3.643801984834285*^9}, {3.643802072623665*^9, 3.643802074270644*^9}, {
   3.643802193867587*^9, 3.643802199467388*^9}, {3.643802344243903*^9, 
   3.643802404684071*^9}, {3.6438024515582113`*^9, 3.643802486852908*^9}, {
   3.643805054395994*^9, 3.643805054830299*^9}, {3.643805262356163*^9, 
   3.643805375350564*^9}, {3.6438054138727217`*^9, 3.643805606097179*^9}, {
   3.643809797842573*^9, 3.643809816298414*^9}, {3.643818988273415*^9, 
   3.6438189968471727`*^9}, {3.643819173970346*^9, 3.643819212412099*^9}, {
   3.643819247086412*^9, 3.643819280771469*^9}, {3.6438193307800217`*^9, 
   3.6438193695271883`*^9}, {3.6438194334679728`*^9, 3.643819511648574*^9}, {
   3.643819546623178*^9, 3.643819583112074*^9}, 3.6438196793816957`*^9, {
   3.6438220198681097`*^9, 3.643822022338086*^9}, {3.643828504825946*^9, 
   3.6438285174294167`*^9}, {3.643828548223618*^9, 3.643828632475018*^9}, {
   3.6438298342550373`*^9, 3.643829889946651*^9}, {3.64382994552845*^9, 
   3.643829979966634*^9}, {3.643830125338416*^9, 3.643830167326668*^9}, {
   3.6438303075130587`*^9, 3.643830336308387*^9}, {3.6438303831714783`*^9, 
   3.64383038575229*^9}, {3.6438305129923058`*^9, 3.6438306317812138`*^9}, {
   3.6438306671737833`*^9, 3.6438306689485817`*^9}, {3.6438307278075542`*^9, 
   3.643830802034758*^9}, {3.643830889441547*^9, 3.643830931305472*^9}, {
   3.643830990249948*^9, 3.643831123901005*^9}, {3.643831201604356*^9, 
   3.643831299854604*^9}, {3.643831399961038*^9, 3.643831459110828*^9}, {
   3.643831506627194*^9, 3.643831537936737*^9}, {3.643831608173341*^9, 
   3.643831608307686*^9}, {3.643831711993099*^9, 3.643831744464335*^9}, {
   3.643832098193355*^9, 3.6438321286737747`*^9}, {3.6438322711204967`*^9, 
   3.643832272617275*^9}, {3.6438323160213747`*^9, 3.643832318082793*^9}, {
   3.643832393835185*^9, 3.643832397204617*^9}, {3.6438325010823402`*^9, 
   3.643832509037045*^9}, {3.643832663876281*^9, 3.6438326720499897`*^9}, {
   3.6438327851791277`*^9, 3.643832926741323*^9}, {3.64383297086992*^9, 
   3.643832977212739*^9}, 3.643833010401772*^9, {3.643833056485463*^9, 
   3.643833104886807*^9}, {3.64383323160408*^9, 3.643833234521524*^9}, {
   3.643836214019712*^9, 3.643836227672683*^9}, {3.643836366865302*^9, 
   3.643836368873066*^9}, {3.643836440391271*^9, 3.643836523352335*^9}, {
   3.64383657721624*^9, 3.643836648568473*^9}, {3.643836682959277*^9, 
   3.6438367176744556`*^9}, {3.643837076471232*^9, 3.643837124731679*^9}, {
   3.6438371637972183`*^9, 3.6438371880399857`*^9}, {3.643837317247546*^9, 
   3.643837402939303*^9}, {3.643837499560758*^9, 3.6438375311373777`*^9}, {
   3.6438376769327383`*^9, 3.6438376815383167`*^9}, {3.643837765568635*^9, 
   3.6438377718601418`*^9}, 3.643837824307084*^9, {3.643838256952345*^9, 
   3.643838332743099*^9}, {3.643838366954842*^9, 3.6438383834447727`*^9}, {
   3.6438384215033083`*^9, 3.64383846399758*^9}, 3.64383849495977*^9, {
   3.643838701796266*^9, 3.6438387109029417`*^9}, {3.643838747908374*^9, 
   3.643838748479892*^9}, {3.643838781342587*^9, 3.643838782916397*^9}, {
   3.643838879940036*^9, 3.643838890009015*^9}, {3.643838966145993*^9, 
   3.643838967075069*^9}, {3.643839046164988*^9, 3.643839104031039*^9}, {
   3.64383926798129*^9, 3.643839285037622*^9}, {3.6438701247914743`*^9, 
   3.643870135900445*^9}, {3.6438701891583242`*^9, 3.643870236441031*^9}, {
   3.643870306478887*^9, 3.6438703421098557`*^9}, {3.64387052312081*^9, 
   3.643870565230147*^9}, {3.643870699507579*^9, 3.643870720942498*^9}, {
   3.643870990053138*^9, 3.643871027299677*^9}, 3.643871119755238*^9, {
   3.643871231585519*^9, 3.643871269590713*^9}, {3.643871478881982*^9, 
   3.64387152600415*^9}, {3.643871561303986*^9, 3.643871619250478*^9}, {
   3.643872187732053*^9, 3.6438721939727097`*^9}, {3.64387232000991*^9, 
   3.643872334497273*^9}, 3.6438723919381723`*^9, {3.643872447860795*^9, 
   3.643872536860724*^9}, {3.643880147392737*^9, 3.643880189079645*^9}, {
   3.6438802520194902`*^9, 3.643880261019184*^9}, {3.64388225018675*^9, 
   3.643882283223918*^9}, {3.643882321105866*^9, 3.643882334118845*^9}, {
   3.6438834557934523`*^9, 3.643883456538495*^9}, 3.6438834932597513`*^9, {
   3.6438836765769672`*^9, 3.643883712242968*^9}, {3.643889899273781*^9, 
   3.6438898995277863`*^9}, 3.643892049140855*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"transPars", "[", 
       RowBox[{"[", "11", "]"}], "]"}], ",", 
      RowBox[{"transPars", "[", 
       RowBox[{"[", "12", "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Ultrasensitive score\>\"", ",", "\"\<Adaptive score\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6438823491171*^9, 3.6438823778549767`*^9}, {
  3.643882412807231*^9, 3.643882525639991*^9}, {3.643882564867941*^9, 
  3.6438825736810923`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], Dashing[{}], 
     CapForm["Butt"], GeometricTransformationBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], Dashing[{}], 
         CapForm["Butt"], 
         DiskBox[{0, 0}, 
          Offset[{2.75, 2.75}, {0., 0.}]]}], {0., 0.}], CompressedData["
1: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
RWJjr5v6byFbfGQObM9IIfvrL3o9ijxiTWHUxFXC/vY2ruS7Hj+ziX3t/8aC
zyn/lrNAml3BXmSDNyme/LVSO4qsv65z+xTdfoFG2rvP2f/LT27aQjdErv/p
+tJ+9oiXw1r/H7wsr4OvS6J04xPhsNxMSO2P4j3PwIZSsfNG64u9QKHacMNc
OQbV3IXGVBGr+u21hLcrxXXYHg1aL3i/Cn9s5ng6D5PxWkOR1KVn+eqIo/xR
tJerLXA2qlioQ24nuLq7ZAVnU/CNISl7C/sEYbCf0and6yqyCnMlfnUWY3bP
nacRWY3I544qUnYn48/ajlJ+V2q/BsGcXaqjrk3Yr7047NjxZu33Pbt/mV8b
SiHEMt2DT5w9h78X8nbwJo0Sel01Fy1FbGAhYzJos+fy2vf7rDtvZy1Jrs9M
cbqrnuglx3u/s8j1pQb1YnTzGYF1fO24dIuqJf/OAsGuJdgWGOKM9KtlY/lq
WyGfpRv3IyseSy6cW3SMCuGzSWdX9JtmpNTr5FL6HsbnWJbwfI54jN1eGSj9
0Qcxy1ulpPgbw6fft/6ti0UYsaJP8s8YVLMt/UqOo2b+4EdK40y4LEhccB1S
hYiVVJzC/B3MJfL8G+ol7x/OFyr5l0PP4/SB6uKvHrdgEfjP4iS+HRK9WFDX
3cYHrQZr+je9VuA7ZvFArKEdFAJ60ie6DKDLeW/HeokMdLwZ/zwevJ/YORZG
Vxm0B2Of8151/Y+/1DRiaTPzhYx/UTwbcDboiCwEAth1j/VH4eu1o0N8qXnw
Zq/6D5998/sL/WsU5PoSNFx23650eiP69qDX3uvtGKIrOcuk4kjMWd7d/TL4
IqTijHdL1+7CPJvxAcddoav7V5hS35CM3yaKRYUmZU6Dfo+1wm6dAsRSGyxI
DNoTe15zs3p5S4KVnsXeNp18P+8992tTfJchcraZ1yswNMLjbMmwObU/Dk3c
KCPF65fM2IPT8s/D4h2/Obd5Bbhmp1lHuMn8A9eOSxvsMiLnP3SKVU+F21pD
wEynLkmmGusF8z8zir8htKS07ia3OKLcSMbG+bUzftYM+e5SaiXdpzVePO1M
jveb2Ac/6R6GR8zTbQ/q2qEXlRM3JvCeqKgwXqc14AWpZzsa95Q5ob3PZsc5
yVV7JU9EBKv+4///X0r19tgJRau1dtFg+tu51wrQcU0wzQrPxsf5nsihjtOE
AJOZx833QqvzZ//A4ui6/8Fb9vYtX3hNNMYN3Mn9eQlvzh3r6Y5ghaSawbaG
RR/4Kk6ez28j86E6bLkyYvqzDjm+zHWk/Xk26/I3dzoVeMQ/XW/7KAs7RasP
360pwcv63/T/1Te01Yg8YRWw9j5dejCLzeTjRZJsmdbedgyMXfyr99IfqoNE
2rJJA6me5sxul17iq0Q59wVOU/SKqhpoC5H5vC2klLZQ8N+CwOLXq7MlVdCw
f7C0NFEN7Yx37tsc2zGzx2I3bRcrbprcpH816LW6zraaEbnkfP9++tf3BDdc
gW3b0osuqTrYjxxSkl+122m3Nbwk+VdWtwsV99+Lgfjj+8We1E2r9pmHn/9V
cj2Z461GCYqqgmvx/nCjI/Qx5k3oiuR53SbThra5mRJ6pbOQiDIb/+tVCHyM
zxmP3QVKmqf8n8JSQTkQsFvk4zmwGrsoa/LfBb1GmHSVyk3C56nWYMaYGqR+
uYZnRIXBreiiqb1OE9qqambUsxXAR7XXa/1MNFLunTBbv5QMwWfrilv02+Ec
NqR8oF0L2y9H32/ZVoxNdRNtNRqHEDt39K5IWA4Mf4pGWW4Vg5qToFudfCoS
jXW2vYs+CnX6GwdDD2RA79tRvY2OzLiaoV8q2B0Lipn33XyZaiirbpQ4wZFN
wnNulKMtgbGjoeZGm35IzU/HPCs4QeYnXxH++pLWFztoy4Pj0+ogsGtDPU3E
U8RczXqpaNuGKQ5dtetDn4lPDlYVy03e4DidFzMWdZGML7C5ENLdKYQn33Z9
zXqdhPNz+huVGRXJ9xdRL1xed50lSq3Z3mcP8uL8+D3ZvvwsCMsFB1g4VKHg
5K69B06UYlBd4SXJHmM1a/3UXjZPxjsqGyubVMfirPynoEmhNpyMMZx7p9RH
5H/l2Lx1Vc/J1suI8vWS8VRih43eO3cdgPOZgEOTu26hsOmyPVexAZ4vhneX
B1Xi0seR+fqoc8S9E5rnxK+IoKPGdm91oxucK8LP71pqReLnsp0+1anYYCr3
kZazHadNosYF7/US2fUqarp89pjLs5G/k/AWK/clQlRrWvHHVUO5eNIZd4f/
mJ8NaUPSy3lX2yEBfG5e5vVJXLUvGL5t0ExOw0g/oU3ST1Luo4ITHE9x3MTl
v/pt4rLOk+qzgrhII+D6Pj5pVW9ZLTK+lsT35cCrvzQDwEzXVs/0xAHi9oen
an9WYOJL74bsV834JOFzfzSzBTuz6QeY9hghVOb0IYGCLHBHbZ5OF29CVOwn
OdLzy7OvDG9gikfCxPn1JPtdzcz4uiEtLVju3PNo9A7Am1v795rvJ/NrDdQo
T9aa+aKU+UTRuby61fG44kEuGd/50OKg6wO90/ghMSHZJHoHC/uyZa2DUwif
Ds3+v4260Jaks/+R4ADNEB/6QvsWvJDQehi8KwuUR52TSPXd7JXouszN+ogR
ya35x4odkfLm1JWa7/GY/nTypx1HOyKknymmefgRNB43WhYmtTCxhyaC3hkI
3591oM0oHvwSTtH1YXR4sd2KodnJC2X0DieXHKPxJGCl3LevAnlCDzpHXxxE
dGnTgY8Rt0BBfWRD4Kk0tC3RCTW3tiHd0bDz9xVG8DxY2P5wxR8hEdFDb6vJ
+sEic9Lvup00rGfueXqG58Lik0w/q2I0LNkHpig4WrEl2Lqe/hcr2tNTBU/n
xCJ9Y8h+aVdhvGqhPdjvEwx6STW1U2U3CBqlE0bufnvxdWR6hD7Fi4yXD/7k
8oF2gNgWwHVjIdQYnz6I6P48TQ2XC4J0qfMRq/bbJkeVf1vwvVReeeyeO3rj
3nNW1dOid6JzUbfCEwJy9K2qG8Qgna8Q3S2aArGd50wDnLesjZ9z4ZsqLh7E
wrvjv7qmbyGltyd1Z/M58MQ0Ns3YJSDhQ/vrCy0OyPmXUM8Z2bB6npyJHWzm
QvPA0d4MJz9osOe5XZiSQuue28Gb+GMg6/OqoPNmJBaPZZ6U31CNqcMmx1u+
SCJd5yOj2IdAPDId1S3T2IdYHlbeAKlY9Hvl5A4vdq/p18w56ZGqbDK/guzN
fQ4si9PEMa5qtZNMXjAMtvXrUr6MnTc8S3QS7qDTrFr6dWY0sRJvXdNLeQoB
GXeWqhRlECa6Z9y2PBN15Yf0PzwexIP02v/qkXfNDFC7e8Rhv2fMrlq3VvBK
l3IGb6mAjePR76TzS3DEVZFxx8m192v0fIiRMQ6ECu/L7OIrbaTz/FruHBmf
rX5iazqfrDOChnawDgav6gtJ7zf60T4Y1bbLJu3fATW+bv1ZKXyZsfkWE38D
HM+c7bdQJuDI9q+7/7vPK0q/2aLxiJzf4ySW6RuuAGPf8Y1BJXHQ4Ga2KmHV
Ba3hnjHKiVz8NL1M6eFZQRhrqr7MGdWEzEXqzsOfuUBRLSjtblENgtnvuSw3
A4bDGB4KikQh6m5bkEhhJTGRxbxUKKCHUifGlJDO26v+sVY9aT4qiVjj05Ke
YA3+cXxiuBQp6QH614nrkNd/eGjoQwV6/l21zenfhihRzimTV0k42ffuHLdh
IL7cDvoKplI8/CtymPFELEQcJKNJ+uLsXomBS/nemONP6+MTaoC2sCUv92tK
ZF12FDp91xPUVOttT0afwOz6bAdL0wTsu6nnZtTQjeNxLTak+ej8d+9nZqMB
jg0w3vMLyoXMjoUq0/3RePw98vHP+CZkHRX+QWnKiSGRIBUK9lU/9FKAzgD/
FjxdF+oerxcDpUN9Cn6UVxHSGq6WXV2ARR2t3EdjmwmCjXO71yZTjG0+f8RB
4QRaeeRl/BILceq8rPaeQ5fg9XCRXaKzFilch2aFJY+T48HuOQeavu9c1Vvb
/uVlBMEjzFPk8UI0Bo2vx5O+1+sRlzJbO8Na/1ot+bGnYkrQujrA/cEhDwPZ
MwYc6j5QZ5E7/XqqDJaNrHlHNjliiubLov3hAiz3P6dffkzmv8jY/Z5eMnKU
MN/7YVfJsi1c8uJPndA8hsGwY3WWUgWYs33YkqJZRsTcoCw1azJF+06bwn1+
0dDmHBl/sdyKw5cspsaHaUFbc7OIZjISUp/srtBNKMLKaUE5Mz0HoaZ26mLl
34gHiZmx1Kd9sU5Esb62sQJ+hFFa8HA6onPSrSz2MRNSGq2hnyRpMCf3TUHG
fj94zMs/ep/JWPV3RyjZb5Hxr8VIX7mUkkRENj+ae9KhjZP/RL2GVv1yrg7j
m6T9tV+wJNhCyBS2jk5PJJuLENfuU3U0sR3C4pAl+Z8ci5qxBVbD4B13Z/6P
L6v2VQESM/GAVs1K5Gs9JuxXXI5vqiTkt2x+bERrt2ovqulzE8+Je0t+tfvX
WyDnwqUmgztRuNb2ypjhP382WYqS+B9+55tcfA6sPIhlivW70xmPgAmR36L3
uMCx+Qq/yTpfnHsb02CS+ZEoKWtZPvzCfvX5fzg3DLwgiu1iDxi/ubDaFip3
C1lce17MBJ/nOlox/C6LDpsXTIewS0FHnkwOeObrBLZa3sfehhdvl2quQI1+
lmJ8JRdSFTFMVc+ABoYXbMY14Tj/1Ovz7GFd/PvtLFG7Mx8b0g0vp35btcd9
5HmZdPxBIe7C3UsTiG0n9++6n1eGX7d/lp437iO0avXMIzMN8XNxmpdnqgdJ
Flp392q0r+ojU9pszY/kfNUdSxvDLvkglYXO47hTGd75lbnF37XDvFjqosvR
O5DsUenvropd6+/VFdVicnDV75ATSGBlqMF93sTs83xSuG5RwlUTGwW3f+l3
lDi6wVyYdYqkHz/Y+232RwVhvfDs870LZ6GwHH9hk3ovFs5oGbnatsOCyvz0
RKgt9ErP5VTaxuHiE0VPt7phON9ziyf9f+/Zr1T+jYkQ3kD77T/+XRXbY+OB
dpALUDhrY1SMkWn+1s60VnQ5n/Yh2XcHHIt3pjE4Q7fjtNS5z61QzOXwnvpm
CwGmaQ+L7GZ0V13eM71sgv4xWct60UqSfr4rGEL2T/u5G21yqTmh4/lI2bTf
D8Mq0TRVmjHEO/OgLbsNz+DaGX+332DAwnZ75c1s+fi6Qi2T3zqIM0xUfY9X
/bMHfXNe0SekwJvJo8ryNAsxAf3p6+TJ+HmNRynvUve9JthmR+TYf3uAqi2m
w1a3hBxvUZqveXoiGHuqdDf5yZbj12LsicGjtrhSmHMrNq2eNF6/XRJ1RDdd
i+6NhNX9tldXXNXyFvyblsZ/jLaDVmU8xM31O/GAr0jl6JAvbJNsbtoZk9fP
209xusI2DPahvmdrjBoR6bLu5J+NSYj+8CPWMaQeA7U5tE9Hk7E19+whx4R2
+Lium92cT4/RU3SFsV/8Ucw/Wv58YB9Y1czSX95MhdfJhPqFNFb8ZqKqaLF0
B+N4i+Sp1fM/f2zzEnV4C+x+1c094XBHf/O5W2Ptd9CmW6XQrR8K6bpr3x4w
12Bi8f2dayec8Oaj2xOXey0YKSs5fCvWGG7rIjUf0VWiochh+N+4KgouX3Ue
Fy5clVcLieM7zpD52zc4/jYVzSdYBkdat5dpoGjv3u6tQYnEaG/Hpvf7zuG+
J+2k7PFEBCXv2Uw6L4Iuy9Cpb/YCs/fWMwZn7iBUU+XFiFoawRlcl1b/5jSq
X4auaAQtEO/efFK/6eAAz5QatmUOcr3M/RaUEperyyDH329K0h8JKQPGYsbb
CKKX9e3GWWac8siyr/HiR4vn4XtvHt9Gh4C9ae7UIiE25hNfZrMqp3cGwt4t
SEByWezp3LYo3DRlEznhLAnZ+BvdmtERoNig7citMkPQsV/g3V4RC7Pby/uk
O1Lxgi28eiquHXMrrr71Su3YHCc+TtKHtwKWjGW/JeGYXt4S3X94c4bM57zk
+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
HUKxiZUtGJl6fkDHrIdYVRY6RXfaCJt/v9/cLLGbYOHovKD4hg6RyGOWjg9A
4906l53udXhk7F9X8Lnon75P5rrQbbLXASvDZYMjFflQexz0mp7WG7Kvd3d8
4C8DM3f1CwnOUzipKmb+RzcFOfr5P74X3QDFPrlTmQH5sKg24BHqNgDlce7M
LYwZSLJ4EXTyYgwxb7KUUq1+BDL8Qfb7tlris8+JC2+sstf2d1TY5Q8DxOo+
n2YX8cYmy6P8c0NaeLm9aWVfSTYeSJw8cLGgEvFDP6P+81f89H3yccEOjltL
KB62N+JaqUBWWTDJni0ffhDHc4EXld4HeZZ6kzCYpKum8aAO7yw6tdfP/+0v
qVRjvlJSfmOYxg7DiRgil0f5WsIWTejy0j/cS+eBI5TtZg8Ni9DcwJHydcUY
l195hV2ULENc7SqZxzcDDDl5/WLKrEJ/6HRivQ/3P3rofq4ar6q5i00zDYHr
93XO/8rdDgrSfIyHuPAia5ySqKumG1lg3oa33CdCG6sNoTnfJOq/vRaRrhsl
MfEAd66/ml3nL6qRyiHHJ+I4wOWpmdYTg/6FJX3VI1aw+W0gffF6Dsz3/zk5
nS4JNqM3LLl5YTj/VcfnqYYvzLmWq+hzq3E28DjFAQZz6N2+/1rfpQrvloxm
kw07icah6BmWros433R48/AHaywGDOuSSTQhrEZZjOa4KVa0xbN9VOrAet3p
wyNmJyRFtsuctm0DWcdBv99VO+EpkxjazlWGS02/TpXoaWHlYOk+1/up+EXm
FGk3GY8nRtyRe42bsGm/qXrcl52gd25TFKyNw6dyuZO7inLBKs4Xvu4v8/rc
7HR9pIpQ2cxq/2BKe72f64EzjiS88iXzSPzipCGOjCZkPrDNRLLja5mah/5g
4P/yyzyoAR1irPtGz8ST8p9vLEoHDZ9CsOWXgqNVxbjtTVH+d6kFv/o2kZkV
pkCym/3CE9kwDBMbSlR7CmBeuviLh1jT+9e3ia6v50SByo08TV+4Rcfe9TAq
x0brnG8Ttg74vnKZRZ+mEllnWlTeVXYTmZdKf77bcRl2Dr4ZEV05YLlUbCX6
vgMewvstpre1EBT4lE5Ja4kbl86wXY0ZAGf2K651fqi57rlw6mgJikvq/pr3
dcJY9gmNB00f0RHeGnRkryPqrr9KTNJ8jwOTTOktXmv6UXGV/DZXB+4Pa9Ks
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
+UQHhvl0hixw3sDQXq74+MtaeO/nQPkstANY9szKw8zC4M+2/N9zvoPU5+hM
g3jUfJoWZOav3+408nurJT7D3RnqRt+8Hf0eCNeuvN9B2mrAgbQ4vEuGC4qx
1b5hD0WCIJYhDyPfX8SBYFxLVdsZ2p1jqMpjmJBR8hzhJlMuUMUoXOh44g+J
S3evDLc0QZJfRp+hhPW/513Uui1IdosYaBFSunthfvBxv22w9V4WwjapOM5a
qw40VmX1Wbo6Z9+P/Y40c8mZfeTODl19i7huvK28MCMJslfaWCKdMyA/62Gn
w7M66JURXY164wV0w6n8p7HtwBZwEdfhVSLYvy35/GYgEPA9fKkdnp59pxVu
38BHHZD51wmLlwEdNBT0igKJ7UFHlFJky/U1pOHEJV9Vr4Ik4mXBtXJm8NsU
bOGiCD57Ps9IxkMU3/x3srPdBxpUPYQcqy5PVY86JHQ8ieELrAL3DTaqzwv6
wEL2u8t/uQ7qw8ingkNckdDR4yovEkmoyq9z/biNmm/y1CUA7bvyJiI+vJXm
LekCrNFt8zyMKPkmvTjxIq5SFZj8mkW+tGTD0aOpjxOTCxBFM8B53i+uMCad
9reRKey/kjNLV86G42Q61TG/mH/3n8+f0Snl2f+nP0zu+iS0GKXI4M9ETqwD
eZiWf+iMhoPCd+vYJ2j497n+XT8oz89JMYHKjyaFhh2qslnBULXte5EzfCjU
VB46yi4CCa3eSr1blcDAHfXEIQrF7/nL8YMpyr0NmWNkfRdtagT0tDfwv0tV
grDwUAT9xWZgYI+23eNRQdhpOTqKhymB62ez1+Xadkgfatan1O4AYFZpaDGT
BF+6KjGJhnjgQQ/oyx9D5a+Rj5np3t8ywZhM70tKcjeM7GrOSpovIxorhfdN
/T3hjuQ1r9Xr7KASYv8q4NUb2G0dI0GnlgfK1wwb20lFUP5rjYw0wAestjUv
TCfWgJgjtcLLZFIguuB5+dNkNDiTK9SSu/oBX7yit6phB9yomFnyeBsK0+1K
guf5SpXE7FuKnNng+8Pyv35PrKyCqu3J+PB7YM3L6oPnmT1emGgoRs23YaMK
jvAUD0KWAze3GbuEoJG3QEpDzAZsMJRWR93aAMPy8WHiRX7Q5w/B/1URDziM
YdM/LXPAqUx+mPpnJzQwar5QK/qO4GTKVXEanMm94SRefX849OZcr6/LrwC0
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
J2GMwg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Ultrasensitive score\"", TraditionalForm], 
    FormBox["\"Adaptive score\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->GrayLevel[0],
  BaseStyle->GrayLevel[0],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->GrayLevel[0],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  LabelStyle->{FontFamily -> "Helvetica", 
    GrayLevel[0]},
  Method->{},
  PlotRange->{{0, 0.8}, {0, 0.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic},
  TicksStyle->GrayLevel[0]]], "Output",
 CellChangeTimes->{{3.64388234533849*^9, 3.643882354043339*^9}, 
   3.643882416414673*^9, {3.6438824468269787`*^9, 3.643882458333688*^9}, {
   3.643882492028119*^9, 3.643882537797888*^9}, 3.643882576140423*^9, 
   3.643889393419579*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
BMcTDgSH/hfiZpS6\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxAndIndex", "[", "a_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"First", "@", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"a", "-", "#"}], "]"}], "]"}], "[", 
        "\"\<AdjacencyLists\>\"", "]"}]}]}], "}"}], "&"}], "@", 
   RowBox[{"Max", "@", "a"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxAndIndex", "[", 
  RowBox[{"transPars", "[", 
   RowBox[{"[", "11", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643878690163056*^9, 3.643878749618266*^9}, {
  3.643879028351117*^9, 3.643879030674964*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7126382974901191`", ",", "2430"}], "}"}]], "Output",
 CellChangeTimes->{{3.64387871650751*^9, 3.643878750261544*^9}, 
   3.643879031190441*^9, {3.6438894036851263`*^9, 3.643889426686927*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxAndIndex", "[", 
  RowBox[{"transPars", "[", 
   RowBox[{"[", "12", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643879039972353*^9, 3.6438790402826567`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4211644717018277`", ",", "13542"}], "}"}]], "Output",
 CellChangeTimes->{3.6438790407178917`*^9, 3.643889428238236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxAndIndex", "[", "a_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"First", "@", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"a", "-", "#"}], "]"}], "]"}], "[", 
        "\"\<AdjacencyLists\>\"", "]"}]}]}], "}"}], "&"}], "@", 
   RowBox[{"Max", "@", "a"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"usIndex", "=", 
   RowBox[{
    RowBox[{"maxAndIndex", "[", 
     RowBox[{"transPars", "[", 
      RowBox[{"[", "11", "]"}], "]"}], "]"}], "//", "Last"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adIndex", "=", 
   RowBox[{
    RowBox[{"maxAndIndex", "[", 
     RowBox[{"transPars", "[", 
      RowBox[{"[", "12", "]"}], "]"}], "]"}], "//", "Last"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stepNum", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPars", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"k", ",", "10"}], "]"}], "==", 
     RowBox[{
      RowBox[{"pars", "[", 
       RowBox[{"[", "usIndex", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tPer", ",", "step", ",", "totT"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totT", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tPer", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
     RowBox[{
      RowBox[{"{", "sol", "}"}], "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", "des"}], 
           ",", 
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", "init"}], 
           ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"df", "=", 
               RowBox[{"Through", "[", 
                RowBox[{"dvars", "[", "t", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                 RowBox[{"step", "=", 
                  RowBox[{"step", "+", "1"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                   "\"\<StopIntegration\>\""}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                   RowBox[{"10", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}]}]}]}], "}"}]}], 
              "]"}]}], "]"}]}], "}"}], "/.", "maxPars"}], ",", "vars", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x4", "=", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", 
          RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], "]"}], "/", 
       "totS"}]}], ";", 
     RowBox[{"xT", "=", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "7", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "8", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "9", "]"}], "[", 
            RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", "sol"}], 
        "]"}], "/", "10"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{"(", 
         RowBox[{"Transpose", "@", 
          RowBox[{"{", 
           RowBox[{"xT", ",", "x4"}], "}"}]}], ")"}], "]"}], "[", "x", "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<[\!\(\*SubscriptBox[\(T\), \(tot\)]\)]\>\"", ",", 
         "\"\<[\!\(\*SubscriptBox[\(S\), \(p\)]\)]/[\!\(\*SubscriptBox[\(S\), \
\(tot\)]\)]\>\""}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"xT", ",", "x4"}], "}"}]}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPars", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"k", ",", "10"}], "]"}], "==", 
     RowBox[{
      RowBox[{"pars", "[", 
       RowBox[{"[", "adIndex", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tPer", ",", "step", ",", "totT"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totT", "=", "0.01"}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tPer", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ssthreshold", "=", "1.*^-5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "des", "]"}], ";"}], " ", "*)"}], 
     RowBox[{
      RowBox[{"{", "sol", "}"}], "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"dvars", "[", "t", "]"}], "]"}], "\[Equal]", "des"}], 
           ",", 
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"vars", "[", "0", "]"}], "]"}], "\[Equal]", "init"}], 
           ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"df", "=", 
               RowBox[{"Through", "[", 
                RowBox[{"dvars", "[", "t", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", "df", "]"}], "<", "ssthreshold"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"tPer", ",", "t"}], "]"}], ",", 
                 RowBox[{"step", "=", 
                  RowBox[{"step", "+", "1"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"step", "\[GreaterEqual]", "stepNum"}], ",", 
                   "\"\<StopIntegration\>\""}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
                   RowBox[{"10", "/", 
                    RowBox[{"(", 
                    RowBox[{"stepNum", "-", "1"}], ")"}]}]}]}]}], "}"}]}], 
              "]"}]}], "]"}]}], "}"}], "/.", "maxPars"}], ",", "vars", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "200000"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ts", "=", "tPer"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x4", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "4", "]"}], "[", 
         RowBox[{"ts", "-", "0.001"}], "]"}], "/.", "sol"}], "]"}]}], ";", 
     RowBox[{"xT", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
          RowBox[{
           RowBox[{"x", "[", "8", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}], "+", 
          RowBox[{
           RowBox[{"x", "[", "9", "]"}], "[", 
           RowBox[{"ts", "-", "0.001"}], "]"}]}], ")"}], "/.", "sol"}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "7", "]"}], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "8", "]"}], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{"x", "[", "9", "]"}], "[", "t", "]"}]}], ")"}], "/", 
         "10"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "/", "totS"}]}], 
       "}"}], "/.", "sol"}], "}"}], ",", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"ts", "[", 
         RowBox[{"[", "stepNum", "]"}], "]"}], "-", "0.01"}]}], "}"}]}], ",", 
    
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<[\!\(\*SubscriptBox[\(T\), \(tot\)]\)]\>\"", ",", 
         "\"\<[\!\(\*SubscriptBox[\(S\), \(p\)]\)]/[\!\(\*SubscriptBox[\(S\), \
\(tot\)]\)]\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.85", ",", "0.25"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1.01"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", "\"\<t\>\"", "}"}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.643878191575953*^9, 3.643878325292324*^9}, {
   3.643878671566923*^9, 3.643878677548521*^9}, {3.643878778533958*^9, 
   3.6438788359118023`*^9}, {3.643878882139316*^9, 3.643878914334897*^9}, {
   3.643879178399446*^9, 3.64387917866685*^9}, {3.643879211654298*^9, 
   3.643879269175371*^9}, {3.643879325960763*^9, 3.643879363863888*^9}, {
   3.643880062466267*^9, 3.643880116820921*^9}, {3.643880315882393*^9, 
   3.643880551355521*^9}, {3.643880829653764*^9, 3.643880842860338*^9}, {
   3.643880940785095*^9, 3.64388094147931*^9}, 3.643881049024061*^9, 
   3.643881911944759*^9, {3.643882705009109*^9, 3.643882761126484*^9}, {
   3.643882823226468*^9, 3.643882833864098*^9}, {3.643882887527441*^9, 
   3.643883035338541*^9}, {3.643883072225799*^9, 3.643883072383532*^9}, {
   3.643883116238514*^9, 3.643883181455715*^9}, {3.643883314575807*^9, 
   3.643883336237152*^9}, {3.6438894700335693`*^9, 3.643889476440546*^9}, {
   3.643889583497365*^9, 3.643889678590495*^9}, 3.643889862860536*^9, {
   3.643890110807721*^9, 3.643890129640451*^9}, {3.643890161825906*^9, 
   3.643890260637334*^9}, {3.6438903548261213`*^9, 3.643890402015826*^9}, {
   3.6438905002664967`*^9, 3.643890552341671*^9}, {3.6438905977954617`*^9, 
   3.643890661153942*^9}, {3.643890952720357*^9, 3.6438909554461603`*^9}, {
   3.643891119684709*^9, 3.643891122234367*^9}, 3.643891214497005*^9, {
   3.6438912693156223`*^9, 3.6438912754170437`*^9}, {3.6438913424392433`*^9, 
   3.643891348487207*^9}, {3.643891573672958*^9, 3.643891608967492*^9}, {
   3.643891786769442*^9, 3.6438918136986647`*^9}, {3.643891958015336*^9, 
   3.6438919899579*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV1nk4Vd0XB/CLiga9kUSS3KRUKFHqLV9vChkiKgrFFSJKqAwpDaSSkPyI
0BUyhDImhYhKZEikMoXLvfecW4YGVL/tr/N8nvOcs/dee++1liLruIWTMIPB
MBRiMKaeRk6DTRVDe3WC7P4Y5okfBidnH6tLVhNBt4djZh8/DOnZreH5stsR
VJ4iZNd8GGqbpFLvyO4Bo2Ome3eiEzY3rs+Lkj0Mhth5EzszF1TEV2ldl/UB
Y+znzzfiR6HZ7Ptwuc1JMIqrj+0NP4oMMTXVZwmnEPTy/OSbee6IOhmrJFDw
A2M0IfGynAcczTzm71Y+C8aykYIlhsdx8fw136uylxBkeHak5M8JPFvsXLSv
lHj1SLzNLi/8LNYdZdoEQ5c7bjqc6AV3euz4k4QQMEJV6PFt3thjY+/CV7gC
XYWmca8YHyhrae3bpRyOilsly+rdTuOwj0D2imw0dA8dSk+uDcR6kSj/R57R
qPA9+M8dnbMQjtL8+LE2GkFng0Tyis4iKdcvQe3ULTAWMrxkMs+hgyui8K45
BkF+1q/HGoJg5iCjpBAWB90g/9U5ny5g867/1Ar/JEKX+nbu8cHLEPv8Jbxz
bxK6E9assMm6jLajIQLRB0nQ7amKv/jzMkqrnawfqCbDPuyb3ZHoUFj3Zsoy
PiWje0WWbWDzFUTJayWkarNRYZD6vdAlDGLRO+9+/XYPul8jb+ePR2BCu2fi
7qJUMOIPDWspR4L+7LvPUi8VFaxauW+7I9Gy4v7souhUBK1dkSGRGYnEJzNO
BWxMg7nMSelx2yhofqkymhGYjsbcgkCb+puw19AZlRPLhGfxwqjxthgUN2oY
GCzJxdcRSQ//yDsIH+IbrtHPhZjW3aOJr+7AWTjdSOIYeb/W8vKYUCKkNeV2
fXyai9Bbul1bvBPxpO58ZrFaHgaLpCLVrJMgp+720LghD4aVSb9f3kpGx9jm
cm/xRzDR3X58MoAN64ufOqquFaBERnb7sqg0zOtWXuNytwDV7qtljYvT8GrL
icBZxQXYLhY+Ef4pDZu/T1+6u7cAhsZbX7itSIecq7pTp3YhzvhLnT7xLB2d
uy4IfvYXwnCHSlb+t/s4vGjlNDXdYkS8mjWzwT0Lxx96q8aOPoZ/qdmSkv15
GI54/1JIqBzOHTuOSb8txMvKmvK3W57jZ2mgdaZPGVz9dorv51fDR7Wxoq6l
EpUzNf5me9Ril17U7wKfF0hLqf6zaPlrNHcLn2elv4Ku9FO2Zc4bHGDeCtvz
uh6qtZ9Kala9hUvKY88K4Sa807WkM+hG+MbkWSY7tsB91tHm1rXNaJxVIDae
1Yq6dqunc8NbsDDEya1Xox2W+tY9fX3vcJtTfY1V3IENydeskpXew06kwFpm
wWd0/7n57si5NvwU020WSe9C/863KdJV7ZAOqFkgP70HeXFdfk2KHaACfoxG
mvQiNVTkior/R6j2Nb1RD/2CMccDXOcnn5Ca2Sx5Or0Ps7eHWDxc2IlZgpn/
m93ajzPz+uf02HZBqFA31e3LAFZ1PNL95NCF9CW/205xBvAhJcinzbkLjLiD
Bhd4A9iwcfGnes8uaKvYdMSMDOCrnWVW6aUufInTe1EkwoFjVuXO6OwuzKiX
MWtaxoHkyRuBNx52QfFOp0zTCg4qdOweXi3qQuEyb5nG1Rwsbv4pc76iC4+f
WhTXrefg/U/1QY93XdgrOubyWI+DS89/y7l+IPbY9O6RAQfrw+rMDnd2Id+2
xyvLmIMIBZfiA4Nd+K6btuO2JQc6Q5q8vVQXot0GfSOsOKAeCSvsHibru9z+
KdiGAyP9xBCDSTKekLjWMUcOJkU32N1ldMP2qdQCdRcO3vEX/1gi0g03xZS6
rW4cXCjirlok1o2d9TY11p4cdO4MiZon2Y3RhrLRS2c4iPV86vB7eTdKzHV2
FkVzMOfZakabaTc+iOifCKwm45ssLbhq3g39y+n6+bUcNHyUOqJj2Q32uVCV
wdcc3Pj1+22qdTce3NhKAkbipdWY5OPYjSbP1ASJTg5ksn0g6dcNxb3fD7j+
4EDp9tOzpve64R9N+R1WGcTWU2a/q8a7Mc56nHLj6iAS7oWlLEvoAX/EdEBh
wxAO7tWsn2ncC3eT/nax3iEUtjrdfPa9F7lfbL/MCeRi05s84YGYL/CVzY4o
F+Jh6Q7nsZvb+3B2rZC5fDAPWppakQUDfRhPOFhlN8pD1/D1VynB/Zj0/ieW
acUHf/3uYFmNAQxoeh3UKOZDmafKFWoZwO6c5etezqBQrXSy2fM8B8VuZQuu
WVC48a7V0UJpEP+byw1svEEh7Ox1pSblQcxs0pbOjaBwdeWOfjOyro5gasX1
SArBZwqcTdUGsbG4r9jgJoUApZuuhtqD0Km/HlYUQ8HFx/y4jskgXF05iwPu
UIBUnf8qn0Fk+N3xT86kILCsiBSuHoRD4dZ1DlUUvqcHuxfXkPcOe3rVqin8
mTAycH81iOJnTRMTxHPutU62NgxCu+fkkegaCitHuS4ZHwahx4xb/ewVBfvo
BTrmAjKfI9+9xt5SaHznxr2zaAj777JaRj5SeLR3gd6mE0NgFxXt2DBMIeqf
c4Pl3kO47/f6SQux16vB6/qnhuAfrFHgOUJh3daydsuAIVz8eHBNxiiFPCXH
Y8eCh7Bxa/UWqR8Uckby4lLihnCjOGm4eYJCZqTJV/Hn5P210P0j02hcNS66
FV09hPj2/Ybnp9Nwm770X7naIXSE+5fNnUFDxW8keOWbIXDjZmqtFKVx3/62
nN77IdgM/HLdO5NGmvqgvi93CJS20M9YcRop9Rfv9EpyIfoyzvjFAhph6yZs
kxZwcT/I9/4uaRqnbnkttpXhIjHrhW8bsaGdQ3yrPBfDZUo+nIU0aL5O3MuV
XOiHGXxgLKKhPWc8OkeHi+bWB6dll9CoN/IM83fjYvF79w+9y2kU5XCMN3pw
8fLsQOcBZRrJkodmjx7nYuvTOJtmYq8O06seJ7n4ekj5SfkKGjJuq0Ptg7g4
N6EiHa1Cg3Vl4KJ+DBcBF4/sW6ZK40etbYDkcy4uxmq8+7SexhJL/ZPPq7mY
rRQht02Thn6n+nGvWrK+oPLeNOKYUWHH5jdcOF+Z8e2YFg1NxQyjqDYufgkd
mPdrAxnff0xWkuJif9hG77FNNPhrwkskZHhYvaA16gZoSJWcflS5iIdT6yXm
9BP/q+eQfUKeB39mkdhmXbI/+zWTm5g8PLZ4ENZLrBLScTlSlQeTxSefq26j
4dylbCWhx0PO3mt/srfT6I4sH5t3jIdbnh3nzXYSXzAtjfLkoREMOoK4x/vj
WSlvHjaGfvjaRNy794eojC8PYtUiTyyMaHyRVV+kcIEH+XtVjmbGNAbuJuqo
xvBgOLRPTsuUOGqNSG4sD/1P7v4+PuWLpbVr43lInr7AN5OY4/TeXDOZB8HW
Zq0lu2gMqsx1/DeTh31/1rcxzGjwHgZe3vmMh+C74y8emZN4sGeb1FXwkLKv
VIsz5Ztx80yreGgKWgi53cQnC+PMX/Lw2VtU4QIxvYnKsmrmQSrSSNrYgsbX
SttGpwEetl2r+v7Kksb3pn9lL8zlwzs2l3lmHw2GR9uPTRJ8qE5O7EwnniXm
/f7bfD4Ua6wmm4iX6GTedJDlI8m9QFjZisaOTJm5/ynxsWfZtriXxNEXxoQZ
m/nI0cgT/WlNI1E+sqd4Cx/7N/ZQcvvJfShZU3EcfHxR/G0P4jLaMbBrOx+B
oe70JeK+A80/npnxofLENWPWARrr1+fyA5348HjY+ZhhQ2NLg1Gd1hE+7HZn
n5En1ncdyKDc+Gjap9uwifhAkryLnScf6l4aS04QX5gd1rMlgA/mrHM+HcRh
aSsqRgP5iB4rzxshjvmvKjE7iA/bGYVn5tjSyDw9brM4hI+PpzWqtxA3fzny
fiKCD8HjUqlY4k9npxXm3+TDV/Cp6QHxgGzyzaMxfKyadVehinjcrM38Yzwf
Iw3BHnxixbIddaVpZH2FQu832dFYZdWT4ZXBx8P13nImxJrDZ0JXZfPRu89n
2I7YcGXBjtsP+VjqnrA3iNgzmlnhV8aH17eqkXJii1ssV5Fysl/QaKwn1oph
S16vJHWgebXpR+Lx/zGdkmv4aAhSVBkj/hzLmrvqFR8Hxk1DhQ7SqIhjF+fX
8fHC2zlUnDg4njmrtpEPJ8Wyo0rERxJY+eYtfKzLVzFTJza6w7btaOVjJqOv
ZRPxvCRmLtXBh3hIUqUp8XASy/r0ZzLe4qZVVsStyWwhoW4+XqvkadkT32Yz
90j18xHv0Lb2BPGZFNbvOxw+RLlmin7Eh+6x01ZwSbxT3ucHESulMX9tFvDR
53y8PJxYNJ3Frv5G4lX/UPsWMTedbbxrlI/5io574olzM5iJDr/4qDD09k4j
jspkGfAm+EjxFz6dReyTxf7q84cPgz0O8nnEVtm9cX8YFPym3XcuIN78gKkX
KkJBpJS2KCFenMPiS5A6mpdi2vuE+G8O+1a8GAXTr5+kyol7c3t1ls+mkNpQ
wK0krs5jDuaIU7jgQTlWE6c9ZEVqzyPfTyQG1RBfecTe/FySwkR6j+5LYvf8
3i/GCyio3a2/94p4VwHzeutCClLSAdmvidcVsjYcWkTBV0vYuo5YqojdNbiY
grJaQPqUvxf1hnopUOCq/bk95Q/FTI1JRQrhzikaUy4rYX0MVqLQKXLx2NT/
Eh+zL/2zgsxXq3DX1HjnS3tV41RInVtl0VJLfPgJs425hkKNhNfkC2L9MlZQ
thqFIlnV11XEKk/ZKhvWUTA+Eb9lar1znvU2l6+nYG7QavmMmH7GPLNzA4XI
18P/TMWrsZy1vEWbQrvKnBPFxPkV7Abbfyl8vbnpdD5xTGXv6YGtFNI23mTm
Evs+Zyp66lJ4obfOO5P4QBXr9a9tFBZyVrumEm+tZntf3EHB1Tx+WjKxcA2z
JsaIgvbaTWuiiftqWMeXmpL5TYstuU5cW8uWyTSjcG3/G24Icdgr5tGneyiU
b5P+z5f4+GuWlIEVhZ2atk6exBZ17KeN+ymostrVjxAvrGfO6ztIYa3au+J9
xNpj70bsHSh49P+6N3XereUvt312JONvXrdl+9T59uAlth2h8LhL3XUt8ZK5
Bap1XhQkJHjl04ixwVnC8CQF7yw5xi9yH+0PyoxVn6bQpSLF4xOzc86UPTtD
9v97cWULsbLZDuNHIRSSnxv63CE2OP1DTf0KhWk+G8RvEB9JypDMvkaBNmPv
nsoPmQLxjlTSx0Vkmn12IFaLeH8k7jaFqp6zwopT+aHJJSQoh4KjuELsDZKP
9v2SdfudR4EVemckgPiU4htT/3wKn0tnTLoQl5xYu8CnhPSFrqPzQbxF8leK
y3MKzn2lrCGSL7dbXq3c9Z5CwfS+G2rETgFbUuvaKVTKllUvIA5JoUMNSV+m
58VLnyT5++WIhfm2bgrd87P8XhGbRMt1aXEpaM1bY3qI2LI1e3LxHwpv2Uov
A0j+P5vuPv6WQUNOYo29zVS98Fvz84II2afSqrjNxJPy2SODYiSvKcoM/yD1
Jc05i1swn8aoyKXNx4jHf2S0m5A+5bpYp95OUo+UXru+/7ua5NHBMOFlxGYJ
Ku8eqdEoiL5zeJLUs3u6GW9lSF9SVGQ9P4d415X7NX06ZN+7Di8RJ2YvSi84
s4ec2yKjaaXk+Ybv/Eid/MdBoXRGOPGPZ8p5vWRejAHbHAdiE8e0LMNDNBZ9
y6NEib9npbKl3EidfFqpbk7qrdHWexHZ58i5VZzseEvq8/Chu+6fMml4lF+M
CyP1f+x/07UcHtDopxaq7if++db1d38uWdfJFz7Lif9CI1xQQO6NUt3Sp6R/
mLO0Kle4nMbBMWl60ITG8u6+4ZUtZH7/2ntpkH7E2n6l38kJGoWTG2uvG9Cw
iQ37b/w3Gf/Di9m7iQ82fp15jiFAVYKDqBSxk+7j26HTBZByUlSK0yf92FKj
svh/BLg1bvU9aQe5T91H/1YuEyBZfLdksh6Ncvvc4LkmAlj5fqt3I/1Y6Vt3
485dAhTvUBKRJy7SWSWRs1uAtV+YPQ0krtmLUxNMrQTQkxONXUd8u/12fhhL
gLf7p40Nb6Fx0jykZ5afAN5dsaFOm2ms1rXbKpomQMYl+8lZpF9Uzl0k0nZf
gBXXX1x9RPaNuaT9ZVqWAD5vJGv2E8tMWuzRfyiA+ZkhvXTSj84oMTwaXCbA
N/+l9joapJ9T14wTaRGg6XnARjt1Us8Tvx1saRWA9bgh5S85F+3iuUop7QLI
L5Ipv0vcwFPJ29YpwECahEg/6XfL0hVqzw8JkFKrXe2yhtwX6c9hu/kCHBpq
yxIlzg++baEoEGAk3EcvnZy7TMcFnRWjZH7DKhf7V9FIbW5OifghQMOpS6sv
ESf/F+FqPy5A62z7S0zihDxT9bW/BaiI/ny9gpzj/ynMHvv7l+zPqLzhQeL/
A75ucxo=
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{9.999999999999994*^-6, 0.0024494293213635104`}, {
       0.25000999999999973`, 0.27715288853536757`}, {0.50001, 
       0.7312634602240027}, {0.7500099999999998, 0.9222354735190333}, {
       1.0000100000000014`, 0.9425484695056019}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"[\\!\\(\\*SubscriptBox[\\(T\\), \\(tot\\)]\\)]\"", TraditionalForm], 
    FormBox[
    "\"[\\!\\(\\*SubscriptBox[\\(S\\), \
\\(p\\)]\\)]/[\\!\\(\\*SubscriptBox[\\(S\\), \\(tot\\)]\\)]\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.643880969021739*^9, 3.643881009481182*^9, {3.643881893140746*^9, 
   3.643881913981695*^9}, 3.643882694400234*^9, 3.643882837287763*^9, 
   3.6438828973055983`*^9, {3.643882930702401*^9, 3.643882940574901*^9}, 
   3.643882987137285*^9, {3.643883028136922*^9, 3.643883036902768*^9}, 
   3.643883073851379*^9, {3.6438831517923594`*^9, 3.643883167487186*^9}, 
   3.6438894331618767`*^9, {3.643889472164357*^9, 3.643889478006618*^9}, {
   3.643889630928151*^9, 3.64388967935684*^9}, 3.643889863569128*^9, {
   3.643890187469159*^9, 3.643890235257852*^9}, 3.64389026870255*^9, {
   3.643890384689159*^9, 3.6438904042466087`*^9}, {3.643890513485845*^9, 
   3.643890538832602*^9}, 3.643890606062502*^9, 3.643890662027697*^9, 
   3.643890957721884*^9, 3.643891371360826*^9, {3.6438915817021313`*^9, 
   3.6438916098074007`*^9}, {3.6438917888909063`*^9, 
   3.6438918157603188`*^9}, {3.643891960225554*^9, 3.64389199183009*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0X1Q03UcwHEGGPgAKGAmD8cgUSx2ag7hUvh9dcV1HEOaSDpuEgsYDwIn
DzKBcIznjfGwsU0eEoTAMRQJKvKUxBJ0gkSh1NXSUSrD5GkgHavNsn5+vn/8
7neve38/3/vc7+fJTWPFWVpYWKT8+7x4t0jKYuiG50GmjoUfmNxwwmq11muO
+Sthpf7fhnczgi4xZwhL0okPg0KrmCboM44tea8bV6GXbuvdcug00w5Msdzd
pMhdj1QvuH6M2KEer00Jd0StpDmsTNE73s7oLGmx0VngatyIPiF9ueWLLMPo
JtREeiokMlnTuhnMaFBGZjPdYT6dERAa5uUBfSzrabM0l4oaSZvdJYrEcC8w
O3W0YJPRG+zo8P6RDCYNNZDe79Mp3Gj0A6/coh09wQxE9S99pSFwXBkMPilr
Hp0pCwPHdlUJJroiwUmFnrYrixxww00X75Q/uHD/q84HQgR18eClXPVIuiIJ
THHbNzQkSAWzCp6du+90AvY/LEyp0thnQG/duvT1Kn0meDXPQW3oOwmm+g0z
Dl7ig4Xtcg9TUQ5Y3mahdhHmgQeQxbw+Kx/2ryds9llvEYAvth37cZhaAI7j
9DtdXScEL0cd3xa7rhAsUz06E2tThOpI3wuO75QsYM+/6S9PnSsGd3MdqHxt
CTpDOm/qM9ufb5SCPXs/vbU4UAZOHju7fc+FcnAlfTpmZ6cI3C5ZvHDURwzu
f2z6U9iGHcCbPNbzDXbP1I3ByQfY1z8411P6O/bYzY+baFPYOn92xfgT7Lnz
e06dmhWj7/jTW3fZ6gj7sjnW4DMxukPaN0Hlu8EkRiOkk3xcdKq1FdDP68Uy
5FIBvXGaFdMUgV3zZPMOcyW23iH8S6WdBBzkVxK4q0KChklXf7/ytIJfCZ69
4m9EH1aBZcvctAlaNZjyFa2H2oqtbWzWBXvVgEVvKKMpdTXoNunAB+l2CXZS
MHOYzi4Pxeb0Lberxdj1Sn4MtQN7ItvoqhjCfjRXL1q8g73E27sSfg/771Zx
9/OfsK10v/C6tNivmAu/Lb4vhX3XuPl6cHTY9m/fzaH/hs87HsmbWPtQijT/
WU/sfK+/d8ggJf+HnjgYYK4uoMjA+Wsm/mLvl5HfW090aS/G0wuwnVQHkmVm
7BC3qIGSjFqYn+11pUQaaqFvv9uvKaXJwbFL0dLLCdhaEbfSmIYd4Rkn2puN
XX083labI4f7R/p4JXn5uCdxEgZDBbjbWiVauwux21WJjJlCbEZYkrC/WI4+
upope816nngrNy2HqJWjeNJeqsz06y1yxCNNsTzNHbwmR3GkdVHlLI0Wz0d4
pvtcc1WANY/Z5s/ZChRLusil20gfw31ocmHb7Q1KxCVt07H7cPQhJZz/B+6G
RqE=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
sGgjnRYHt3rDRjneDJHFjn5TEylxsF8l4ZrMhyFSm+v68Fkeft4jz96JPURO
i1hs06yJg0GBA5niwizymiWePF0fB/IvI8tuirHI3rKvSwsa48CvOWP98s0s
st7IpJe3LQ6mWMw7eXIs0plw6lZzbxxIu9UHC6iziM1iWHuRMx7KuT19nl9h
kfb38yH8S+NB28PLYocDi2ilPx2r4ImHmY9nN0Q7s8hO1f1N0qvj4d1jlVJh
HxYZc98VwxKLB0pBsHh8DIv4skQWuavGg82Vdz/681jkx5MOx61q8ZCwOFra
8x6LmEYkf21Xj4furS9554tYRE1a8JmydjyIeF+72V3KIktNV3gsOhcPOsLc
whJvWITyfno41jMe6uOFj8Z9YRGlul3Pd/jGw8U7BzMvdLFIzyuLuPqAeOh9
2+oq3cMi+4reynJHxIPbC3k2YxD7G3/bIYQRD3t3c99Y8ZtFZLSPj3oV43UN
uc/nlrLJhyP+r4Qex0Pr0yMBt7nZxEf5IaW0LB5ymCFW35azSeN2UYXxV/EA
HoaW6nz4vuH5dc3pXTzI8L39+Wg9m7ysTv5tPRwPTqW+J7S3Yr304u3rJaPx
QHKnsiS2sYnAY0565u94KJXc8RL3HLHMstvbPRMPz6RyAn13Yf0SCm4XeBKA
j6rmq62I56fa4IT+lgRwGuFz/aaG76ODojVj2xLAxurtUpMjmCflTyclyiZA
rpF2zDt1fH+KPdv/bm8C2MfE3SvQwPpmIcFT60gCaCV1btuug/Xy0/0zYJYA
I4o833TOsMnDP3V5uywT4G4PfSDZGPOw7PmzIpcTYDSrXPLbWTbhvBX4ZNIx
AfIbRD0vnGeTtcF17vcDEqDqXYi/lDnmL81zvzfeSgBuoaWKPVfYZFHQjwye
OwmQqvZZfsgW80NZwOnJ7AR4cpViyr6KeXRH5oMP9xPgnbRxZK895rVVPxyj
XiTAVreNlIJrWA+1+A9PfEmAH5rSNUmebHKSd3Vq7/cEEB8x5rPxYhPBY3dO
fOhLgJS8qwZ7vNnkZmlN/r0fCbBZj4PztQ++X1P4r1jOJwDnhyNrX/ljvSP/
fuzyKgrknNXmUwrF+dNOqb/IT4HO8jfcX9EKVywyjAQoEPDB91ZAGOaj2+On
1NdRQCVcpPZpONZ/a4QfiG2igHD/4XGhKKyXJi45tslSYF5NssM+DusVCYfk
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
SZBZYBHah16Wt8fwon4SaM0pnfhXH/4PqFHvGA==
       "]]}}, InsetBox[
     TemplateBox[{
      "\"[\\!\\(\\*SubscriptBox[\\(T\\), \\(tot\\)]\\)]\"",
       "\"[\\!\\(\\*SubscriptBox[\\(S\\), \
\\(p\\)]\\)]/[\\!\\(\\*SubscriptBox[\\(S\\), \\(tot\\)]\\)]\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.25}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"t\"", TraditionalForm], None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 1492.8430984565655`}, {0, 1.01}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF0X1Q03UcwHEGGPgAKGAmD8cgUSx2ag7hUvh9dcV1HEOaSDpuEgsYDwIn
DzKBcIznjfGwsU0eEoTAMRQJKvKUxBJ0gkSh1NXSUSrD5GkgHavNsn5+vn/8
7neve38/3/vc7+fJTWPFWVpYWKT8+7x4t0jKYuiG50GmjoUfmNxwwmq11muO
+Sthpf7fhnczgi4xZwhL0okPg0KrmCboM44tea8bV6GXbuvdcug00w5Msdzd
pMhdj1QvuH6M2KEer00Jd0StpDmsTNE73s7oLGmx0VngatyIPiF9ueWLLMPo
JtREeiokMlnTuhnMaFBGZjPdYT6dERAa5uUBfSzrabM0l4oaSZvdJYrEcC8w
O3W0YJPRG+zo8P6RDCYNNZDe79Mp3Gj0A6/coh09wQxE9S99pSFwXBkMPilr
Hp0pCwPHdlUJJroiwUmFnrYrixxww00X75Q/uHD/q84HQgR18eClXPVIuiIJ
THHbNzQkSAWzCp6du+90AvY/LEyp0thnQG/duvT1Kn0meDXPQW3oOwmm+g0z
Dl7ig4Xtcg9TUQ5Y3mahdhHmgQeQxbw+Kx/2ryds9llvEYAvth37cZhaAI7j
9DtdXScEL0cd3xa7rhAsUz06E2tThOpI3wuO75QsYM+/6S9PnSsGd3MdqHxt
CTpDOm/qM9ufb5SCPXs/vbU4UAZOHju7fc+FcnAlfTpmZ6cI3C5ZvHDURwzu
f2z6U9iGHcCbPNbzDXbP1I3ByQfY1z8411P6O/bYzY+baFPYOn92xfgT7Lnz
e06dmhWj7/jTW3fZ6gj7sjnW4DMxukPaN0Hlu8EkRiOkk3xcdKq1FdDP68Uy
5FIBvXGaFdMUgV3zZPMOcyW23iH8S6WdBBzkVxK4q0KChklXf7/ytIJfCZ69
4m9EH1aBZcvctAlaNZjyFa2H2oqtbWzWBXvVgEVvKKMpdTXoNunAB+l2CXZS
MHOYzi4Pxeb0Lberxdj1Sn4MtQN7ItvoqhjCfjRXL1q8g73E27sSfg/771Zx
9/OfsK10v/C6tNivmAu/Lb4vhX3XuPl6cHTY9m/fzaH/hs87HsmbWPtQijT/
WU/sfK+/d8ggJf+HnjgYYK4uoMjA+Wsm/mLvl5HfW090aS/G0wuwnVQHkmVm
7BC3qIGSjFqYn+11pUQaaqFvv9uvKaXJwbFL0dLLCdhaEbfSmIYd4Rkn2puN
XX083labI4f7R/p4JXn5uCdxEgZDBbjbWiVauwux21WJjJlCbEZYkrC/WI4+
upope816nngrNy2HqJWjeNJeqsz06y1yxCNNsTzNHbwmR3GkdVHlLI0Wz0d4
pvtcc1WANY/Z5s/ZChRLusil20gfw31ocmHb7Q1KxCVt07H7cPQhJZz/B+6G
RqE=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
sGgjnRYHt3rDRjneDJHFjn5TEylxsF8l4ZrMhyFSm+v68Fkeft4jz96JPURO
i1hs06yJg0GBA5niwizymiWePF0fB/IvI8tuirHI3rKvSwsa48CvOWP98s0s
st7IpJe3LQ6mWMw7eXIs0plw6lZzbxxIu9UHC6iziM1iWHuRMx7KuT19nl9h
kfb38yH8S+NB28PLYocDi2ilPx2r4ImHmY9nN0Q7s8hO1f1N0qvj4d1jlVJh
HxYZc98VwxKLB0pBsHh8DIv4skQWuavGg82Vdz/681jkx5MOx61q8ZCwOFra
8x6LmEYkf21Xj4furS9554tYRE1a8JmydjyIeF+72V3KIktNV3gsOhcPOsLc
whJvWITyfno41jMe6uOFj8Z9YRGlul3Pd/jGw8U7BzMvdLFIzyuLuPqAeOh9
2+oq3cMi+4reynJHxIPbC3k2YxD7G3/bIYQRD3t3c99Y8ZtFZLSPj3oV43UN
uc/nlrLJhyP+r4Qex0Pr0yMBt7nZxEf5IaW0LB5ymCFW35azSeN2UYXxV/EA
HoaW6nz4vuH5dc3pXTzI8L39+Wg9m7ysTv5tPRwPTqW+J7S3Yr304u3rJaPx
QHKnsiS2sYnAY0565u94KJXc8RL3HLHMstvbPRMPz6RyAn13Yf0SCm4XeBKA
j6rmq62I56fa4IT+lgRwGuFz/aaG76ODojVj2xLAxurtUpMjmCflTyclyiZA
rpF2zDt1fH+KPdv/bm8C2MfE3SvQwPpmIcFT60gCaCV1btuug/Xy0/0zYJYA
I4o833TOsMnDP3V5uywT4G4PfSDZGPOw7PmzIpcTYDSrXPLbWTbhvBX4ZNIx
AfIbRD0vnGeTtcF17vcDEqDqXYi/lDnmL81zvzfeSgBuoaWKPVfYZFHQjwye
OwmQqvZZfsgW80NZwOnJ7AR4cpViyr6KeXRH5oMP9xPgnbRxZK895rVVPxyj
XiTAVreNlIJrWA+1+A9PfEmAH5rSNUmebHKSd3Vq7/cEEB8x5rPxYhPBY3dO
fOhLgJS8qwZ7vNnkZmlN/r0fCbBZj4PztQ++X1P4r1jOJwDnhyNrX/ljvSP/
fuzyKgrknNXmUwrF+dNOqb/IT4HO8jfcX9EKVywyjAQoEPDB91ZAGOaj2+On
1NdRQCVcpPZpONZ/a4QfiG2igHD/4XGhKKyXJi45tslSYF5NssM+DusVCYfk
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
SZBZYBHah16Wt8fwon4SaM0pnfhXH/4PqFHvGA==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"t", None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 1492.8430984565655`}, {0, 1.01}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
       "[\!\(\*SubscriptBox[\(T\), \(tot\)]\)]", 
        "[\!\(\*SubscriptBox[\(S\), \(p\)]\)]/[\!\(\*SubscriptBox[\(S\), \
\(tot\)]\)]"}, LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {0.85, 0.25}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.643880969021739*^9, 3.643881009481182*^9, {3.643881893140746*^9, 
   3.643881913981695*^9}, 3.643882694400234*^9, 3.643882837287763*^9, 
   3.6438828973055983`*^9, {3.643882930702401*^9, 3.643882940574901*^9}, 
   3.643882987137285*^9, {3.643883028136922*^9, 3.643883036902768*^9}, 
   3.643883073851379*^9, {3.6438831517923594`*^9, 3.643883167487186*^9}, 
   3.6438894331618767`*^9, {3.643889472164357*^9, 3.643889478006618*^9}, {
   3.643889630928151*^9, 3.64388967935684*^9}, 3.643889863569128*^9, {
   3.643890187469159*^9, 3.643890235257852*^9}, 3.64389026870255*^9, {
   3.643890384689159*^9, 3.6438904042466087`*^9}, {3.643890513485845*^9, 
   3.643890538832602*^9}, 3.643890606062502*^9, 3.643890662027697*^9, 
   3.643890957721884*^9, 3.643891371360826*^9, {3.6438915817021313`*^9, 
   3.6438916098074007`*^9}, {3.6438917888909063`*^9, 
   3.6438918157603188`*^9}, {3.643891960225554*^9, 3.643891992326766*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1208, 735},
WindowMargins->{{32, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 23, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 119, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[724, 27, 106, 1, 64, "Section"],
Cell[833, 30, 8445, 246, 811, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9315, 281, 209, 4, 64, "Section"],
Cell[9527, 287, 140, 1, 30, "Text"],
Cell[9670, 290, 720, 18, 81, "DisplayFormula"],
Cell[10393, 310, 198, 3, 30, "Text"],
Cell[10594, 315, 715, 24, 26, "DisplayFormula"],
Cell[11312, 341, 173, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[11510, 347, 6054, 193, 386, "Input"],
Cell[17567, 542, 3829, 120, 80, "Output"],
Cell[21399, 664, 748, 20, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22184, 689, 1419, 38, 48, "Input"],
Cell[23606, 729, 2555, 80, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26198, 814, 1004, 26, 28, "Input"],
Cell[27205, 842, 2239, 66, 50, "Output"]
}, Open  ]],
Cell[29459, 911, 125, 1, 30, "Text"],
Cell[29587, 914, 1026, 32, 44, "DisplayFormula"],
Cell[30616, 948, 96, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[30737, 953, 2122, 56, 69, "Input"],
Cell[32862, 1011, 1288, 39, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34187, 1055, 700, 20, 28, "Input"],
Cell[34890, 1077, 998, 30, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35925, 1112, 416, 11, 28, "Input"],
Cell[36344, 1125, 1830, 52, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38211, 1182, 98, 1, 28, "Input"],
Cell[38312, 1185, 1690, 50, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40039, 1240, 272, 7, 28, "Input"],
Cell[40314, 1249, 419, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40770, 1266, 282, 7, 28, "Input"],
Cell[41055, 1275, 667, 21, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41759, 1301, 958, 28, 51, "Input"],
Cell[42720, 1331, 1819, 54, 50, "Output"]
}, Open  ]],
Cell[44554, 1388, 5547, 156, 97, "Input"],
Cell[CellGroupData[{
Cell[50126, 1548, 706, 19, 28, "Input"],
Cell[50835, 1569, 2010, 56, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52882, 1630, 443, 12, 28, "Input"],
Cell[53328, 1644, 101706, 2370, 1719, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155071, 4019, 55, 1, 28, "Input"],
Cell[155129, 4022, 19094, 432, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174260, 4459, 208, 5, 28, "Input"],
Cell[174471, 4466, 77, 1, 28, "Output"]
}, Open  ]],
Cell[174563, 4470, 187, 4, 30, "Text"],
Cell[174753, 4476, 2581, 64, 119, "Input"],
Cell[177337, 4542, 271, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[177633, 4552, 8312, 238, 216, "Input"],
Cell[185948, 4792, 464, 9, 24, "Message"],
Cell[186415, 4803, 4863, 146, 147, "Output"]
}, Open  ]],
Cell[191293, 4952, 125, 1, 30, "Text"],
Cell[191421, 4955, 973, 31, 44, "DisplayFormula"],
Cell[192397, 4988, 96, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[192518, 4993, 1631, 50, 80, "Input"],
Cell[194152, 5045, 1559, 48, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195760, 5099, 235, 5, 64, "Section"],
Cell[195998, 5106, 601, 9, 68, "Text"],
Cell[196602, 5117, 30807, 685, 1358, "Input"],
Cell[CellGroupData[{
Cell[227434, 5806, 1043, 28, 46, "Input"],
Cell[228480, 5836, 392954, 6458, 190, 383738, 6306, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[621449, 12297, 419, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[621893, 12314, 240, 5, 28, "Input"],
Cell[622136, 12321, 233, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622406, 12330, 193, 4, 28, "Input"],
Cell[622602, 12336, 161, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622800, 12344, 12503, 324, 743, "Input"],
Cell[635306, 12670, 8971, 158, 246, "Output"],
Cell[644280, 12830, 52850, 932, 245, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
